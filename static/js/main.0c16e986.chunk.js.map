{"version":3,"sources":["documents/robbie-gay-resume.pdf","Homepage.js","NavBar.js","Footer.js","PageFormat.js","Blog.js","ProjectsViewer.js","Portfolio.js","CountUpTimer.js","Music.js","AuthorCard.js","blogPosts/PWWeek1.js","blogPosts/PWWeek2.js","blogPosts/PWWeek3.js","blogPosts/PWWeek4.js","blogPosts/BCWeek1.js","blogPosts/BCWeek2.js","blogPosts/BCWeek3.js","blogPosts/BCWeek4.js","blogPosts/BCWeek5.js","blogPosts/BCWeek6.js","BlogPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","props","blogButton","portfolioButton","musicButton","centerX","centerY","yPerc","time","ftime","space","grid","cu","Color","lab","maxValues","columnNum","size","x","y","this","form","font","color","p","p1","$divide","colorIntensity","pointer","c1","$multiply","Pt","make","to","LABtoRGB","toString","i","len","Create","gridCells","innerBound","length","ceil","c","interpolate","Num","cycle","fillOnly","rect","nameRect","Rectangle","fromCenter","fill","stroke","alignText","paragraphBox","blogRect","render","g","polygon","portfolioRect","musicRect","type","event","UI","track","bound","hovOn","ui","group","scale","centroid","hovOff","UIButton","fromPolygon","onClick","changePage","onHover","bindMouse","bindTouch","play","PtsCanvas","NavBar","Navbar","expand","sticky","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Text","PageFormat","Container","fluid","Row","Col","xs","sm","md","lg","children","Blog","title","target","rel","Accordion","Card","Header","style","backgroundColor","as","variant","eventKey","Body","datetime","ProjectsViewer","CardDeck","Title","Portfolio","Image","src","roundedCircle","class","fontSize","height","width","display","Button","Pdf","CountUpTimer","useState","Date","firstSongDate","years","days","hrs","min","sec","mil","countdown","setCountdown","h","m","d","useEffect","timer","setInterval","totalM","now","valueOf","Math","floor","hours","milli","clearInterval","Music","scrolling","frameborder","allow","rounded","AuthorCard","maxWidth","Img","alt","date","PWWeek1","PWWeek2","Carousel","Item","Caption","PWWeek3","PWWeek4","BCWeek2","BCWeek3","BCWeek4","BCWeek5","BlogPost","state","blogPost","idx","window","location","pathname","lastIndexOf","slice","setState","BCWeek1","BCWeek6","console","log","getPost","React","Component","App","exact","path","pageName","document","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c16e986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robbie-gay-resume.f6af71ba.pdf\";","import { PtsCanvas } from 'react-pts-canvas';\nimport { Color, Create, Pt, Num, Rectangle, UIButton, UI, Bound } from 'pts';\n\nclass Homepage extends PtsCanvas {\n    constructor(props) {\n        super(props);\n        this.blogButton = null;\n        this.portfolioButton = null;\n        this.musicButton = null;\n        // this.currBound = new Bound();\n\n        this.centerX = null;\n        this.centerY = null;\n        this.yPerc = null;\n    }\n\n    animate(time, ftime, space) {\n        // Background\n        var grid = [];\n        let cu = Color.lab(Color.maxValues(\"lab\"))\n        let ratio = space.size.x / space.size.y;\n        let columnNum = 20 * ratio\n        let rowNum = 20\n        this.form.font(75, \"normal\", \"normal\", 1, \"Roboto\")\n        grid = Create.gridCells(space.innerBound, columnNum, rowNum);\n\n        // get LAB color string, given a point position\n        let color = (p) => {\n            let p1 = p.$divide(space.size);\n            let p2 = space.pointer.$divide(space.size);\n            let colorIntensity = 0.65 - (p2.y * 0.3)\n            let c1 = cu.$multiply(Pt.make(4, 1).to(colorIntensity, p1.x - 0.5, p1.y - 0.5));\n            return Color.LABtoRGB(c1).toString(\"rgb\");\n        }\n\n        for (let i = 0, len = grid.length; i < len; i++) {\n            grid[i][1].ceil();\n            let c = grid[i].interpolate(Num.cycle((time + i * 60) % 1000 / 1000));\n            this.form.fillOnly(color(c)).rect(grid[i]);\n        }\n        \n        // Textbox\n        this.centerX = space.size.x / 2\n        this.centerY = space.size.y / 2\n        this.yPerc = space.size.y / 100\n\n        let nameRect = Rectangle.fromCenter( [this.centerX,this.centerY - (this.yPerc * 15)], 400  ); //size.$max( space.size.$divide(6) )\n        this.form.fill(\"rgba(0,0,0,0)\").font(75).stroke(\"rgba(0,0,0,0)\", 3).rect( nameRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( nameRect, \"robbiegay\", 1, \"middle\", false );\n\n        let blogRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 10)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( blogRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( blogRect, \"dev blog\", 1, \"middle\", false );\n        this.blogButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n\n        let portfolioRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 20)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( portfolioRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( portfolioRect, \"portfolio\", 1, \"middle\", false );\n        this.portfolioButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n\n        let musicRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 30)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( musicRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( musicRect, \"music\", 1, \"middle\", false );\n        this.musicButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n    }\n\n    action(type, x, y, event) { \n        UI.track( [this.blogButton, this.portfolioButton, this.musicButton], type, new Pt(x, y), event );\n    }\n\n    start(bound, space) {\n        let hovOn = (ui) => ui.group.scale(1.1, ui.group.centroid());;\n        let hovOff = (ui) => ui.group.scale(100/110, ui.group.centroid());\n        this.centerX = space.size.x / 2\n        this.centerY = space.size.y / 2\n        this.yPerc = space.size.y / 100\n\n        this.blogButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 6)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 14)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 14)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 6)]\n        ] );\n        this.blogButton.onClick( x => { \n            this.props.changePage(\"blog\");\n        } );\n        this.blogButton.onHover( hovOn, hovOff );\n\n        this.portfolioButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 16)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 24)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 24)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 16)]\n        ] );\n        this.portfolioButton.onClick( x => { \n            this.props.changePage(\"portfolio\");\n        } );\n        this.portfolioButton.onHover( hovOn, hovOff );\n\n        this.musicButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 26)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 34)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 34)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 26)]\n        ] );\n        this.musicButton.onClick( x => { \n            this.props.changePage(\"music\");\n        } );\n        this.musicButton.onHover( hovOn, hovOff );\n\n        space.bindMouse().bindTouch().play();\n    }  \n\n    // resize (size, event) { \n    //     let centerX = size.center.x;\n    //     let centerY = size.center.y;\n    //     // this.currBound = size;\n\n    //     console.log(\"size center x =>\",size.center.x);\n\n\n    //     // if (this.blogButton) {\n    //     //     this.blogButton.Pt()\n            \n    //     //     // ([\n    //     //     //     [0,0],\n    //     //     //     [0,25],\n    //     //     //     [25,25],\n    //     //     //     [25,0]\n    //     //     // ]);\n    //     // }\n    // }\n}\n\nexport default Homepage\n\n/*\nHomepage:\n- 5. Button should resize to stay with text\n\nBlog:\n- Add blog post CSS? Change class to className\n- Add backlog of 19 blog posts\n\nGeneral:\n- Message on old site about new on\n- Update website address on other profiles (and maybe awesome inc)\n- Blog spellchecks from Mom on most recent post\n- Check for ' vs \"\n\n*/\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction NavBar() {\n    return (\n        <>\n        <Router>\n            <Navbar expand=\"md\" sticky=\"top\" bg=\"light\"> \n                <Navbar.Brand href=\"/\">robbiegay</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/blog\">blog</Nav.Link>\n                        <Nav.Link href=\"/portfolio\">portfolio</Nav.Link>\n                        <Nav.Link href=\"/music\">music</Nav.Link>\n                        {/* <Nav.Link target=\"_blank\" href=\"https://soundcloud.com/robbiegay\">music</Nav.Link> */}\n                        {/* <Nav.Link target=\"_blank\" href=\"https://github.com/robbiegay\">github</Nav.Link> */}\n                        {/* <Nav.Link target=\"_blank\" href=\"https://www.linkedin.com/in/robbiegay/\">linkedin</Nav.Link> */}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            </Router>\n        </>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction Footer() {\n    return (\n        <>\n            <footer>\n                <Navbar sticky=\"bottom\" bg=\"light\">\n                    <Navbar.Text>\n                        <em>&copy; 2020 Robbie Gay. All rights reserved.</em>\n                    </Navbar.Text>\n                </Navbar>\n            </footer>\n        </>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction PageFormat(props) {\n    return (\n        <>\n            <Container fluid>\n                <Row>\n                    <Col xs={0} sm={1} md={2} lg={3}></Col>\n                    <Col xs={12} sm={10} md={8} lg={6}>\n                        <article className=\"text-justify\">\n                            {props.children}\n                        </article>\n                    </Col>\n                    <Col xs={0} sm={1} md={2} lg={3}></Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default PageFormat;\n","import React from 'react';\nimport NavBar from './NavBar';\nimport Footer from './Footer'\nimport PageFormat from './PageFormat'\nimport { Card, Accordion } from 'react-bootstrap';\n\nfunction Blog() {\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Blog Posts</h1>\n            <PageFormat>\n                <p>\n                    Welcome to my blog! This blog started as an assignment for\n                    the <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Webpage\" target=\"_blank\" rel=\"noopener noreferrer\">Awesome Inc Web Developer's Bootcamp</a>.\n                    I have continued to post articles (at a much slower rate) about web and mobile development\n                    topics that are interesting to me. Below you can find a list of blog articles. I hope you enjoy!\n                </p>\n\n                <Accordion>\n                    {/* defaultActiveKey=\"0\" */}\n                    <Card>\n                        <Card.Header style={{ backgroundColor: 'lightGray' }} className=\"text-center\">\n                            <b>2019 — Awesome Inc Bootcamp</b>\n                        </Card.Header>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\n                            August\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-08-30\">8.30.2019</time>\n                                        : <a href=\"/blog/PWWeek1\" title=\"Prework Week 1 Blog Post\">\n                                            Prework Week 1: Git and Github\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\">\n                            September\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-09-02\">9.2.2019</time>\n                                        : <a href=\"/blog/PWWeek2\" title=\"Prework Week 2 Blog Post\">\n                                            Prework Week 2: HTML, CSS, and Pseudo Code\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-07\">9.7.2019</time>\n                                        : <a href=\"/blog/PWWeek3\" title=\"Prework Week 3 Blog Post\">\n                                            Prework Week 3: JavaScript\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-13\">9.13.2019</time>\n                                        : <a href=\"/blog/PWWeek4\" title=\"Prework Week 4 Blog Post\">\n                                            Prework Week 4: More JavaScript\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-22\">9.22.2019</time>\n                                        : <a href=\"/blog/BCWeek1\" title=\"Bootcamp Week 1 Blog Post\">\n                                            Bootcamp Week 1: Bootstrap\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-29\">9.29.2019</time>\n                                        : <a href=\"/blog/BCWeek2\" title=\"Bootcamp Week 2 Blog Post\">\n                                            Bootcamp Week 2: JavaScript Projects\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"2\">\n                            October\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"2\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-10-05\">10.5.2019</time>\n                                        : <a href=\"/blog/BCWeek3\" title=\"Bootcamp Week 3 Blog Post\">\n                                            Bootcamp Week 3: More JavaScript Projects\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-13\">10.13.2019</time>\n                                        : <a href=\"/blog/BCWeek4\" title=\"Bootcamp Week 4 Blog Post\">\n                                            Bootcamp Week 4: Saying Goodbye to Vanilla JS\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-20\">10.20.2019</time>\n                                        : <a href=\"/blog/BCWeek5\" title=\"Bootcamp Week 5 Blog Post\">\n                                            Bootcamp Week 5: React.JS\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-26\">10.26.2019</time>\n                                        : <a href=\"/blog/BCWeek6\" title=\"Bootcamp Week 6 Blog Post\">\n                                            Bootcamp Week 6: More React, A Halfway Point\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"3\">\n                            November\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"3\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-11-3\">11.3.2019</time>\n                                        : <a href=\"/blog/BCWeek7\" title=\"Bootcamp Week 7 Blog Post\">\n                                            Bootcamp Week 7: Back End Development\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-9\">11.9.2019</time>\n                                        : <a href=\"/blog/BCWeek8\" title=\"Bootcamp Week 8 Blog Post\">\n                                            Bootcamp Week 8: Laravel Library\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-17\">11.17.2019</time>\n                                        : <a href=\"/blog/BCWeek9\" title=\"Bootcamp Week 9 Blog Post\">\n                                            Bootcamp Week 9: Catgram\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-24\">11.24.2019</time>\n                                        : <a href=\"/blog/BCWeek10\" title=\"Bootcamp Week 10 Blog Post\">\n                                            Bootcamp Week 10: Final Projects\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"4\">\n                            December\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"4\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-12-01\">12.1.2019</time>\n                                        : <a href=\"/blog/BCWeek11\" title=\"Bootcamp Week 11 Blog Post\">\n                                            Bootcamp Week 11: Final Project Prototype\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-07\">12.7.2019</time>\n                                        : <a href=\"/blog/BCWeek12\" title=\"Bootcamp Week 12 Blog Post\">\n                                            Bootcamp Week 12: Demo Day\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-15\">12.15.2019</time>\n                                        : <a href=\"/blog/JHWeek1\" title=\"Job Hunt Week 1 Blog Post\">\n                                            30-60-90\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-31\">12.31.2019</time>\n                                        : <a href=\"/blog/JHWeek4\" title=\"Job Hunt Week 4 Blog Post\">\n                                            React Hooks\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Card.Header style={{ backgroundColor: 'lightGray' }} className=\"text-center\">\n                            <b>2020 — Freelance Web and Mobile Developer</b>\n                        </Card.Header>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"5\">\n                            January\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"5\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2020-01-31\">1.31.2020</time>\n                                        : <a href=\"/blog/20Week5\" title=\"Job Hunt Week 8 Blog Post\">\n                                            Swift vs React\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"6\">\n                            February\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"6\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2020-02-29\">2.29.2020</time>\n                                        : <a href=\"/blog/20Week9\" title=\"Job Hunt Week 12 Blog Post\">\n                                            Design\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </PageFormat>\n\n            <br /><br /><br />\n            <Footer />\n        </>\n    );\n}\n\nexport default Blog;\n","import React from 'react';\nimport { CardDeck, Card } from 'react-bootstrap';\n\nfunction ProjectsViewer() {\n    // let fontSize = \"30px\";\n    // let largerSize = \"75px\";\n\n    return (\n        <>\n            <CardDeck>\n                <Card>\n                    <Card.Header>Facebook Emulator</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Swift</Card.Title>\n                        <Card.Text>\n                        <ul>\n                            <li>\n                                <a href=\"https://github.com/robbiegay/swift-facebook\">GitHub Repo</a>\n                            </li>\n                        </ul>\n                            In order to both help onboard Swift 5, and make me more comfortable working \n                            in Xcode/iOS simulators, I created an emulation of the Facebook homepage. I called \n                            my version of the app \"Robbiebook\".\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">January 2020</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Phone Simulator</Card.Header>\n                    <Card.Body>\n                        <Card.Title>React.js and Hooks</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/phone-sim/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/phone-sim\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            For the Phone Simulator, I combined 6 projects that we worked on during\n                            the Awesome Inc Web Developer Bootcamp. The Phone Simulator displays the\n                            current time at the top of the \"screen\". Below that, there is a weather\n                            module that pulls realtime weather data based on your current location.\n                            Below the weather app is a countdown timer (currently set to countdown\n                            to my birthday — March 21st). Below the countdown timer are three\n                            applications: Calculator, Todo List, and Mind Reader.\n                            <br /><br />\n                            For this project, I wanted to \n                            use <a href=\"https://reactjs.org/docs/hooks-intro.html\" title=\"React Hooks Documentation\">React Hooks</a>, as\n                            these are a feature of React that I was previously not too familiar with.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">January 2020</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Laravel Library</Card.Header>\n                    <Card.Body>\n                        <Card.Title>PHP and Laravel</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/laravel-library\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a website and checkout system for a fictional library.\n                            Used foreign keys to link between tables, allowing book and\n                            user data to be connected. Allowed users to sign-up for an account.\n                            Gave librarians the ability to add books to the database. Books can be\n                            added manually or by using searching \n                            the <a href=\"https://developers.google.com/books\">Google Books API</a>.\n                            Librarians can checkout or return books by entering the books ISBN\n                            number, and the user's username. Checked out books appear in red on \n                            the view all books page. Utilized\n                            the seven <a href=\"https://laracasts.com/series/laravel-6-from-scratch/episodes/21\">RESTful controller actions</a> and \n                            the four <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\">CRUD principles</a>.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">November 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>React Restaurant</Card.Header>\n                    <Card.Body>\n                        <Card.Title>React.js</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/react-restaurant/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/react-restaurant\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a website for a fictional restaurant located at Awesome Inc!\n                            Used the <a href=\"https://entree-f18.herokuapp.com/\">Random Menu Generator API</a> to \n                            get a list of random menu items, and then pulled both a title and a description from\n                            that JSON file. Generated random menu prices and included a parameter for low, medium,\n                            and high price range items. Menu items are stored in Local Storage,\n                            allowing for menu consistency across page loads (restaurant name, operating \n                            hours, and item prices are not saved to Local Storage and will reload upon each page load).\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>To-Do List</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Local Storage</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/to-do-list/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/to-do-list\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Worked with \n                            the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" title=\"MDN Documentation\">Local Storage API</a> in \n                            order to build a To-Do List app that can save entires\n                            between page loads. Has several \"view states\", allowing\n                            users to toggle between viewing: all entries, completed\n                            entires, or entries that you have yet to complete.                        \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Sliding Puzzle</Card.Header>\n                    <Card.Body>\n                        <Card.Title>JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/sliding-puzzle/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/sliding-puzzle\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a Sliding Puzzle game that allows users to rearrange a 4x4 grid\n                            of tiles to create a completed image. Built using an object-oriented\n                            approach, using an array of objects to store information such as the \n                            name of the tile, and the tile's current location on the board. Users \n                            can upload their own image or use the provided default image.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Calculator</Card.Header>\n                    <Card.Body>\n                        <Card.Title>HTML and JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/calculator/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/calculator\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Created a calculator app that can perform various mathematical functions.\n                            Dynamically rendered the HTML elements using JS. The most challenging\n                            aspect was dealing with various \"edge-case\" scenarios. The calculator would\n                            work pretty well if users performed a basic math function (ex. 5 + 3), then \n                            cleared the memory (\"C\" button), and then performed another basic math \n                            function. A real world user, however, would likely use the calculator in \n                            many different ways. There were a multitude of orders in which the user \n                            might press various buttons. Additionally, there had to be ways of dealing with\n                            inputs that didn't make much sense at all (ex. What would happen if the\n                            user inputted: + - 53 + / 4 - 4?). And the final (and perhaps most difficult)\n                            part of dealing with edge-cases was getting to a point where you had several \n                            fixes for very specific situations, and then had to try to not break any of \n                            those old fixes whenever you implemented a fix for a new scenario.                       \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Tic-Tac-Toe</Card.Header>\n                    <Card.Body>\n                        <Card.Title>HTML and JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/tic-tac-toe/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/tic-tac-toe\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a Tic-Tac-Toe game that allows two users to play against each\n                            other. Used nested arrays to test win conditions against the current board\n                            setup. Includes a reset button that allows the board to be reset. After at \n                            least 1 game has been played, a tally appears that keeps track of X wins, \n                            O wins and ties.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">September 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n        </>\n    );\n}\n\nexport default ProjectsViewer;","import React from 'react';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport PageFormat from './PageFormat';\nimport ProjectsViewer from './ProjectsViewer';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport Pdf from './documents/robbie-gay-resume.pdf';\n\nfunction Portfolio() {\n    let fontSize = \"30px\";\n    let largerSize = \"75px\";\n\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Robbie Gay</h1>\n            <PageFormat>\n                <Container>\n                    <Row>\n                        <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Image src={process.env.PUBLIC_URL + '/images/headshot-short-hair.jpg'} roundedCircle fluid />\n                        </Col>\n                        <Col xs={2}></Col>\n                    </Row>\n                </Container>\n                <br />\n\n                {/* GitHub and LinkedIn Links */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <p>\n                            <a href=\"https://www.linkedin.com/in/robbiegay/\" title=\"My LinkedIn Profile\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin\" style={{ color: \"#0077b5\", fontSize: largerSize }}></i></a>{' '}\n                            <a href=\"https://github.com/robbiegay\" title=\"My GitHub Profile\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github-square\" style={{ color: \"#24292e\", fontSize: largerSize }}></i></a>\n                        </p>\n                    </Col>\n                    <Col></Col>\n                </Row>\n\n                {/* Bio */}\n                <p>\n                    Hi, my name is Robbie Gay. I graduated\n                    from <a href=\"https://www.centre.edu\" title=\"Centre's Website\">Centre College</a> in\n                    the Spring of 2016 with a degree in English Literature and a minor in Film Studies.\n                    For 3 years I pursued my passion for filmmaking, photography, and music, while working\n                    part time as a property manager for the Downtown Co. in Versailles, KY.\n                    In the fall of 2019, I\n                    completed <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Website\">Awesome Inc's Web Developer Bootcamp</a>, where\n                    I learned Full Stack Web Development (LAMP Tech Stack). I currently work as a Freelance mobile and web\n                    developer, with the help of my boss/mentor <a href=\"https://warnerdesigntechnology.com/\" title=\"Tommy's Website\">Tommy Warner</a>.\n                    Additionally, I still\n                    make <a href=\"https://soundcloud.com/robbiegay\" title=\"My SoundCloud Page\">music</a>! I'm\n                    mostly a laptop musician, but my goal in 2020 is to learn jazz piano — stay tuned! I also\n                    manage the RPM playbox (electronic music) for <a href=\"http://wrfl.fm/\" title=\"WRFL's website\">WRFL</a>.\n                </p>\n\n                {/* Language Icons */}\n                <p className=\"text-justify\">\n                    {/* <i className=\"fas fa-terminal\" style={{ color: \"#37932e\", fontSize: fontSize }}></i>{' '} */}\n                    <a href=\"https://git-scm.com/\" title=\"Git\"><i className=\"fab fa-git-alt\" style={{ color: \"#fb4f28\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://github.com/\" title=\"GitHub\"><i className=\"fab fa-github\" style={{ color: \"#24292e\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://www.w3schools.com/html/\" title=\"HTML\"><i className=\"fab fa-html5\" style={{ color: \"#ef652a\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://www.w3schools.com/css/\" title=\"CSS\"><i className=\"fab fa-css3-alt\" style={{ color: \"#2965f2\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://www.w3schools.com/js/\" title=\"JavaScript\"><i className=\"fab fa-js\" style={{ color: \"#f5df18\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://swift.org/\" title=\"Swift\"><i className=\"fab fa-swift\" style={{ color: \"#f15138\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://getbootstrap.com/\" title=\"Bootstrap\"><i className=\"fab fa-bootstrap\" style={{ color: \"#563d7d\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://reactjs.org/\" title=\"React\"><i className=\"fab fa-react\" style={{ color: \"#5fd7f6\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://www.php.net/\" title=\"PHP\"><i className=\"fab fa-php\" style={{ color: \"#8992c0\", fontSize: fontSize }}></i></a>{' '}\n                    {/* Added bottom margins to images to push their top alignment even with icons */}\n                    <a href=\"https://www.mysql.com/\" title=\"MySQL\"><Image src={process.env.PUBLIC_URL + '/languageIcons/mysql.png'} style={{ height: fontSize }} className=\"mb-3\" /></a>{' '}\n                    <a href=\"https://laravel.com/\" title=\"Laravel\"><i className=\"fab fa-laravel\" style={{ color: \"#ff4841\", fontSize: fontSize }}></i></a>{' '}\n                    <a href=\"https://firebase.google.com/\" title=\"Firebase\"><Image src={process.env.PUBLIC_URL + '/languageIcons/firebase.png'} style={{ height: fontSize }} className=\"mb-3\" /></a>{' '}\n                    <a href=\"https://ptsjs.org/\" title=\"Pts.js\"><Image src={process.env.PUBLIC_URL + '/languageIcons/pts.png'} style={{ height: fontSize }} className=\"mb-3\" /></a>{' '}\n                    <a href=\"https://tonejs.github.io/\" title=\"Tone.js\"><Image src={process.env.PUBLIC_URL + '/languageIcons/tone.png'} style={{ height: fontSize }} className=\"mb-3\" /></a>\n                    {/* Hack to spread the icons evenly across the line */}\n                    <span style={{ width: \"100%\", display: \"inline-block\" }}></span>\n                </p>\n\n                {/* Resume */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <Button href={Pdf} target=\"_blank\">\n                            Resume\n                        </Button>\n                        <br /><br />\n                    </Col>\n                    <Col></Col>\n                </Row>\n\n                {/* Projects */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <h2>Projects</h2>\n                        <br />\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <ProjectsViewer />\n            </PageFormat>\n            <Footer />\n        </>\n    );\n}\n\nexport default Portfolio;\n","import { useState, useEffect } from 'react';\n\nfunction CountUpTimer() {\n    const [firstSongDate] = useState(new Date(2013, 4, 30, 11, 39));\n    const [countdown, setCountdown] = useState({\n        years: null,\n        days: null,\n        hrs: null,\n        min: null,\n        sec: null,\n        mil: null,\n    });\n\n    const m = 1000 * 60;\n    const h = m * 60;\n    const d = h * 24;\n    const y = d * 365.2425\n\n    // function addZeros(x) {\n    //     x = x < 10 ? `0${x}` : x;\n    //     return x;\n    // }\n\n    useEffect(() => {\n        const timer = setInterval(\n            () => {\n                var totalM = Date.now() - firstSongDate.valueOf();\n                var years = Math.floor(totalM / y);\n                totalM -= years * y;\n                var days = Math.floor(totalM / d);\n                totalM -= days * d;\n                var hours = Math.floor(totalM / h);\n                totalM -= hours * h;\n                var min = Math.floor(totalM / m);\n                totalM -= min * m;\n                var sec = Math.floor(totalM / 1000);\n                totalM -= sec * 1000;\n                var milli = Math.floor(totalM / 100);\n                setCountdown({\n                    years: years,\n                    days: days,\n                    hrs: hours,\n                    min: min,\n                    sec: sec,\n                    mil: milli,\n                });\n            }, 100\n        );\n\n        return function cleanup() {\n            clearInterval(timer);\n        }\n    });\n\n    return (\n            countdown.years + ' years ' +\n            countdown.days + ' days ' +\n            countdown.hrs + ' hours ' +\n            // Seconds.tenths option\n            countdown.min + ' minutes and ' +\n            countdown.sec + '.' +\n            countdown.mil + ' seconds'\n\n            // Milliseconds option -> turn on addZeros() and \n            // change milli / num and interval num to 10 or 1\n            // countdown.min + ' minutes ' +\n            // countdown.sec + ' seconds and ' +\n            // countdown.mil + ' milliseconds'\n            // addZeros(countdown.mil) + ' milliseconds'\n    );\n}\n\nexport default CountUpTimer;\n","import React from 'react';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport PageFormat from './PageFormat';\nimport CountUpTimer from './CountUpTimer';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\n\nfunction Music() {\n    let largerSize = \"75px\";\n\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Music</h1>\n            <br />\n            <PageFormat>\n                {/* Soundcloud Players */}\n                <iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/766901725&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_comments=true&show_user=true&show_reposts=true&show_teaser=true&visual=true\" />\n                {/* Music Bio */}\n                {/* Song total -> from start till bootcamp = 88 songs and covers, excluding short ideas */}\n                <p>\n                    I have been making mostly mediocre music for the last <span className=\"clockFont\"><CountUpTimer /></span>.\n                    I started making music as a first-year student at Centre College. I took a 1-credit\n                    \"Digital Music Production\" course, and with the help of my professor, Dr. Dan Worley,\n                    made a remix of an XX song. I spent the next 4 years at Centre filling my schedule with\n                    as many music theory, music production, and music performance classes as I fit. When\n                    I graduated in May 2016, I decided that I wanted to spend the next few years pursing music\n                    full-time. I moved in with my parents, worked several part-time jobs, and spent most\n                    of my time making music. During the next 3 years, I made lot of music while also reviving some old passions in\n                    filmmaking (<a href=\"https://www.youtube.com/robbiegay\" title=\"filmmaking portfolio\">filmmaking portfolio</a>) and\n                    photography (<a href=\"https://www.instagram.com/robbiegay/\" title=\"photography portfolio\">photography portfolio</a>).\n                    After 3 years of working in the arts, I decided that I wanted to pursue a day job that was\n                    both interesting and financially in-demand. I was really fortunate to hear\n                    about Awesome Inc's  <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Website\">Web Developer Bootcamp</a>, and\n                    I spent the Fall of 2019 completing that course. During this time, I took a break from making music.\n                    I had become burnt out on trying to make music a career, on trying to make songs that could be\n                    popular enough for me to make a living making them. During the Spring of 2020, I have been slowly\n                    getting back into making music, but with a focus now on exploring ideas that interest me. I have\n                    also made in my resolution for 2020 to try to learn Jazz Piano. As a laptop musician, I look forward to\n                    being able to play something that doesn't have to be plugged into the wall. At the top of the page\n                    you can hear an example of a recent song, or you can find links to various music platforms down below!\n            </p>\n\n                {/*  Music making photo */}\n                <Image src={process.env.PUBLIC_URL + '/images/making-music.jpg'} rounded fluid />\n\n                <br /><br />\n                <Container>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col xs={6}>\n                            <p className=\"text-justify\">\n                                <a href=\"https://robbiegay.bandcamp.com/\" title=\"My BandCamp Page\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-bandcamp\" style={{ color: \"#1ea1c3\", fontSize: largerSize }}></i></a>{' '}\n                                <a href=\"https://soundcloud.com/robbiegay\" title=\"My SoundCloud Page\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-soundcloud\" style={{ color: \"#ff6c02\", fontSize: largerSize }}></i></a>{' '}\n                                {/* <a href=\"https://www.youtube.com/robbiegay\" title=\"My YouTube Channel\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-youtube\" style={{ color: \"#ff0000\", fontSize: largerSize }}></i></a> */}\n                                {/* Hack to spread the icons evenly across the line */}\n                                <span style={{ width: \"100%\", display: \"inline-block\" }}></span>\n                            </p>\n                        </Col>\n                        <Col xs={3}></Col>\n                    </Row>\n                </Container>\n            </PageFormat>\n\n            <Footer />\n        </>\n    );\n}\n\nexport default Music;\n","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\n\nfunction AuthorCard(props) {\n    return (\n        <>\n            <heading>\n                <h1 className=\"pt-4 pb-3 text-center\">{props.title}</h1>\n\n                <Card style={{maxWidth: \"300px\"}}>\n                    <Row className=\"no-gutters\">\n                        <Col xs={4}>\n                            <Card.Img src=\"/blogAssets/img/robbie-gay-cropped.jpg\" alt=\"Robbie Gay\" />\n                        </Col>\n                        <Col xs={8}>\n                            <Card.Body>\n                                <Card.Title>Robbie Gay</Card.Title>\n                                <Card.Text>{props.date}</Card.Text>\n                            </Card.Body>\n                        </Col>\n                    </Row>\n                </Card>\n                <br />\n\n            </heading>\n        </>\n    );\n}\n\nexport default AuthorCard;","import React from 'react';\n\nfunction PWWeek1() {\n    return (\n        <>\n            <article className=\"text-justify\">\n                <h3 className=\"text-center\">Welcome!</h3>\n                <p>\n                    Welcome to my blog! Here I’ll be posting regular updates about \n                    the <a href=\"https://www.awesomeincu.com/bootcamp/\" title=\"Awesome Inc Web Dev Bootcamp\">Awesome Inc Web Dev Bootcamp</a>. This \n                    first post covers Prework Week 1, but is being written towards the end of \n                    Week 2 — as we had to learn some basic <abbr title=\"Hypertext Markup Language\">HTML</abbr>\n                    /<abbr title=\"Cascading Style Sheets\">CSS</abbr> in order to create a blog post to begin with!\n                </p>\n\n                <h3 className=\"text-center\">First Week of Prework</h3>\n                <p>\n                    Our first week started with a meet up at Awesome Inc. We got a chance to \n                    meet our fellow bootcampers (there are 11 of us!), as well as meet our 3 \n                    instructors: <a href=\"https://www.justinhall.com/\" title=\"Justin Hall's Website\">Justin</a>,{' '}\n                    <a href=\"http://ianrios.me/\" title=\"Ian Rios' Website\">Ian</a>, \n                    and <a href=\"https://jmstewart00.github.io/\" title=\"Josh Stewart's Website\">Josh</a>.\n                    <br /><br />\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/awesome-u-bootcamp-curriculum.png\"\n                            alt=\"The Awesome Inc U Bootcamp Curriculum\" />\n                        <figcaption className=\"figure-caption text-center\">source: <a\n                                href=\"https://www.awesomeincu.com/bootcamp/\">\n                                Awesome Inc Web Dev Bootcamp</a></figcaption>\n                    </figure>\n                    <br />\n                </p>\n\n                <h3 className=\"text-center\">The Learning Curve</h3>\n                <p>\n                    My favorite takeaway from our initial meet up was this cool graphic on the stages of learning:\n                    <br /><br />\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/awesome-learning-curve.png\"\n                            alt=\"Awesome Learning Curve\" />\n                        <figcaption className=\"figure-caption text-center\">source: <a\n                                href=\"https://www.thinkful.com/blog/why-learning-to-code-is-so-damn-hard/\">\"Why\n                                Learning to Code is so Damn Hard\"</a></figcaption>\n                    </figure>\n\n                    <br />\n                    I love reading books about learning. I read (skimmed) Malcolm \n                    Gladwell’s <a href=\"https://en.wikipedia.org/wiki/Outliers_(book)\" title=\"Outliers by Malcolm Gladwell\">“Outliers”</a> a \n                    few months ago, and have been working my way through the public library’s \n                    collection of Cal \n                    Newport (<a href=\"http://www.calnewport.com/books/so-good/\" title=\"So Good They Can’t Ignore You by Cal Newport\">\n                        “So Good They Can’t Ignore You”</a> is an awesome take on learning new skills;{' '}\n                    <a href=\"http://www.calnewport.com/books/digital-minimalism/\"\n                        title=\"Digital Minimalism by Cal Newport\">“Digital Minimalism”</a>{' '}\n                    caused me to delete all social media from my phone and to disable its internet browser). I’d\n                    seen images of learning\n                    curves, and read various theories about the path someone takes when learning a new skill, but I\n                    had never stumbled\n                    across something that broke it down like this graphic did.\n                </p>\n                <p>\n                    The graphic itself has 3 sections: confidence, resource density, and scope of knowledge. As you\n                    progress\n                    left to right, you go through various stages for each, while steadily increasing your\n                    competency. What I liked\n                    most about this was the confidence meter and the resource density sections.\n                </p>\n                <p>\n                    I think that anyone who has tried to learn a new skill has likely experienced that initial boost\n                    in confidence.\n                    You start learning a new skill and (because you started at zero) you progress very quickly.\n                    You’re flying through\n                    the plethora of beginner's resources and climbing the learning curve so rapidly that you’re\n                    <em>convinced</em> that\n                    this time next week you’ll be working for Google. <br />\n                    <br />\n                    Then you crest that initial hill. <br />\n                    <br />\n                    When you started, you didn’t know enough to know what you didn’t know. As such, you felt like it\n                    would be pretty\n                    simple to acquire all of the information you would need. Now, after a few weeks of rapid\n                    learning, you finally know\n                    enough about whatever skill you are learning to realize just how much you have left to learn.\n                    Your small pond\n                    turned out to be a big ocean. And that’s where the confidence drop comes from — correspondingly,\n                    it’s also likely\n                    that this is where most newcomers flame out.<br />\n                    <br />\n                    To add to this blow, the graphic also shows a rapid increase in resource\n                    scarcity. My own thoughts on this are that there are two markets for those who create such\n                    resources:\n                </p>\n                <ol>\n                    <li>Beginners</li>\n                    <li>Experts (Paid Professionals)</li>\n                </ol>\n                <p>\n                    In most fields, there are likely way more people in the beginning market than at any other\n                    junction.\n                    So, despite the fact that beginners likely aren’t making money yet\n                    (and therefore don’t have much money to invest in learning resources), the sheer size of this\n                    market makes\n                    it appealing for resource creators to create content for. <br />\n                    <br />\n                    At the other end of the spectrum, experts likely represent a small percentage of the total\n                    audience. Since they are paid for\n                    their work, however, they can likely afford to pay a premium for advanced level knowledge\n                    resources. This leaves\n                    a small market for those skill-learners who are beyond the scope of the beginner resource but\n                    below the level\n                    of the expert resource. <br />\n                    <br />\n                    This creates a “desert of despair”, as the graphic calls it, where your confidence level is\n                    knocked down\n                    several pegs AND those learning resources that helped you advance so quickly early on are\n                    becoming more\n                    and more scarce. <br />\n                    <br />\n                    This learning curve graphic goes on to point out that:\n                </p>\n                <ol>\n                    <li>Despite this feeling of hopelessness, <strong>others before you have had the same\n                            experience</strong>.\n                        The graphic encourages us to keep pushing.</li>\n                    <li>Despite the fluctuations in confidence and resources, your competencey is steadily\n                        increasing\n                        throughout this journey.</li>\n                </ol>\n                <p>\n                    Note: I didn’t mention the 3rd category, \"scope of knowledge\" — that’s basically showing how a\n                    beginner\n                    absorbs broad fundamentals early on before specializing (and decreasing total breadth of\n                    knowledge) later on in their journey.<br />\n                    <br />\n                    ~Phew~ Sorry for the big rant on learning curves — on to the meat and potatoes of Prework Week\n                    1.\n                    <br /><br />\n\n                    <h3>DVCS: Git and GitHub</h3>\n\n                </p>\n                <p>\n                The focus of our first week of prework was getting up to speed on Git and Github.<br />\n                <br />\n                What is Git?\n                </p>\n\n                <blockquote className=\"blockquote bg-light px-5 py-2 my-4 rounded-pill\">\n                    \"Git is a free and open source distributed version control system designed to handle everything\n                    from small to very large projects with speed and efficiency.” <cite className=\"blockquote-footer\"><a\n                            href=\"https://git-scm.com/\">Git</a></cite>\n                </blockquote>\n\n                <p>\n                    Great — but what is a DVCS?<br />\n                    <br />\n                    To start, VCS is a Version Control System. My one-week-of-coding-experience definition of a VCS\n                    is that it allows you to track and document changes to code (including reverting to older\n                    versions\n                    of the code). A Distributed Version Control System (DVCS) is a VCS that is mirrored on multiple\n                    devices.\n                    For example, if I have a full copy of the code on my computer and you have an identical copy on\n                    yours,\n                    then we have a <em>distributed</em> copy of the code.<br />\n                    <br />\n                    But what if I change my copy — now our copies aren't aligned, right? That’s where the “version\n                    control system”\n                    comes into play.<br />\n                    <br />\n                    A DVCS like Git tracks any changes I make, and then allows me to merge those changes into a\n                    shared code.\n                    You could then update your copy of the code to match that shared code, and then add your own\n                    changes.<br />\n                    <br />\n                    <a href=\"https://github.com\" title=\"GitHub\">GitHub</a> is a cloud based code repository. So, if\n                    we each\n                    have our copies of the code, we could place a third copy on GitHub. This saves us time, as I no\n                    longer\n                    have to drive to your house for us to compare code versions.\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/git-stages.png\" alt=\"Example of Git Workflow\" />\n                    <figcaption className=\"figure-caption text-center\">Source: <a className=\"minimalLink\"\n                            href=\"https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository\">\"Intro\n                            to Git\"</a></figcaption>\n                </figure>\n\n\n                <p>\n                    This oversimplified explanation of Git doesn’t even begin to get into some of the more complex\n                    (or, to me, confusing) functions of Git.\n                </p>\n\n                <h3 className=\"text-center\">Challenges</h3>\n\n                <p>\n                    I found Git pretty hard to understand. For one, working in Command Line meant that there wasn’t\n                    much\n                    of a user interface. It sometimes felt like you were flying in the dark — entering commands and\n                    receiving\n                    little to no visual or textual confirmation of what you are doing.\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/why-git-is-confusing.png\"\n                        alt=\"Why Git is so confusing\" />\n                    <figcaption className=\"figure-caption text-center\">Source: <a\n                            href=\"https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows\">\"Intro to\n                            Git\"</a> (added text mine)</figcaption>\n                </figure>\n\n\n                <p>\n                    One thing that helped me was reaching out to my brother, William.{' '}\n                    <a href=\"https://github.com/1GWilly8\" title=\"William's GitHub\">William</a>{' '}\n                    graduated with a <a href=\"https://www.hanover.edu/academics/programs/cs\"\n                        title=\"Hanover College Computer Science\"><abbr title=\"Computer Science\">CS</abbr> degree</a>{' '}\n                    in 2018 and has been working for an <a href=\"https://glowlabs.co\" title=\"Glow Labs\">\n                        <abbr title=\"Internet of Things\">IoT</abbr> company</a> in Denver. I told him that I was\n                    struggling with Git and\n                    Command Line and that I was afraid of messing things up if I typed in the wrong\n                    command. He told me to make mistakes and practice using Git/<abbr title=\"Command Line\">CL</abbr>\n                    — I wasn’t likely to break\n                    anything (too badly) and I would learn more by doing.\n                </p>\n\n                <h3 className=\"text-center\">Reflection: Prework Week 1 (and 2)</h3>\n\n                <p>\n                    Since I’m writing this near the end of Week 2, I am going to reflect\n                    on both weeks, despite the rest of this post being about Week 1 topics.<br />\n                    <br />\n                    I really enjoyed the first week of the developer bootcamp. We are working\n                    remotely and I wasn’t really sure what the workload would be like. I found it\n                    to be challenging but manageable, although (perhaps more importantly) I also found it to be\n                    really\n                    fun! I really enjoyed that there is so much to learn at this phase. I also really\n                    liked that so much of the work involves getting hands-on and creating web pages.\n                    Even though the websites we are building are very basic, it felt very satisfying\n                    to be able to apply what we had just learned and see the changes come to life!<br />\n                    <br />\n                    I am really excited to continue working through these prework topics. I’ve enjoyed\n                    some of the design aspects of CSS, and am really looking forward to working with\n                    JavaScript to build more responsive websites!<br />\n                    <br />\n                    I found Git and CSS relatively harder than HTML. The application process for the bootcamp\n                    involved an HTML assignment, and I worked through a Coding Academy course on HTML to help me\n                    with that. I found Git challenging due to the lack of a\n                    <abbr title=\"User Interface\">UI</abbr> as well as some confusion about the various intricacies\n                    of branching, merging, rebasing, etc. I found CSS challenging mostly in the amount of\n                    information to absorb. I think that with both Git and CSS, more time spent working with\n                    them will help me to better digest the information.<br />\n                    <br />\n                    A final reflection is that I really love working in an academic setting that doesn’t\n                    involve quizzes or grades! I think that this is really refreshing — instead of making\n                    flashcards and doing rote memorization, you can approach the subject\n                    matter in whichever way helps you to best absorb and apply the material!\n                </p>\n\n                <h3 className=\"text-center\">A Bonus Resource</h3>\n\n                <p>\n                    The prompt for our first blog post asked us for a resource that would help others in the\n                    program.\n                    I’m sure that most bootcampers know of or use something similar to this, but I found an\n                    online coding platform like <a href=\"https://codepen.io\" title=\"CodePen\">CodePen</a>{' '}\n                    really helpful. I didn’t use it for major projects, but when I learned something new\n                    and wanted to try applying it quickly, I could hop over to CodePen and draft something\n                    up in a matter of minutes.\n                </p>\n\n                \n            </article>\n        </>\n    );\n}\n\nexport default PWWeek1;","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nfunction PWWeek2() {\n    return (\n        <>\n                <article className=\"text-justify\">\n\n                    <p>\n                        I’m writing this late on a Labor Day Monday night. My\n                        girlfriend is currently in flight back from NYC where\n                        she saw a Jonas Brother Concert (not super jealous),\n                        and ate at a Michelin Starred Chinese restaurant\n                        (<strong>super</strong> jealous). My Labor Day Weekend\n                        was <em>pretty</em> good (thanks for asking) — I spent\n                        a decent amount of time reading and reviewing HTML and\n                        CSS but did manage to stop by my neighbor’s new pool\n                        each of the 3 holiday weekend days!\n                    </p>\n\n                    {/* Carousel Images  */}\n                    <Carousel>\n                        <Carousel.Item>\n                            <img \n                                className=\"d-block w-100\" \n                                src=\"/blogAssets/img/cafe-china-nyc.JPG\"\n                                alt=\"An image of Chinese food. Photo Credit: Anna B.\" \n                            />\n                            <Carousel.Caption>\n                                <p>Food from Cafe China, NYC</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img \n                                className=\"d-block w-100\" \n                                src=\"/blogAssets/img/labor-day-pool.JPG\"\n                                alt=\"A nice picture of my legs and water bottle at my neighbor's pool\" \n                            />\n                            <Carousel.Caption>\n                                <p>Relaxing by the pool</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n\n                    <p>\n                        This weekend wraps up the second week of Coding Bootcamp\n                        Prework. The focus of this week was an introduction to HTML\n                        and CSS. HTML stands for hypertext markup language. HTML is\n                        not a coding language (it’s a markup language), although if\n                        you looked at a page of HTML, you might be fooled.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-looks-like-code.png\"\n                            alt=\"HTML looks like code. It's actually a markup language\" />\n                        <figcaption className=\"figure-caption text-center\">Not code, don't get fooled.</figcaption>\n                    </figure>\n\n                    <p>\n                        CSS stands for cascading style sheets. HTML provides the\n                        structure of your webpage and CSS gives it its style. If HTML\n                        is like the frame of your house, CSS is the doors, windows,\n                        paint, etc:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css.png\" alt=\"Visual analogy of HTML vs CSS\" />\n                        <figcaption className=\"figure-caption text-center\">HTML is like the frame of a house; CSS adds\n                            style.</figcaption>\n                    </figure>\n\n                    <p>\n                        We covered a range of basic HTML and CSS topics, and although\n                        I would love to write a post covering <em>everything</em> we\n                        learned, I would also love to go to sleep at some point tonight.\n                        Instead, here is a very basic introduction to HTML/CSS!\n                    </p>\n\n                    {/* <!--|| HTML Intro --> */}\n\n                    <h3 className=\"text-center\">HTML: A very basic introduction</h3>\n\n                    <p>\n                        The basic building block of HTML is the element. An element\n                        is declared using opening (&lt;element&gt;) and closing (&lt;/element&gt;)\n                        tags. Between said tags, lies the content of the element.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-tags.png\" alt=\"An image of HTML tags\" />\n                        <figcaption className=\"figure-caption text-center\">An example of HTML tags</figcaption>\n                    </figure>\n\n                    <p>\n                        The above example uses the <code>&lt;p&gt;</code> tag. “p”\n                        stands for paragraph. A paragraph is the basic holding element\n                        for the body of your text. The text you are reading now is\n                        contained within a <code>&lt;p&gt;</code> tag. You can find\n                        a whole list of other tags on the{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\"\n                            title=\"MDN HTML Reference\">documentation\n                            site</a>.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/current-text.png\" alt=\"An image of some HTML\" />\n                        <figcaption className=\"figure-caption text-center\">The HTML of the above paragraph</figcaption>\n                    </figure>\n\n                    <p>\n                        Elements are nested within a hierarchy in HTML. Below is a\n                        very basic layout for a HTML webpage:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-example.png\" alt=\"An image of some basic HTML\" />\n                        <figcaption className=\"figure-caption text-center\">Here is an example of basic HTML</figcaption>\n                    </figure>\n\n                    <p>\n                        A rundown of what is going on here:\n                        <ul>\n                            <li>\n                                <code>&lt;!DOCTYPE html&gt;</code> this declares to\n                                the muses of the internet that the below information\n                                is a HTML document, and to process that information\n                                accordingly.\n                            </li>\n                            <li>\n                                <code>&lt;html&gt;</code> This is the opening tag that\n                                begins the actual HTML document. Notice at the bottom\n                                of our markup is <code>&lt;/html&gt;</code> this\n                                closes the markup. This level is sometimes called the\n                                root.\n                            </li>\n                            <ul>\n                                <li>\n                                    Although not required, I have also declared\n                                    the language (“lang”) of our webpage: it is\n                                    written in English (“en”), the US dialect.\n                                </li>\n                            </ul>\n                            <li>\n                                <code>&lt;head&gt;</code> The head contains the\n                                elements that the end user does not need to see,\n                                but that the machines find useful.\n                            </li>\n                            <ul>\n                                <li>\n                                    Here we have a metadata tag “meta” that\n                                    declares the charset (set of characters\n                                    that the browser can interpret). Here we\n                                    have defined it as utf-8, which allows us\n                                    to use virtually all 1.1 million characters\n                                    and symbols in any world language. You can{' '}\n                                    <a href=\"https://en.wikipedia.org/wiki/UTF-8\" title=\"utf-8 Wikipedia Page\">\n                                        read more about utf-8 here</a>.\n                                </li>\n                                <li>\n                                    <code>&lt;title&gt;</code> This is the title\n                                    of the webpage. It is useful for search\n                                    engines (it is the name that appears in big\n                                    title letters in search results). It also\n                                    appears as the title of the window or tab\n                                    when on the site. Additionally, it is the\n                                    default name when you try to bookmark the\n                                    page (for example, bookmarking this\n                                    <em>awesome</em> blog would give you\n                                    the default title \"Prework Week 2\")\n                                </li>\n                                <li>\n                                    <code>&lt;/head&gt;</code> notice that we\n                                    then close the head with a closing tag.\n                                </li>\n                            </ul>\n                            <li>\n                                &lt;body&gt; The body is where the main content of our\n                                webpage lives. The only content that we have here is\n                                “hello world” (<a href='https://en.wikipedia.org/wiki/\"Hello,_World!\"_program'\n                                    title=\"'Hello, world!' Wikipedia Page\">\n                                    click for context about the hello world convention</a>).\n                            </li>\n                            <li>\n                                We then close out our <code>&lt;body&gt;</code> and\n                                close out our <code>&lt;html&gt;</code>\n                            </li>\n                        </ul>\n                        Notice how the <code>&lt;p&gt;</code> opening and closing tags\n                        are on the same line, but the <code>&lt;html&gt;</code> tags\n                        are on different lines (and indentations)? Whitespace, or the\n                        spacing of the HTML document, doesn’t matter to the web\n                        browser. We could put everything on one line! Rather, it\n                        matters to us. Laying things out in a human-readable manner\n                        is handy for anyone working with computers.\n                        <br /><br />\n                        Here is the end result of our sample HTML. Things will look a little sparse,\n                        but we did a good job setting up a basic layout:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/html-result.png\"\n                            alt=\"An image of our test website\" />\n                        <figcaption className=\"figure-caption text-center\">This is what our test website looks like!\n                        </figcaption>\n                    </figure>\n\n                    {/* <!--|| CSS Intro --> */}\n\n                    <h3 className=\"text-center\">CSS: Another brief introduction</h3>\n\n                    <p>\n                        We can add CSS to our example HTML to give it some style!\n                        <br /><br />\n                        First, we need to link our CSS file in the HTML markup, that\n                        way the web browser knows where to find it. If we don’t tell\n                        the computer where to look, it would be like telling a human,\n                        “fetch me a glass of water”. Your friend might not know where\n                        you keep your cups. Linking to the stylesheet is like saying\n                        “fetch me a glass of water, the glasses are in the cabinet\n                        next to the fridge.”\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-add-stylesheet.png\"\n                            alt=\"An image showing how to link to a CSS Stylesheet\" />\n                        <figcaption className=\"figure-caption text-center\">Linking to a CSS Stylesheet</figcaption>\n                    </figure>\n\n                    <p>\n                        CSS is formatted a little different than HTML. A CSS rule or\n                        ruleset tells the browser how to style various HTML elements.\n                        On the left are the selectors, these tell HTML which part of\n                        the page to apply the style rule to.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/css-dec.png\" alt=\"An example of a CSS declaration\" />\n                        <figcaption className=\"figure-caption text-center\">An example of a CSS declaration</figcaption>\n                    </figure>\n\n                    <p>\n                        A CSS example might look like:\n                        <br /><br />\n                        <code>.robbie &#123;color: purple&#125;</code>\n                        <br /><br />\n                        In computer speak, this takes the class “<code>robbie</code>”\n                        (an endstop “<code>.</code>” before a word makes it apply to a\n                        whole class of elements), and turns it/him purple. In human\n                        speak the selector <code>.robbie</code> would sound like “make\n                        robbie…” and the declaration <code>&#123;color: purple&#125;</code>\n                        would sound like “…become purple colored”.\n                        <br /><br />\n                        A final example of CSS will be to apply it to the example HTML we used before.\n                        <br /><br />\n                        <div className=\"bg-light rounded-pill py-2\">\n                            <code className=\"ml-5\">\n                            p &#123;<br />\n                            <span className=\"ml-5\">color: lightsalmon;</span><br />\n                            <span className=\"ml-5\">border: 1px dotted green</span><br />\n                            <span className=\"ml-5\">&#125;</span>\n                        </code>\n                        </div>\n                        <br /><br />\n                        We have told the web browser to make all &lt;p&gt; elements\n                        the color “<code>lightsalmon</code>” and to add a\n                        \"<code>1px</code>\" (pixel) wide, dotted, green-colored border\n                        around them.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/example-css-applied.png\"\n                            alt=\"An image of CSS being applied\" />\n                        <figcaption className=\"figure-caption text-center\">What our example site looks like with CSS applied\n                        </figcaption>\n                    </figure>\n\n                    <p>\n                        Thanks for sitting through my brief HTML and CSS tutorial! If\n                        this were the year 1990, you might be able to get a job\n                        working with <a href=\"https://en.wikipedia.org/wiki/HTML#Development\"\n                            title=\"The history of HTML, Wikipedia\">Tim Berners-Lee</a>,\n                        otherwise you’ll likely need to read through more of the{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn\" title=\"MDN Learn Web Dev Guide\">MDN\n                            tutorials</a>{' '}\n                        before this\n                        becomes remotely practical.\n                    </p>\n\n                    {/* <!--|| Pseudo Code --> */}\n\n                    <h3 className=\"text-center\">Pseudo Code: not code, but not <em>not</em> code</h3>\n\n                    <p>\n                        This week we also learned about Pseudo Code. Pseudo Code is\n                        really useful in the brainstorming phase of your code writing\n                        process, as it allows you to find a happy medium between\n                        super technical real code, and regular, everyday English.\n                        <br /><br />\n                        Why find this middle ground? Jumping right into code can be\n                        like starting a journey without any sort of road map. Pseudo code gives\n                        you a chance to outline your work, and maybe see what problems\n                        and challenges you are likely to face. You may be able to\n                        solve some of those problems in this outline, perhaps saving\n                        you the time of starting in the wrong direction!\n                        <br /><br />\n                        Pseudo Code is not full code. The meaning of this is that you\n                        don’t have to worry about the code being technically correct —\n                        there’s no getting bogged down in the complexities of figuring\n                        out how to solve certain problems. For example, in your Pseudo\n                        Code, you might realize that you need to invent a new\n                        algorithm for streaming video. Instead of putting down the pen\n                        and spending hours/days/years (I have no idea how long it take\n                        to write an algorithm) writing your new algorithm, it is enough\n                        to simply know that it is needed — plot it on your roadmap and\n                        move on.\n                        <br /><br />\n                        At the same time, you would want to avoid full on English.\n                        Saying “go find the peanut butter” might not mean much to a\n                        computer. Humans are great at making inferences and thinking\n                        creatively, computers are very literal. While you don’t need\n                        to actually map out, via full-blown code, how to get your\n                        robot/computer to find the peanut better, you should at least\n                        acknowledge the basic steps: locate kitchen, locate pantry,\n                        find peanut butter.\n                    </p>\n\n                    {/* <!--|| Prework Week 3 Reflection --> */}\n\n                    <h3 className=\"text-center\">Reflection</h3>\n\n                    <p>\n                        I really enjoyed Prework Week Two of the Awesome Inc. Bootcamp. There\n                        is a lot to learn and I have really enjoyed getting to build\n                        some test websites!\n                        <br /><br />\n                        I struggled a bit this week with CSS. We worked through the\n                        MDN Intro readings on the topic, and I found myself rereading\n                        them today for the 3rd time, taking notes, and only now\n                        starting to feel more comfortable understanding topics such as{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Inheritance\"\n                            title=\"MDN Guide to Inheritance\">inheritance</a>,{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Conflicting_rules\"\n                            title=\"MDN Guide to Cascade\">cascade</a>, and{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model\"\n                            title=\"MDN Guide to Box Model\">box model</a>.\n                        <br /><br />\n                        HTML came a bit more easily. An assignment for acceptance into the Bootcamp\n                        involved building a basic HTML site. To help me\n                        build that, I signed up for a free trial of Code Academy Pro\n                        and worked through an Introduction to HTML course. Having even\n                        a brief sampler of HTML helped me get through the HTML\n                        fundaments more easily.\n                        <br /><br />\n                        I found Pseudo Code really interesting to work with. It’s\n                        really helpful to create an outline and to be able to\n                        (mentally) run through your program and know that it might\n                        (<em>hopefully</em>) work. This is nice because you can build a roadmap\n                        without becoming caught up with the various typos and small\n                        errors that your code might have initially. With Pseudo Code,\n                        you are making a good faith effort to ensure that your\n                        top-level logic is sound!\n                    </p>\n\n                    {/* <!--|| Resources --> */}\n\n                    <h3 className=\"text-center\">Resources</h3>\n\n                    <p>\n                        Two resources that I found helpful were{' '}\n                        <a href=\"https://fonts.google.com\" title=\"Google Fonts\">Google Fonts</a>{' '}\n                        and Google's <a href=\"https://www.google.com/search?q=color+picker\" title=\"Online Color Picker\">\n                            online color selector</a>. Google Fonts gives you a large\n                        selection of fonts to chose from (I’m currently using\n                        \"Roboto\"), as well as a great interface for selecting fonts\n                        and easy to understand instructions on how to implement them.\n                        <br /><br />\n                        A color selector was helpful for picking aesthetically\n                        pleasing colors for a website, as it allowed you to turn\n                        any color you wanted into hex or rgb notation.\n                        <br /><br />\n                        A closing note, if you’re interested in HTML and CSS and want\n                        to see (aka judge) my use of them, you can likely access\n                        developer tools on your web browser. Here are some links\n                        that would allow you to turn those on in a variety of popular\n                        browsers.\n                        <ul className=\"text-left\">\n                            <li>\n                                Chrome: <a href=\"https://developers.google.com/web/tools/chrome-devtools/\"\n                                    title=\"Chrome Web Dev Tools\">\n                                    Accessing Developer Tools</a>\n                            </li>\n                            <li>\n                                Safari: <a href=\"https://developer.apple.com/safari/tools/\"\n                                    title=\"Safari Web Dev Tools\">Accessing\n                                    Developer Tools</a>\n                            </li>\n                            <li>\n                                Internet Explorer:{' '}\n                                <a href=\"https://technet.microsoft.com/en-us/gg589513(v=vs.71)\"\n                                    title=\"IE Web Dev Tools\">Accessing\n                                    Developer Tools</a>\n                            </li>\n                            <li>\n                                Firefox: <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Tools_Toolbox\" title=\"Firefox Web \n                            Dev Tools\">Accessing Developer Tools</a>\n                            </li>\n                        </ul>\n                    </p>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n                    \n                </article>\n        </>\n    );\n}\n\nexport default PWWeek2;\n","import React from 'react';\n\nfunction PWWeek3() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n                <p>\n                    I’m writing this on a Saturday — we’ve just wrapped up our third\n                    week of Bootcamp Prework, and are barreling full steam ahead\n                    towards the final work of remote learning. Starting on Sept.\n                        16<sup>th</sup>, we will be reporting in to Awesome Inc., meeting\n                Monday-Friday, 8am-5pm for 12 weeks. I’m very excited, but maybe\n                also a little nervous.\n                    </p>\n                <p>\n                    This week involved diving a little deeper into HTML and CSS, while\n                    also serving as an introduction to JavaScript. Additionally, we\n                    did our first Demo Day on Friday! As we are working remotely, this\n                    was done via group video chat. We all took turns demonstrating the\n                    functionality of our Silly Story Generators, as well as looking\n                    under the hood and showcasing/explaining the source code behind\n                    our projects.\n                    </p>\n                <h3 className=\"text-center\">JavaScript</h3>\n                <p>\n                    JavaScript is a coding language that is used on both the client\n                    and server sides. On the client side, it is used to add reactive\n                        elements to a website. JavaScript <strong>IS NOT</strong> the same\n                as the similarly popular programing language, Java. In fact, the\n                only reason that they are named in a similar fashion is because\n                Java was becoming very popular at the time, and the creators of\n                JavaScript thought that they could benefit from Java’s popularity\n                by adopting a similar name. This seems a little like the current\n                naming convention involving adding Blockchain or Cryptocurrency to\n                various new products.\n                    </p>\n                <p>\n                    A final interesting fact about JavaScript — its creator,{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/Brendan_Eich\">Brendan Eich</a>,\n                wrote the prototype of the language{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/JavaScript#Beginnings_at_Netscape\"\n                        title=\"History of JavaScript (Wikipedia)\">in just 10 days</a>. A pretty\n            fast start for a programming language that has been going strong\n            for 23 years!\n                    </p>\n                <h3 className=\"text-center\">HTML, CSS, and JS</h3>\n                <p>\n                    How do the three languages we’ve talked about so far relate?\n                    </p>\n                <p>\n                    As I’ve mentioned in previous posts, HTML creates the framework, and CSS adds the style.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css.png\"\n                        alt=\"An image comparing HTML and CSS\" />\n                    <figcaption className=\"figure-caption text-center\">HTML creates the framework; CSS adds the style\n                        </figcaption>\n                </figure>\n                <p>\n                    If you leave it at the, you can still have a beautiful, fully\n                    functional website only using HTML and CSS. A website like this,\n                    however, is considered static — you can’t change elements without\n                    reloading the page. JavaScript allows you to create dynamic websites.\n                    </p>\n                <p>\n                    In the above example of a house, JavaScript would allow you to\n                    click on the front door and see the door open, and your neighbors\n                    walk out!\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css-vs-js-house.png\"\n                        alt=\"An image comparing JS to a House\" />\n                    <figcaption className=\"figure-caption text-center\">JavaScript creates reactive websites — Similar to\n                        being able to click on a house and\n                        open the\n                            door</figcaption>\n                </figure>\n                <p>\n                    You’ve likely seen examples of JavaScript all over the web.\n                    Examples might include: pressing the “like” button on Facebook and\n                    seeing the total number of “likes” instantly increase. Or, as you\n                    scroll through Instagram, a post changes from “posted 3 minutes\n                    ago” to “posted 4 minutes ago” in real time. JavaScript allows you\n                    to create dynamic, reactive websites, the type of website\n                    functionality that users have come to expect across the web.\n                    </p>\n                <h3 className=\"text-center\">Challenges: Resizing Websites (CSS) and Logic Errors (JavaScript)</h3>\n                <p>\n                    Two challenges that I faced this week involved attempting to make\n                    this blog viewable on mobile devices, and trying to get my Silly\n                    Story Generator program to work using JavaScript.\n                    </p>\n                <p>\n                    After initializing the blog last week, I managed to get it so that\n                    it looked pretty good on a desktop browser.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/css-looks-good-on-desktop.png\"\n                        alt=\"CSS looking good on Desktop\" />\n                    <figcaption className=\"figure-caption text-center\">A blog post viewed from a computer</figcaption>\n                </figure>\n                <p>\n                    I realized, however, that there was a problem with how this\n                    arrangement scaled down to mobile. What looks nice and spacious on\n                    a widescreen, became very compressed on a mobile device.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/css-not-scaling-well-to-mobile.png\"\n                        alt=\"CSS not scaling well to mobile view\" />\n                    <figcaption className=\"figure-caption text-center\">The same blog post viewed on a mobile device\n                        </figcaption>\n                </figure>\n                <p>\n                    Unfortunately, attempting to remedy this made things much worse\n                    before they got any better. For a while, not only did the site not\n                    look good on mobile, but elements started to appear in strange\n                    places on desktop as well.\n                    </p>\n                <p>\n                    Although we learned about Git in our first week of Prework, it\n                    wasn’t until I attempted to resize my blog that I became a real\n                        believer. I should first say that this came about <em>not</em>\n                    because I used Git properly and that it helped me to fix my\n                    website, but rather, that I didn’t use a good Gitflow Strategy,\n                    and that I ended up wishing fervently that I had!\n                    </p>\n                <p>\n                    I was using a “dev” (development) branch to write my code, but\n                    only doing so so that I could get into the habit. Once I had an\n                    update, I would immediately merge with the local master branch and\n                    then push to GitHub. This was unfortunate, because even though my code\n                    was moving in the right direction, things, at least temporarily,\n                    looked worse than before. If I had been using Git properly, I\n                    could have left my master branch as a functioning version of the\n                    site, while working on my dev branch until things were up to\n                    publication quality. This process definitely made be a believer in\n                    the usefulness of using a Version Control System like Git!\n                    </p>\n                <br />\n                <p>\n                    A second thing that I struggled with this week was encountering\n                        logic errors in my <a href=\"https://robbiegay.github.io/silly-story/\"\n                        title=\"Robbie's Silly Story Generator\">Silly Story Generator</a>.\n            The SSG is supposed to take a string of text and, somewhat{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/Mad_Libs\" title=\"Mad Libs Wikipedia\">Mad Libs</a> style,\n                                    insert funny\n                                    characters and locations to generate a new “silly story” each time\n                                    the “generate” button is pressed.\n                    </p>\n                <p>\n                    A piece of additional functionality that I wanted to add involved\n                    creating a Typewriter Effect, where each letter would appear one\n                    at a time, as if being typed. Needless to say, this did not work\n                    as planned either the first (or twenty-first) time that I tried to\n                    run the program. The first thing that I looked for were syntax\n                    errors. You can think of these as grammar or spelling mistakes.\n                    This is like when you text someone: “on my way, soon” when you\n                    really meant to say “one my way, noon” — A simple error that might\n                    have someone waiting around for several hours. Computers being\n                    very literal machines, these simple grammar and spelling errors\n                    can cause a program to cease functioning entirely.\n                    </p>\n                <p>\n                    After first addressing any syntactical errors that I could find in\n                    my Silly Story Generator, I then had to deal with any logic\n                    errors. A logic error is when you tell a program how to perform a\n                    task, they are able to complete said task, but then, because of an\n                    error in the logic of your instructions, the task completed does\n                    not produce the desired results.\n                    </p>\n                <p>\n                    A real-world example of a logic error could be to give someone\n                    directions to your house. Perhaps you managed to spell everything\n                    correctly and produce easy to follow directions (no syntax\n                    errors), but you then told them to turn left on Main St. instead\n                    of right! The instructions worked well, they just sent your friend\n                    in the wrong direction.\n                    </p>\n                <p>\n                    I found dealing with logic errors really frustrating. I would find\n                    myself reading and rereading my code, and eventually coming to the\n                        conclusion that my code definitely <em>should</em> work; It\n                        <em>seemed</em> like everything made sense. There were even\n                                    moments when I would just stare at the screen, unable to find\n                                    anything to tweak or try.\n                    </p>\n                <p>\n                    It seemed like there were no real “ah-ha” moments of getting this\n                    week's code to work — rather than a large change that fixed the\n                    program, it was several small implementations that eventually\n                    built some functioning code.{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/The_Pragmatic_Programmer\"\n                        title=\"Pragmatic Programmer Wikipedia\">The\n                            Pragmatic Programmer</a>{' '}\n                    mentions a Japanese phrase, “kaizen”. This is the process of\n                    making small, incremental improvements that over time produce high\n                    quality results. This is what the process of debugging both this\n                    blog and my Silly Story Generator felt like — the more time I\n                    spent working on the problem, and the more I slowly pieced\n                    together bits of functionality, the closer I got to a program that\n                    ran as I intended!\n                    </p>\n                <h3 className=\"text-center\">Two Cool Things</h3>\n                <p>\n                    I wanted to mention two things that I learned this week that I\n                    found really interesting. When working in HTML, there is a lot of\n                    framework that gets recycled on every page. After my first couple\n                    of webpages, I got tired of repeatedly building the same\n                    structure. I had decided that it would be really useful to build a\n                    template to start with. It was then that fellow Bootcamper{' '}\n                        <a href=\"https://anchormansam.github.io/my-blog/blog.html\" title=\"A link to Sam's Blog\">Sam</a>\n                    mentioned a\n                    useful shortcut\n                    in the class Slack (groupchat). He mentioned a shortcut in VS\n                    Code Studio (software that you can use to write code in), where,\n                        if you enter <code>!</code> and press return, then a great HTML\n                                    template will appear. This was a significantly quicker and more\n                                    convenient way to build a starting framework — thanks Sam!\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/vs-code-!-template.png\" alt=\"VS Code '!' Shortcut\" />\n                    <figcaption className=\"figure-caption text-center\">Using the \"!\" Shortcut in VS Code</figcaption>\n                </figure>\n                <p>\n                    A second really useful thing that we learned this week came from\n                        our instructor, <a href=\"https://www.justinhall.com\" title=\"Justin's Website\">Justin</a>. Justin\n                                        walked us\n                                        through the\n                                        process of using the Chrome Dev Tools to debug a program. When I\n                                        was attempting to fix my logic errors in the Silly Story\n                                        Generator, it would have been really helpful to see how the\n                                        computer was interpreting my code. For example, if my code wasn’t\n                                        displaying a string pulled from an array, is that because it isn’t\n                                        pulling the string from the array at all, or is the computer\n                                        having trouble inputting said string back into our story? With\n                                        Chrome Dev Tools, you are able to insert a breakpoint, and to then\n                        <em>see</em> how the computer is thinking. In the example photo\n                                        below, my code is shown on the left, and what values the computer\n                                        is using is shown on the rights.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/using-chrome-breakpoints.png\"\n                        alt=\"Chrome Dev Tools: Breakpoint Function\" />\n                    <figcaption className=\"figure-caption text-center\">An example of the Chrome Dev Tools</figcaption>\n                </figure>\n                <h3 className=\"text-center\">Resources</h3>\n                <p>\n                    The resource that I wanted to share this week is less of a useful\n                    tool and more of a really cool inspiration! While working through\n                    this week’s{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript#So_what_can_it_really_do\"\n                        title=\"MDN: 'What is JavaScript?'\">\n                        MDN reading on JavaScript</a>, they mentioned that some\n            programmers are doing some really cool things with audio and video\n                        <abbr title=\"Application Programming Interfaces\">API’s</abbr>. As\n                                            an example, they gave use a link to the{' '}\n                        <a href=\"https://experiments.withgoogle.com/collection/chrome\" title=\"Chrome Experiments\">Chrome\n                                                Experiments\n                            webpage</a>. This\n                site showcased a lot of really fun and interesting webpages built\n                using the JavaScript framework. As cool and inspirational as these\n                projects were, they also left me with a sense of just how vast of a\n                field of knowledge web development really is. It feels as though we\n                are years (more likely even, decades) away from doing anything as\n                remotely cool and complex as this. That said, I do really\n                recommend that you check out a few of these projects — I thought\n                that they really pushed the boundaries of what a reactive and\n                responsive website can do!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default PWWeek3;\n","import React from 'react';\n\nfunction PWWeek4() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n                <article className=\"text-justify\">\n                    <p>\n                        Happy super ~spooky~ Friday the 13th!! This week was our final\n                        week of Bootcamp Prework and it really seemed like these last four\n                        weeks just flew by!\n                    </p>\n                    <p>\n                        I was a little nervous going into the Prework phase. I wasn’t\n                        really sure what to expect: Would the workload or complexity of\n                        the material be too much to handle? Would I realize, once I had\n                        become more immersed in coding, that it wasn’t really for me?\n                        Thankfully I found neither of these to be the case — The course\n                        material during Prework was challenging but exciting, and I’ve had a\n                        lot more fun than I excepted to writing code!\n                    </p>\n                    <h3 className=\"text-center\">Prework Week 4</h3>\n                    <p>\n                        This week was lighter on the readings, and started to skew more\n                        towards project-based work. We started with another{' '}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks\"\n                            title=\"JavaScript Building Blocks\">MDN module</a>, this one\n                        introducing us to some more JavaScript building blocks — things\n                        like loops, functions, return values, and events.\n                    </p>\n                    <p>\n                        Next, we moved on to four coding projects. Our first project still\n                        involved a little bit of handholding. For the{' '}\n                        <a href=\"https://robbiegay.github.io/image-gallery/\" title=\"Image Gallery\">Image Gallery</a>, \n                        we were given some starter code, as well as instructions on what\n                        parts of the code we still needed to fill in. After the Image\n                        Gallery project, however, we were on our own.\n                    </p>\n                    <p>\n                        My biggest takeaway from this week's assignments has been that I\n                        have become a pretty big Pseudo Code enthusiast! For the{' '}\n                        <a href=\"https://robbiegay.github.io/countdown-timer/\" title=\"Countdown Timer\">Countdown\n                            Timer</a>{' '}\n                        assignment, I felt\n                        like I had an idea of how the code could work pretty early on. I\n                        <em>did</em> jot down a rough outline of the code, but didn’t\n                        bother to mentally run through the various steps of my proposed\n                        coding plan.\n                    </p>\n                    <p>\n                        I then jumped right into writing the code, and several hours later, I\n                        was approaching something that resembled a Countdown Timer.\n                        It was only when I was trying to work in some final bits of\n                        functionality, that I realized that my initial approach was\n                        fatally flawed. Had I used Pseudo Code to work through the logical\n                        flow of my program <strong>before</strong> I started writing\n                        code, then I likely would have realized some of these late-stage\n                        mistakes early on. Instead, I ended up having to rewrite a lot of\n                        my code, costing me several additional hours. Starting with Pseudo\n                        Code would likely have saved me both time and headaches\n                    </p>\n                    <blockquote className=\"blockquote bg-light px-5 py-2 my-4 rounded-pill\">\n                        \"Measure twice, cut once\"\n                        <cite className=\"blockquote-footer\">Justin (and just about anyone else who has ever built\n                            anything)</cite>\n                    </blockquote>\n                    <h3 className=\"text-center\">Reflection: The Prework Period</h3>\n                    <p>\n                        Each week of Prework presented different challenges and opportunities.{' '}\n                        <a href=\"https://robbiegay.github.io/posts/pw-week-1.html\" title=\"PW Week 1 Blog Post\">Week\n                            1</a>{' '}\n                        introduced\n                        us to Git, Github,\n                        and Command Line. A lot of these new technologies felt very\n                        confusing at first. After 4 weeks of (nearly) daily practice, I\n                        think I am starting to feel more comfortable... at least with the\n                        basics.\n                    </p>\n                    <p>\n                        <a href=\"https://robbiegay.github.io/posts/pw-week-2.html\" title=\"PW Week 2 Blog Post\">Week\n                            2</a>{' '}\n                        introduced\n                        us to HTML and\n                        CSS, and saw us creating our first blog posts! I found the\n                        structuring of HTML to be fairly straightforward. Conversely, I\n                        really struggled with getting CSS to work. It was challenging to\n                        try to understand the various parent/child relationships between\n                        the different elements, or to figure out how different properties got\n                        inherited or overwritten. Perhaps the most frustrating aspect\n                        though, was finally getting your webpage looking how you want\n                        it to, only to realize that, if viewed on anything other than\n                        a browser window of <strong>exactly the same size</strong>,\n                        that things weren't going to look anything close to how you\n                        laid them out.\n                    </p>\n                    <p>\n                        <a href=\"https://robbiegay.github.io/posts/pw-week-3.html\" title=\"PW Week 3 Blog Post\">Week\n                            3</a>{' '}\n                        introduced\n                        us to\n                        JavaScript, while Week 4 added some more fundamentals\n                        to our knowledge portfolio. Most of the challenges of working with\n                        JavaScript involved coping with the various highs and lows of\n                        creative problem solving. First came the high of the eureka moment when you\n                        became <strong>convinced</strong> of a solution to your current\n                        problem. Then, the low of this solution only managing to break\n                        what you had working before. One thing that helped was to not\n                        immediately wad your new idea up and throw it in the trash.\n                        I found that many times, pausing to comb through your code for\n                        syntax errors could be really helpful — as maybe your new solution\n                        <em>might</em> actually work if you hadn’t misspelled a variable\n                        or left out a bracket.\n                    </p>\n                    <p>\n                        Another thing that I found really helpful was occasionally closing\n                        my computer. For one, just taking breaks and maybe mulling over a\n                        problem while you took a walk could often leave to breakthroughs,\n                        to thinking, \"why hadn't I thought of that yet\". And second, I\n                        found that beginning your code with just pen and paper was a really helpful\n                        way to start. By forcing myself to slow down, to work through ALL\n                        the steps of the problem, and to chart out ALL the functionalities\n                        I would need, would often lead to developing a better roadmap and\n                        better code. I was then able, still with\n                        pen and paper, to start solving these problems and adding\n                        various functionalities. This made the act of writing the code\n                        a little bit like filling in the blanks.\n                    </p>\n                    <h3 className=\"text-center\">Bootcamp</h3>\n                    <p>\n                        I am <strong>super</strong> excited to start Bootcamp Week 1 on Monday!\n                    </p>\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/time-till-bootcamp-starts.png\"\n                            alt=\"Countdown till Sept. 16th, 2019\" />\n                        <figcaption className=\"figure-caption text-center\">Counting down to Day 1!</figcaption>\n                    </figure>\n                    <p>\n                        I felt like we learned a lot more than I expected to in this\n                        introductory period, and I am really stoked to see what we\n                        will be learning in our first few weeks of Bootcamp!\n                    </p>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n\n                </article>\n        </>\n    );\n}\n\nexport default PWWeek4;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\n\nfunction PWWeek2() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n                <article className=\"text-justify\">\n\n                    <p>\n                        We just wrapped up Bootcamp Week 1 — it was really \n                        exciting to dive into our first week of full-time \n                        coding, but it also came with some personal highs and lows.\n                        A high was that the first week of Bootcamp was a\n                        lot of fun! We learned about design theory, started\n                        working with the Bootstrap framework, and learned some\n                        more about objects in JavaScript!\n                    </p>\n                    <p>\n                        Some lows: my girlfriend’s 16-year-old cat went missing\n                        on Monday. Smokey is awesome, and I really hope he comes\n                        home soon! And then on Friday, my cat came down with some sort\n                        of severe bacterial infection, and ended up dying at the\n                        vet’s office several hours later. Overall, it was a pretty rough\n                        week for cats :&lpar;\n                    </p>\n\n                    {/* <!-- Carousel Images --> */}\n                    <Carousel>\n                        <Carousel.Item>\n                            <img className=\"d-block w-100\" src=\"/blogAssets/img/smokey.JPG\" alt=\"Smokey Billhymer\" />\n                            <Carousel.Caption className=\"pb-5\">\n                            <p>Smokey has been missing since Monday. If you see my dude\n                                        wandering around the Beaumont area, please let me know!!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/mickey.JPG\"\n                                    alt=\"Mickey passed away on Friday\" />\n                            <Carousel.Caption>\n                            <p>Mickey passed away on Friday :(</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/lunch-athenian-grill.JPG\"\n                                    alt=\"Lunch at Athenian Grill\" />\n                            <Carousel.Caption>\n                            <p>Got lunch with my Grandpa Bob on Friday!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n\n                    <p>\n                        A final high of the week: A perk of going to school downtown\n                        means that I was able to meet up with my Grandfather for\n                        lunch! His office is across the street from the new\n                        Athenian Grill, so I walked over there on my lunch break\n                        and had a really good time hanging out with him!\n                    </p>\n\n                    <h3 className=\"text-center\">Design</h3>\n\n                    <p>\n                        Jacqueline, a graphic designer here at Awesome Inc, came by\n                        on Wednesday to talk to us about some basic design principles.\n                        Her talk was about{' '}\n                        <span className=\"text-danger\">C.</span><span className=\"text-primary\">R.</span><span className=\"text-warning\">A.</span><span className=\"text-success\">P.</span>:\n                    </p>\n\n                    <ol>\n                        <li><span className=\"text-danger\">C</span>ontrast: can be contrast of color, type weight, texture, shape</li>\n                        <li><span className=\"text-primary\">R</span>epetition: repeated colors, patterns, or elements</li>\n                        <li><span className=\"text-warning\">A</span>lignment: how do the elements on the page align with one another?</li>\n                        <li><span className=\"text-success\">P</span>roximity: grouping, whitespace; how close are elements to each other?</li>\n                    </ol>\n\n                    <p>\n                        We talked about{' '}\n                        <span className=\"text-danger\">C.</span><span className=\"text-primary\">R.</span><span className=\"text-warning\">A.</span><span className=\"text-success\">P.</span>{' '}\n                        principles, and then looked at\n                        some examples of bad design. After our design workshop wrapped\n                        up, I turned back to my blog and realized just how much additional\n                        design work my blog could use! I really enjoyed learning more\n                        about design, and am looking forward to our future design theory sessions.\n                    </p>\n                    <p>\n                        This week we started working with the Bootstrap framework. A framework \n                        is a software abstraction that adds certain functionality to common code.\n                        The main difference between a framework and a library is \"inversion of control\" — \n                        in a framework, the global flow of control is employed by the framework, rather \n                        than the user. What using Bootstrap meant for me, was that I could\n                        take something that previously took me 40-50 lines of CSS, and enter only a\n                        word or two of Bootstrap and achieve the same effect… often with\n                        even better results. Switching from vanilla CSS to Bootstrap was\n                        a bit like being given superpowers — it was amazing what sort of\n                        features I could add to my blog with just a few Bootstrap classes!\n                    </p>\n\n                    <h3 className=\"text-center\">JavaScript Objects</h3>\n\n                    <p>\n                        I definitely struggled with understanding JavaScript objects at\n                        first. I tried reading the “objects” chapter in{' '}\n                        <a title=\"Eloquent JavaScript\" href=\"https://eloquentjavascript.net/06_object.html\">“Eloquent JavaScript”</a>{' '}\n                        on Monday. By “tried to read”, I mean that I made it about halfway through\n                        before becoming so lost that I only skimmed the rest, knowing that nothing else was going to\n                        stick. Later in the week, I began working through the <a title=\"MDN JS Objects Module\"\n                        href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects\"> MDN JavaScript\n                        Objects module</a>. Getting to read a second explanation of JS objects really helped me begin\n                        to understand what objects are &lpar;hint: they are everything, and everything is them&rpar; \n                        and why they are useful.\n                    </p>\n                    <p>\n                        We rounded out the week by completing an assignment that\n                        involved applying what we had learned about JS objects.\n                    </p>\n\n                    <h3 className=\"text-center text-secondary d-none d-sm-block\">Bouncing Balls Game</h3>\n\n                    {/* <!-- Bouncing Balls Game (only appears on sm size and larger) --> */}\n                    <div className=\"border embed-responsive embed-responsive-4by3 mb-1 d-none d-sm-block\">\n                        <iframe className=\"embed-responsive-item\" title=\"Bouncing Balls Game\" height=\"515\"\n                            src=\"https://robbiegay.github.io/bouncing-balls/\">\n                        </iframe>\n                    </div>\n\n                    <p className=\"d-none d-sm-block text-secondary pb-3\"><small>\n                        Instructions: Control the red circle with WASD keys. Try to eat all 25 bouncing balls. \n                        You win the game when all the balls are gone. Note: If controls don't seem work, \n                        try click once in the window of the game.\n                    </small></p>\n\n\n                    <p>The <a title=\"MDN Bouncing Balls\" \n                        href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">\n                        Bouncing Balls project</a> was a guided exercise as part of MDN’s JS objects\n                        module. It was nice to still have a bit of hand holding throughout this project, as it allowed\n                        us to build a fairly “complex” &lpar;complex to me&rpar; program, and to see how objects made \n                        a program like this possible.\n                    </p>\n\n                    <h3 className=\"text-center\">Coming Attractions</h3>\n\n                    <p>\n                        Over the next two weeks, we are going to be diving a bit more deeply into \n                        JavaScript, while also doing a lot of project-based work. We are going to \n                        be building  a Tic Tac Toe game, a Calculator, a Sliding Puzzle, and \n                        finally, a Weather App!\n                    </p>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n\n                </article>\n        </>\n    );\n}\n\nexport default PWWeek2;\n","import React from 'react';\n\nfunction BCWeek2() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n                <article className=\"text-justify\">\n\n                <p>\n                    Bootcamp Week 2 was mostly project based. I worked on\n                    three projects this week: a Weather App, a Tic-Tac-Toe\n                    game, and a Calculator. Each of these projects was built\n                    using JavaScript, and each helped introduce us to some\n                    new aspect of the language.\n                    </p>\n\n                <h3>This Week’s Projects</h3>\n\n                <p>\n                    <a href=\"https://robbiegay.github.io/weather-app/\" title=\"My Weather App\">The Weather App</a>{' '}\n                    was designed to take a user-inputted zip-code, and output\n                    real-time weather conditions for that area. This project\n                    introduced us to APIs and JSON. APIs are Application\n                    Programming Interfaces, sets of code governing access\n                    points to servers or databases. JSON stands for JavaScript\n                    Object Notation, and is a standardized data format. We used the{' '}\n                        <a href=\"https://openweathermap.org/api\" title=\"openweathermap API\">openweathermap API</a>{' '}\n                    for this project, and received data from that API in the JSON format.\n                    </p>\n\n                <p>\n                    The <a href=\"https://robbiegay.github.io/tic-tac-toe/\" title=\"My Tic-Tac-Toe game\">Tic-Tac-Toe game</a>{' '}\n                    involved testing a set of 8 possible win conditions against the\n                    current X and O positions on the Tic-Tac-Toe board.\n                    To solve this, I created a nested array with the various\n                    win conditions, and tested them against the current state\n                    of the board (also in an array). This test was run upon\n                    each firing of the click event handler.\n                    </p>\n\n                <p>\n                    The <a href=\"https://robbiegay.github.io/calculator/\" title=\"My Calculator App\">Calculator</a>{' '}\n                    project involved building a basic calculator that could use\n                     +, -, /, x on user-inputted numbers. This project seemed pretty\n                     straight forward at first — computers should be pretty good\n                     at adding, subtracting, dividing, and multiplying. The problem,\n                     however, lay in the fact that there are a multitude of\n                     combinations for which the user could input values. What\n                     happens if the user presses: - + 5 6 - / 3 =? Should the computer\n                     ignore the opening two operands? 5 and 6 pressed sequentially\n                     should obviously form “56”. And what about the “- /“? Should\n                     the computer ignore the first operand in this case as well?\n                    </p>\n\n                <p>\n                    There were many edge cases, and, on my first attempt at creating\n                    the calculator, I tried to solve all of these scenarios from\n                    the beginning. This resulted in a somewhat functioning calculator,\n                    but at the expense of running some very convoluted code behind\n                    the scenes. I decided to start fresh and create a second JS sheet,\n                    and to focus on just solving core problems first. After I had\n                    some fairly clean code working, I then began to\n                    incrementally add edge case solutions.\n                    </p>\n\n                <p>\n                    Additionally, the Calculator was my first time dynamically\n                    rendering an application in JavaScript. The body of my HTML\n                    document only contains a single &lt;div&gt; element for the\n                    JavaScript to build the app on.\n                    </p>\n\n                <h3>Process</h3>\n\n                <p>\n                    My biggest take away from Bootcamp Week 2 was that I started\n                    to think about and establish a personal development process.\n                    </p>\n\n                <p>\n                    My first step is to read over the project parameters, and to\n                    Pseudo Code the problem. I will draw out the potential UI,\n                    thinking about how various elements will scale at different\n                    screen sizes, as well as what elements are clickable and how\n                    various elements should interact. I will work on the\n                    code as well — mapping out ideas relating to how I think\n                    the problem could be solved.\n                    </p>\n\n                <p>\n                    I will then usually go ahead and build my UI. This gives me\n                    something to work with and test code upon. If you need to\n                    test what happens when a button gets pressed, it’s pretty\n                    hard to do so if you haven’t built any buttons yet!\n                    </p>\n\n                <p>\n                    My next step is to build the core functionality of the project.\n                    This MVP will fulfill the broad requirements for functionality,\n                    while leaving edge cases to a later step. Throughout this\n                    process, I will likely come up with ideas for new features,\n                    or think of possible edge case problems. In order to not get\n                    sidetracked, I will jot down these ideas on a pad of paper.\n                    </p>\n\n                <p>\n                    Once I get the core functionality working, I will then begin\n                        solving for edge cases. <a href=\"http://ianrios.me/\" title=\"Ian's Website\">Ian</a>{' '}\n                    recommended that I prioritize edge cases by using a four-quadrant\n                    grid. The grid compares Important and Not-Important vs.\n                    Urgent and Less-Urgent. This allowed me to tackle edge\n                    cases with a certain hierarchy.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/edge-case-chart-white-bg.png\" alt=\"Chart for Edge Case Prioritization\" />\n                        <figcaption className=\"figure-caption text-center\">A useful way to prioritize edge case solutions and bug fixes</figcaption>\n                    </figure>\n\n                    <p>\n                        Working within this developmental framework helped me\n                        write more efficient code, and in a more timely manner!\n                    </p>\n\n                    <h3>Looking Forward</h3>\n\n                    <p>\n                        In Bootcamp Week 3, we will be tackling a{' '}\n                        <a href=\"https://github.com/bootcamp-students/Projects-Exercises/blob/master/docs/projects/sliding-puzzle.md\" title=\"Sliding Puzzle Project Prompt\">Sliding Puzzle project</a>{' '}\n                        — involving moving pieces around a board on\n                        each user click. This project seems pretty\n                        intimidating right now, but I think that we\n                        will be learning some new concepts this week that will\n                        hopefully help with completing this project!\n                    </p>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n\n                </article>\n        </>\n                        );\n                    }\n                    \n                    export default BCWeek2;\n","import React from 'react';\n\nfunction BCWeek3() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    Bootcamp Week 3 was both fun, and felt a lot more challenging\n                    than the previous weeks. Both Weeks 2 and 3 involved the\n                    completion of 4 projects. One Monday I added some stretch\n                        goals to the first 3 projects — keyboard input for the <a href=\"https://robbiegay.github.io/weather-app/\">Weather\n                        App</a> and <a href=\"https://robbiegay.github.io/calculator/\">Calculator</a>; a “get weather by current location” button\n                        for the Weather App; a running scoreboard for <a href=\"https://robbiegay.github.io/tic-tac-toe/\">Tic-Tac-Toe</a>;\n                    and I also wrote my first README file for the Calculator app\n                    (more on README’s later).\n                    </p>\n\n                <p>\n                    We also took headshots and a group photo this week — check out our cohort below!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/bootcamp-group-photo.JPG\"\n                        alt=\"Fall 2019 Bootcamp Group Photo\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        L-R: Ian Rios (Assistant Instructor), Todd Trivisonno, David Joyce, Robbie Gay, Sam\n                        Wheeling, Abram Gornik,\n                        Will McGill, Taylor Akin, Michael Loyselle, Rachael Yoder, Eric Hampton, Justin Hall (Lead\n                        Instructor), Ethan Borkosky\n                        </figcaption>\n                </figure>\n\n                <p>\n                    I’ve been trying to wake up early and either go to the gym or\n                    get some work done before class starts. On Tuesdays, I have been\n                    starting my day across the street at{' '}\n                        <a href=\"http://acupofcommonwealth.com/\">Cup of Commonwealth</a>.\n                    It has been really nice to be able to have about an hour before\n                    class to plan out what projects I want to work on, and to even get\n                    a bit of a headstart on the day’s coding work! I also just REALLY\n                    enjoy being up that early. Note: I hate the act of actually getting out of\n                    bed (I love to sleep), but once I'm up, I love those predawn hours.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/cup-of-common.JPG\"\n                        alt=\"Some Tea at Cup of Commonwealth\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        I've been going with the Fogged Chai\n                        </figcaption>\n                </figure>\n\n                <h3>Sliding Puzzle Game</h3>\n\n                <p>\n                    On Tuesday, we started working on our final project of the 2 week sprint.{' '}\n                        <a href=\"https://robbiegay.github.io/sliding-puzzle/\">The Sliding Puzzle game</a>{' '}\n                    gave be a lot of headaches! I took an object-oriented approach, using an\n                    array to hold 16 objects, each containing properties such as the array’s\n                    name, and its current position on the board. Trying to conceptualize\n                    how the tiles would move around the board, while really the physical div’s\n                    containing each tile remained stationary, and while the objects\n                    themselves weren’t even on the board, was really hard to make sense of.\n                    </p>\n\n                <p>\n                    Throughout this week’s warm-ups and the projects themselves, the instructors really\n                    stressed working together to think through common problems. Several group whiteboarding sessions\n                    were\n                    taking place throughout the week, and I don’t think I could’ve gotten through this week’s work\n                    without being able to talk/think through the problems with some of my fellow bootcampers and the\n                    instructors.\n                    </p>\n\n                <h3>Working with JavaScript</h3>\n\n                <p>\n                    I’m really interested in continuing to learn more about JavaScript! We have already learned how\n                        to do so much using <abbr title=\"Plain JavaScript without any additional Libraries or Frameworks\">vanilla JS</abbr>, and yet I know that we have only barely scratched the surface. We will\n                        soon start working with <a href=\"https://reactjs.org\">React</a>, and begin to move away from using only vanilla JS.\n                    </p>\n\n                <p>\n                    I’m also really excited to do some more research on APIs and what various JS\n                    frameworks and libraries can allow you to do. I feel like there are so many cool things\n                    that you can do with this technology, and I can't wait to learn more!\n                    </p>\n\n                <h3>Breakfast Club</h3>\n\n                <p>\n                    On Thursday, we had our first Coding Breakfast Club! A group of bootcampers, instructors, and\n                    local developers all met up from 6-8am at Awesome Inc for some optional coding and\n                    conversation. Starting at 6am meant that I had to wake up\n                    pretty early in order to shower and drive in from Versailles. I ended up waking up at 4:45am, and\n                    I swear I must’ve set a world record for the earliest someone has EVER gone to sleep — 9:30pm —\n                    it was so early!\n                    </p>\n\n                <p>\n                    About half of the bootcampers made it to this bonus morning session. There were also several real-world\n                    developers in attendance, and it was really cool to get to talk with some people who are\n                    currently working as devs, and to hear about the various fields that they currently work in. We spent most of the morning session setting\n                        up <a href=\"https://flutter.dev\">Flutter</a> on our machines, and we will hopefully get more\n                    into working with Flutter in this week’s session!\n                    </p>\n\n                <h3>README’s</h3>\n\n                <p>\n                    This week I added <a href=\"https://github.com/robbiegay/calculator\">my first README</a>{' '}\n                    to a project! I added some basic info about my Calculator app,\n                    as well as diving fairly deeply into the various edge-cases that I had to solve for while building\n                        and testing the app. Assistant Instructor <a href=\"http://ianrios.me/\">Ian</a> also gave me a tip about including\n                    links in the project's repo descriptions. Although all of the apps that I have built so far are hosted on\n                    GitHub Pages, without easy access to links, many who visit my page may never realize this.\n                    Ian recommended that I include links to the hosted app in the description of each repo.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/adding-links-to-repos.png\"\n                        alt=\"I added links to my GitHub repos\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        Ian recommended that I add links to my GitHub repos\n                        </figcaption>\n                </figure>\n\n                <p>\n                    I made use of this great template for writing README's, made by\n                        GitHub user <a href=\"https://gist.github.com/PurpleBooth\">PurpleBooth</a>. Check out\n                    the template here:{' '}\n                        <a href=\"https://gist.githubusercontent.com/PurpleBooth/109311bb0361f32d87a2/raw/8254b53ab8dcb18afc64287aaddd9e5b6059f880/README-Template.md\">README Template</a>{' '}\n                </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek3;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nfunction BCWeek4() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">Weekly Update</h3>\n\n                <p>\n                    A few personal highlights from last week: I saw some really beautiful sunrises walking to <a href=\"https://www.awesomeinc.org\" title=\"Where our Bootcamp meets\">Awesome Inc</a> each morning. My uncle has been in town from California all week and we went out to eat… a lot. On Saturday, we all went to the UK football game. It was a tough win, but UK seemed to metaphorically drag their season back on track. After breaking our 3 game losing streak, we get rewarded with a trip down south to play number 10 Georgia next weekend. The Bulldogs opened as a 27-point favorite, so it should be a very <i>exciting</i> game. Finally, on Sunday, Bobby came into the <a href=\"http://wrfl.fm\" title=\"88.1 FM — Your Only Alternative Left\">WRFL</a> studio and co-hosted my weekly radio show!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/beautiful-sunrise-oct-11th.JPG\" alt=\"A pretty sunrise\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>I've been catching some really beautiful sunrises walking to class!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/joellas-food-pic.JPG\"\n                            alt=\"Some fried chicken\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>A food pic: Joella's Hot Chicken!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/pic-of-eachother-taking-food-pics-joellas.JPG\"\n                            alt=\"Some guys taking pics of each other\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>A pic of each other taking food pics</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/uk-vs-arkansas-football.JPG\"\n                            alt=\"Before the UK Football game\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>Before the UK Football game!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/dj-bobby-frizzle.JPG\"\n                            alt=\"At the radio station\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>DJ Bobby Frizzle takes over the WRFL airwaves</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n\n                <p>\n                    Some highlights from the Bootcamp: In Bootcamp Week 4, we worked on a <a href=\"https://robbiegay.github.io/to-do-list/\" title=\"Robbie's To-Do List app\">To-do List app</a>. This involved working with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" title=\"MDN Documentation - Local Storage\">Local Storage API</a> to store entries even when you close your web browser or refresh the page. One useful thing that I did for the To-Do app — and which I might do again in the future — was to write some code for custom hotkeys. During the development process, I would often change my code and needed to test it with a totally refreshed page. Since Local Storage retains data between page loads, it became more difficult to quickly load a brand new version of the webpage. Because of this, I decided to map the <code>=</code> key to some lines of code that cleared the Local Storage (as well as emptying the array the held data related to the To-Do List entries). Additionally, I mapped the <code>-</code> key to trigger several useful <code>console.log()</code>’s. This meant that I could quickly get a status update on several of the key functions of the app — without these logs cluttering up the console upon every action.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/to-do-custom-hotkeys.png\" alt=\"My To-Do code\" />\n                    <figcaption className=\"figure-caption text-center\">I mapped some custom hotkeys in my To-Do List app</figcaption>\n                </figure>\n\n                <h3 className=\"text-center\">Frameworks and Libraries</h3>\n\n                <p>\n                    The prompt for this week’s blog post asked: “Why do you see JavaScript frameworks and libraries [as] useful or hard to use?” I thought that this was an interesting question, as I would likely answer that I find frameworks and libraries as both useful AND hard to use (at least at first).\n                    </p>\n\n                <p>\n                    JavaScript frameworks and libraries are really useful — they abstract away a lot of functionality, allowing you to write code that is both clean and highly functional. Cleaner code allows for easier debugging and maintenance. Additionally, many of the functionalities contained within these frameworks or libraries solve complex problems that took entire teams of highly skilled individuals to solve. Many coders (especially novice ones like myself) would be hard pressed to solve these problems, let alone with code that remains remotely legible.\n                    </p>\n\n                <p>\n                    And in answer to the second part of the prompt: I also think that frameworks and libraries can be difficult to learn. Picking up any new aspect of coding can be challenging. You often work really hard to attain some level of competency in a certain area, and then a new framework or library comes knocking at our door. This new tech offers increased functionality and powerful new features, but comes at the cost of jumping (yet again) into the <a href=\"https://s3.amazonaws.com/viking_education/web_development/blog/coding_is_hard_confidence_competence.png\" title=\"Graphic from Erik Trautman's 'Why Learning to Code is So Damn Hard'\">desert of despair</a>. Couple this with the fact that you may then have to refactor many of your old projects in order to incorporate this new tech, and you might be tempted to slam your door on the framework/library salesman and go back to the comfort of your old code. As tempting as this is, I think that the added functionality of new frameworks/libraries, as well as the opportunity to keep your 'learning muscle' strong, more than justifies the mental discomfort and extra work — even if it will always remain tempting to stay within your comfort zone --> &#128563;.\n                    </p>\n\n                <p>\n                    [Bonus content: Since I added an emoji above, here is a <a href=\"https://www.w3schools.com/charsets/ref_emoji.asp\" title=\"w3schools - Emoji Reference Page\">great resource</a> for adding emoji's to your code!]\n                    </p>\n\n                <h3 className=\"text-center\">Coming Attractions: React</h3>\n\n                <p>\n                    Next week we will begin working with the <a href=\"https://reactjs.org\" title=\"The React Website\">React library</a>. React is billed as a “JavaScript library for building user interfaces”. I am really excited to make this jump! We have been working with <abbr title=\"Plain JavaScript without any additional Frameworks or Libraries\">Vanilla JavaScript</abbr> for several weeks now, and although Vanilla JS was very challenging at first, I have started to get fairly comfortable, at least with the more basic applications that we have been building. As such, I’m really excited to dive in and get out of my comfort zone!\n                    </p>\n\n                <h3 className=\"text-center\">VS Code Snippets</h3>\n\n                <p>\n                    One resource that I found this week that was really helpful was this article on <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\" title=\"VS Code Documentation — Snippets\">creating VS Code snippets</a>. Snippets are lines of text that you can program to auto-complete into useful lines of code! I wrote a snippet for quickly adding <code>console-log()</code>’s to my code: you type in <code>lll</code> (three lowercase L’s), and then press <code>Enter</code>. This converts the <code>lll</code> into a new <code>console.log();</code>, with the text input cursor placed in the parentheses for quickly typing what you want to log. I chose the letter L because it is next to the enter key, allowing for very quick implementation!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek4;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nfunction BCWeek5() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    A lot of things happened this week — buckle up for a relatively long weekly update!\n                    </p>\n\n                <h3 className=\"text-center\">The Big Chop</h3>\n\n                <p>\n                    On Wednesday, I scheduled my first haircut in nearly 5 years!\n                    I started growing my hair out in January of 2016, with the\n                    intention of one day having a “man bun”. By the Fall of 2016,\n                    my hair was finally long enough to go up in a bun… and from\n                    there it just kept growing and growing!\n                    </p>\n\n                <p>\n                    Over the last few months, I had started to get a little tired\n                    of its extreme length. It had gotten to the point where\n                    it was almost too long for a bun and, after showering, my\n                    hair would remain wet for hours! This month I decided that\n                    I was going to go ahead and commit, so I scheduled the big chop!\n                    </p>\n\n                <p>\n                    It has definitely been a significant change — I keep running my\n                    hands through my hair, and I admit to surprising myself a few\n                    times when I walk by a mirror. So far, I haven’t really\n                    missed the length — I think I’ve been so busy enjoying\n                    not having hair in my eyes, that I haven’t really felt any\n                    remorse for the missing locks.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-before-the-haircut-blur-frame.jpg\"\n                            alt=\"Before the big chop\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Standing outside the barbershop!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-getting-a-haircut-blur-frame.jpg\"\n                            alt=\"Starting the haircut\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Greg brushing out my hair</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-mid-chop-blur-frame.jpg\"\n                            alt=\"Midchop\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">The final product...</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-and-anna-after-haircut-crop.jpg\"\n                            alt=\"After the haircut\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">The actual final product... a happy girlfriend!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-hair-measured-length.JPG\"\n                            alt=\"15 inches of hair\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">15-inches — ready for donation to Wigs For Kids!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">Fall Festivities</h3>\n\n                <p>\n                    On Saturday, Anna and I went hiking in Berea. We started off\n                    by getting some bagels at{' '}\n                        <a href=\"https://www.instagram.com/nativebagelco/\" title=\"Instagram\">Native Bagel Co</a>.\n                I would really recommend the salt bagel with honey-rosemary cream cheese — so good!\n                We then hiked up to the top of East Pinnacle. Even though\n                we were hoping for more Fall colors, the view was amazing\n                and it was perfect weather for being outside. Afterwards,\n                we drove over to{' '}\n                        <a href=\"https://www.instagram.com/eckertsorchard/\" title=\"Instagram\"> Eckert’s Orchard</a>{' '}\n                    for some more Fall fun! We ordered their warm doughnut\n                    Sunday: a warm apple cider doughnut, covered with vanilla\n                    ice cream, and drizzled with caramel syrup. Very yummy!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/berea-hike-view.JPG\"\n                            alt=\"View from East Pinnacle\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>The view from East Pinnacle!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-and-anna-berea-hike.JPG\"\n                            alt=\"Anna and I at East Pinnacle\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>Got a selfie with nature!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/berea-hike-fall-foliage-blur-frame.jpg\"\n                            alt=\"A tree turning orange\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Saw lots of Fall foliage!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/anna-on-berea-hike-blur-frame.jpg\"\n                            alt=\"Anna hiking in Berea\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Anna leading the way</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/doughnuts-and-applecider.JPG\"\n                            alt=\"Applecider doughnuts, a doughnut sunday, and a cider slushie\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Got lots of Fall goodies at the Apple Orchard. That's a warm applecider doughnut\n                                        sunday on the right!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">React!!!</h3>\n\n                <p>\n                    This week we started working with the{' '}\n                        <a href=\"https://reactjs.org\" title=\"React Documentation\">React.JS</a>{' '}\n                    library. React is an open source project produced by Facebook,\n                    and is billed as “A JavaScript library for building user interfaces”.\n                    </p>\n\n                <p>\n                    A major feature of React is its use of components.\n                    I would define a React component as a self-contained unit that\n                    compartmentalizes a certain piece of functionality. This can be\n                    very useful: you can write a component for a button. This button\n                    component can contain all of the necessary code for a button (its shape,\n                    what happens when it is clicked, etc). You can then call that\n                    button component anywhere you want to insert a button on your site.\n                    </p>\n\n                <p>\n                    Here is an example of a \"Card\" component that I made for our{' '}\n                        <a href=\"https://robbiegay.github.io/react-restaurant/\">React Restaurant project</a>:\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/using-react-components.png\"\n                        alt=\"An example of a React component\" />\n                    <figcaption className=\"figure-caption text-center\">A React Component</figcaption>\n                </figure>\n\n                <p>\n                    The card component creates an <code>&lt;h5&gt;</code> (header) element for\n                        the title, an <code>&lt;h6&gt;</code> (header) element for the price, and\n                        a <code>&lt;p&gt;</code> (paragraph) element for the description.\n                        You may have noticed the <code>&#123;this.props.mealTitle&#125;</code> lines of code —\n                                        A useful feature of components is that you can pass properties\n                        into them using <code>props</code>.\n                    </p>\n\n                <p>\n                    Within the Card component, I set the inner HTML of the above\n                        mentioned elements to <code>&#123;this.props.INPUT&#125;</code>. React\n                                        often uses an extension of JavaScript called{' '}\n                        <a href=\"https://reactjs.org/docs/introducing-jsx.html\" title=\"React Documentation\">JSX</a>. JSX allows\n                        you to put any valid JS expression within <code>{}</code> (curly braces),\n                                        and that expression will then be evaluated. In my example\n                        code, I placed <code>this.props.INPUT</code> within the curly\n                        braces. <code>this</code> refers to the component itself,{' '}\n                        <code>props</code> refers to properties of the object, and\n                        then <code>INPUT</code> is a placeholder for whatever element\n                                        you want to pass through to the component.\n                    </p>\n\n                <p>\n                    When I call the component, I am then able to use this syntax\n                    to pass code into the component.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/card-example.png\" alt=\"An example of component use\" />\n                    <figcaption className=\"figure-caption text-center\">Calling the \"Card\" component</figcaption>\n                </figure>\n\n                <p>\n                    In this example code, I pass in <code>mealTitle</code>,{' '}\n                        <code>mealPrice</code>, and <code>mealDescription</code>.\n                        Anything that I set these <code>props</code> equal to is inserted into\n                                            the respective React component. The result of\n                                            this example code is this:\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/card-result.png\"\n                        alt=\"The result of the component call\" />\n                    <figcaption className=\"figure-caption text-center\">The result of the component call</figcaption>\n                </figure>\n\n                <p>\n                    I found React fairly difficult to pick up. For the first few days,\n                    I felt like I was aimlessly adrift. There\n                    was so much to learn, that I wasn’t even sure where to turn my\n                    boat. Slowly I was able to gain a little traction — I would\n                    pick a project, experiment with React, and see what I could learn. A big part was being\n                    willing to break things and make mistakes. After I had spent\n                    some time building and breaking things, I slowly started to feel\n                    more comfortable using React!\n                    </p>\n\n                <h3 className=\"text-center\">The Pomodoro Method</h3>\n\n                <p>\n                    Warm-up Coach{' '}\n                        <a href=\"https://jmstewart00.github.io\" title=\"Josh's Website\">Josh</a>{' '}\n                    has recommended before that we take breaks. For me, a break typically\n                    involved reading some content online or checking my phone. Unfortunately,\n                    this isn’t really a ‘break’ as far as our brain is concerned — we\n                    are merely switching from one type of stimulus to another. As such,\n                    on Friday I decided to try the Pomodoro Method, and to start taking real breaks.\n                    </p>\n\n                <p>\n                    The <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\" title=\"Wikipedia\">Pomodoro\n                            Method</a>{' '}\n                    involves setting a timer, working with laser focus for a defined length of\n                    time, and then taking a short break. Here is an example of how these\n                    breaks would work:\n                    </p>\n\n\n                <ul>\n                    <li>25 minutes of work</li>\n                    <li>5 minute break</li>\n                </ul>\n\n                <p>\n                    After 4 of these Pomodoros, you then take a longer 15-30 minute break. An\n                    important aspect of a Pomodoro is that it is indivisible —\n                    you have to work for the full 25 minutes, and you have to maintain\n                    your state of focus throughout. I found that I was able to keep my\n                    focus much more effectively in these short bursts. Beyond this improved\n                    focus, I found the real value in the type of breaks that I took.\n                    </p>\n\n                <p>\n                    During my Pomodoro breaks, I tried to do something that didn’t involve a screen. Here are some\n                    examples of breaks that I took:\n                        <ul>\n                        <li>Short walk around the block</li>\n                        <li>Light stretching in the hallway (lots of great natural light!)</li>\n                        <li>Same hallway: opened the window, felt the sun and wind on my face, and did some\n                                yoga-like mindful breathing</li>\n                    </ul>\n                </p>\n\n                <p>\n                    These breaks might seem silly, but it was amazing how much a short break like\n                    this improved my cognitive function. Every time I returned from these\n                    breaks, I sat down at my desk totally refreshed! I found that I had the same\n                    level of energy that I was used to experiencing only at the start of the day!\n                    </p>\n\n                <p>\n                    Remembering and following through with taking breaks\n                    can be a challenge — It can be pretty tempting to remain in your chair! That\n                    said, I hope to continue to take breaks like this, as I think that they\n                    really help me do my best work!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek5;\n","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nfunction BCWeek2() {\n    return (\n        <>\n{/* <!-- Main Text --> */}\n                <article className=\"text-justify\">\n\n                    <h3 className=\"text-center\">Weekly Update</h3>\n\n                    <p>\n                        Week 6 of the Bootcamp was pretty fun!{' '}\n                        <a href=\"https://wildercat.github.io/\" title=\"Abram's Blog\">Abram</a>{' '}\n                        brought in his GameCube and we played some lunchtime{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/Super_Smash_Bros._Melee\" title=\"Wikipedia Page\">Melee</a>. \n                        Todd showed us his favorite game —{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/Super_Monkey_Ball_(video_game)\" title=\"Wikipedia Page\">Monkey Ball</a> — \n                        it was pretty fun but I was not very good at it. On Thursday, Anna and I carved a pumpkin! Warning: \n                        very spooky pic of said pumpkin below. On Friday, Awesome Inc held their monthly Family Lunch. \n                        They brought in Pasta and Salad from <a href=\"https://www.puccinissmilingteeth.com/\">Puccini’s</a> and all those who work out of the Awesome Inc \n                        space shared a meal! I was already a huge Puccini's pizza fan — now I’m a lover of their \n                        lasagna as well!\n                    </p>\n\n                    {/* <!-- Carousel Images --> */}\n                    <Carousel>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bootcamp-melee.jpg\"\n                                        alt=\"Playing some Melee\" />\n                            <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Some Bootcampers playing GameCube (L-R: Taylor, Abram, Myself, and Will)</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/carving-pumpkin.JPG\"\n                                        alt=\"A pic of pumpkin carving\" />\n                            <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Anna carving the eyes</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/glowing-pumpkin.JPG\"\n                                        alt=\"A glowing pumpkin\" />\n                            <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Very spooky!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/family-lunch-oct-2019.JPG\"\n                                        alt=\"Puccini’s Pasta\" />\n                            <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Family lunch — Puccini's Pasta and Salad!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n\n                    <br />\n\n                    <h3 className=\"text-center\">A Halfway Point</h3>\n\n                    <p>\n                        This Friday marked the halfway point of the Bootcamp. It is a \n                        little wild that the course has flown by so quickly. \n                        At the same time, as we started to refactor some of our earlier projects \n                        this week, I realized just how much ground we have covered in such a short period of time. \n                        I’m having a lot of fun in the Bootcamp, so it is a little bittersweet to \n                        think that the rest of the Bootcamp might fly by as well. I am very excited, however, to \n                        graduate and pursue a job in Lexington’s Tech scene!\n                    </p>\n\n                    <h3 className=\"text-center\">React Reflection</h3>\n\n                    <p>\n                        As I wrote in <a href=\"https://robbiegay.github.io/posts/bc-week-5.html\">last week’s blog post</a>, \n                        I initially struggled with understanding React. It took me most of week 5 before I even \n                        felt like I was gaining any traction. Last weekend, I got a full night's sleep \n                        and spent part of Sunday re-reading the <a href=\"https://reactjs.org/docs/getting-started.html\">React documentation</a>. \n                        This week, I worked through the <a href=\"https://reactjs.org/tutorial/tutorial.html\">React tutorial</a>{' '}\n                        for the second time, and read through the documentation \n                        a third. Each time through, I would make it further and further before my comprehension \n                        level would start to drop. By the end of the week, I was starting to feel well \n                        versed in the basics of React — just in time to switch gears and start learning \n                        MySQL and PHP. &#128579;\n                    </p>\n\n                    <h3 className=\"text-center\">Next Week: Back End Development</h3>\n\n                    <p>\n                        Next week we will start working with Back End languages. Up until this point, we have \n                        been working with Front End languages and frameworks. Front End development \n                        is more client side focused and deals with design and user interfaces. Back End development involves \n                        working with servers and doing more behind-the-scenes work. Additionally, being able to do \n                        both Front End and Back End development is what makes someone a Full Stack Developer!                           \n                    </p>\n\n                    <p>\n                        We will start Back End work by learning <a href=\"https://www.php.net/\">PHP</a>{' '}\n                        and <a href=\"https://www.mysql.com/\">MySQL</a>. We got a bit of an introduction to \n                        these languages with our morning Warm-ups this week.{' '}\n                        <a href=\"https://jmstewart00.github.io/\" title=\"Josh's Website\">Josh</a> turned us \n                        loose with some <a href=\"https://www.hackerrank.com/\">HackerRanks</a> on PHP and MySQL. \n                        Both were challenging at first, but it seems that we have become pretty good Google’ers \n                        as we were able to pull up documentation and figure out methods to solve the problems fairly quickly!\n                    </p>\n\n                    <h3 className=\"text-center\">Keyboard Shortcuts</h3>\n\n                    <p>\n                        After using <a href=\"https://code.visualstudio.com/\" title=\"VS Code Website\">VS Code</a>{' '}\n                        daily for several weeks, I decided that today it was time to learn some useful shortcuts \n                        for the software. I listed below some of the useful shortcuts that I found:\n                        \n                    </p>\n\n                    <ul>\n                        <li>\n                            <kbd>⌥</kbd> + <kbd>click</kbd> --> Add cursor\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>C</kbd> OR <kbd>⌘</kbd> + <kbd>X</kbd> (empty selection) --> Copy or Cut entire line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>L</kbd> --> Select current line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>D</kbd> --> Add to current selection \n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>&larr; OR &rarr;</kbd> --> Move to beginning or end of line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>⌥</kbd> + <kbd>&larr; OR &rarr;</kbd> --> Move to left or right editor\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>⌥</kbd> + <kbd>S</kbd> --> Save all\n                        </li>\n                        <li>\n                            <kbd>shift</kbd> + <kbd>⌥</kbd> + <kbd>F</kbd> --> Format document\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>B</kbd> --> Toggle sidebar visibility\n                        </li>\n                    </ul>\n\n                    <p>\n                        Finally, a somewhat unusual shortcut that I found was for something called Zen Mode. \n                        Similar to Focus Mode in Microsoft Word, it minimizes distracting elements of the screen, \n                        allowing you to focus on the act of coding:\n                    </p>\n\n                    <ul>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>K</kbd> then press <kbd>Z</kbd> --> Zen Mode ( <kbd>esc</kbd> <kbd>esc</kbd> (twice) to exit)\n                        </li>\n                    </ul>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n\n                </article>\n        </>\n    );\n}\n\nexport default BCWeek2;\n","import React from 'react';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport PageFormat from './PageFormat';\nimport AuthorCard from './AuthorCard';\nimport PWWeek1 from './blogPosts/PWWeek1';\nimport PWWeek2 from './blogPosts/PWWeek2';\nimport PWWeek3 from './blogPosts/PWWeek3';\nimport PWWeek4 from './blogPosts/PWWeek4';\nimport BCWeek1 from './blogPosts/BCWeek1';\nimport BCWeek2 from './blogPosts/BCWeek2';\nimport BCWeek3 from './blogPosts/BCWeek3';\nimport BCWeek4 from './blogPosts/BCWeek4';\nimport BCWeek5 from './blogPosts/BCWeek5';\nimport BCWeek6 from './blogPosts/BCWeek6';\n// import BCWeek7 from './blogPosts/BCWeek7';\n// import BCWeek8 from './blogPosts/BCWeek8';\n// import BCWeek9 from './blogPosts/BCWeek9';\n// import BCWeek10 from './blogPosts/BCWeek10';\n// import BCWeek11 from './blogPosts/BCWeek11';\n// import BCWeek12 from './blogPosts/BCWeek12';\n// import JHWeek1 from './blogPosts/JHWeek1';\n// import JHWeek4 from './blogPosts/JHWeek4';\n// import 20Week5 from './blogPosts/20Week5';\n// import 20Week9 from './blogPosts/20Week9';\n\n\nclass BlogPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blogPost: \"\",\n            title: \"\",\n            date: \"\"\n        }\n    }\n\n    getPost() {\n        let idx = window.location.pathname.lastIndexOf(\"/\")\n        let postName = window.location.pathname.slice(idx + 1);\n        switch (postName) {\n            case \"PWWeek1\":\n                this.setState({\n                    blogPost: <PWWeek1 />,\n                    title: \"Prework Week 1: Bootcamp Path and Intro to Git\",\n                    date: <time datetime=\"2019-09-07\">August 30<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"PWWeek2\":\n                this.setState({\n                    blogPost: <PWWeek2 />,\n                    title: \"Prework Week 2: HTML and CSS\",\n                    date: <time datetime=\"2019-09-07\">September 2<sup>nd</sup>,\n                    2019</time>\n                });\n                break;\n            case \"PWWeek3\":\n                this.setState({\n                    blogPost: <PWWeek3 />,\n                    title: \"Prework Week 3: An Introduction to JavaScript\",\n                    date: <time datetime=\"2019-09-07\">September 7<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"PWWeek4\":\n                this.setState({\n                    blogPost: <PWWeek4 />,\n                    title: \"Prework Week 4: More JavaScript, the end of Prework\",\n                    date: <time datetime=\"2019-09-13\">September 13<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"BCWeek1\":\n                this.setState({\n                    blogPost: <BCWeek1 />,\n                    title: \"Bootcamp Week 1: Bootstrap and Design Theory\",\n                    date: <time datetime=\"2019-09-22\">Sept. 22<sup>nd</sup>, 2019</time>\n                });\n                break;\n            case \"BCWeek2\":\n                this.setState({\n                    blogPost: <BCWeek2 />,\n                    title: \"Bootcamp Week 2: JavaScript Projects\",\n                    date: <time datetime=\"2019-09-29\">Sept. 29<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"BCWeek3\":\n                this.setState({\n                    blogPost: <BCWeek3 />,\n                    title: \"Bootcamp Week 3: More JavaScript Projects\",\n                    date: <time datetime=\"2019-10-05\">October 5<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"BCWeek4\":\n                this.setState({\n                    blogPost: <BCWeek4 />,\n                    title: \"Bootcamp Week 4: Saying Goodbye to Vanilla JS\",\n                    date: <time datetime=\"2019-09-07\">October 13<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"BCWeek5\":\n                this.setState({\n                    blogPost: <BCWeek5 />,\n                    title: \"Bootcamp Week 5: React.JS\",\n                    date: <time datetime=\"2019-09-07\">October 20<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"BCWeek6\":\n                this.setState({\n                    blogPost: <BCWeek6 />,\n                    title: \"Bootcamp Week 6: More React, A Halfway Point\",\n                    date: <time datetime=\"2019-10-26\">October 26<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            default:\n                console.log(\"Error: default case triggered.\");\n        }\n    }\n    componentDidMount() {\n        this.getPost();\n    }\n\n    render() {\n        return (\n            <>\n                <NavBar />\n                <PageFormat>\n                    <AuthorCard title={this.state.title} date={this.state.date} />\n                    {this.state.blogPost}\n                </PageFormat>\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default BlogPost;","import React from 'react';\nimport './App.css';\nimport Homepage from './Homepage';\nimport Blog from './Blog';\nimport Portfolio from './Portfolio';\nimport Music from './Music';\nimport BlogPost from './/BlogPost';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  function changePage(pageName) {\n    document.location.href = pageName;\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage style={{ height: '100vh', width: '100vw' }} changePage={changePage} />\n            </Route>\n            <Route exact path=\"/blog\">\n              <Blog />\n            </Route>\n            <Route path=\"/blog\">\n              <BlogPost />\n            </Route>\n            <Route path=\"/portfolio\">\n              <Portfolio />\n            </Route>\n            <Route path=\"/music\">\n              <Music />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}