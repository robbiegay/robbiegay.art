{"version":3,"sources":["documents/robbie-gay-resume.pdf","Homepage.js","NavBar.js","Footer.js","PageFormat.js","Blog.js","ProjectsViewer.js","Portfolio.js","CountUpTimer.js","Music.js","AuthorCard.js","blogPosts/PWWeek1.js","blogPosts/PWWeek2.js","blogPosts/PWWeek3.js","blogPosts/PWWeek4.js","blogPosts/BCWeek1.js","blogPosts/BCWeek2.js","blogPosts/BCWeek3.js","blogPosts/BCWeek4.js","blogPosts/BCWeek5.js","blogPosts/BCWeek6.js","blogPosts/BCWeek7.js","blogPosts/BCWeek8.js","blogPosts/BCWeek9.js","blogPosts/BCWeek10.js","blogPosts/BCWeek11.js","blogPosts/BCWeek12.js","blogPosts/JHWeek1.js","blogPosts/JHWeek4.js","blogPosts/January2020.js","blogPosts/February2020.js","blogPosts/March2020.js","BlogPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","props","blogButton","portfolioButton","musicButton","centerX","centerY","yPerc","spaceSize","time","ftime","space","grid","cu","Color","lab","maxValues","columnNum","size","x","y","this","form","font","color","p","p1","$divide","colorIntensity","pointer","c1","$multiply","Pt","make","to","LABtoRGB","toString","i","len","Create","gridCells","innerBound","length","ceil","c","interpolate","Num","cycle","fillOnly","rect","nameRect","Rectangle","fromCenter","fill","stroke","alignText","paragraphBox","blogRect","render","g","polygon","portfolioRect","musicRect","hovOn","ui","group","scale","centroid","hovOff","UIButton","fromPolygon","onClick","changePage","onHover","type","event","UI","track","bound","bindMouse","bindTouch","play","PtsCanvas","NavBar","Navbar","expand","sticky","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Text","PageFormat","Container","fluid","Row","Col","xs","sm","md","lg","children","Blog","title","target","rel","Accordion","Card","Header","style","backgroundColor","as","variant","eventKey","cursor","Body","datetime","ProjectsViewer","CardDeck","Title","Portfolio","Image","src","roundedCircle","fontSize","height","width","display","Button","Pdf","CountUpTimer","useState","Date","firstSongDate","years","days","hrs","min","sec","mil","countdown","setCountdown","h","m","d","useEffect","timer","setInterval","totalM","now","valueOf","Math","floor","hours","milli","clearInterval","Music","scrolling","frameborder","allow","rounded","AuthorCard","maxWidth","Img","date","PWWeek1","alt","PWWeek2","Carousel","Item","Caption","PWWeek3","PWWeek4","BCWeek2","BCWeek3","BCWeek4","BCWeek5","BCWeek7","BCWeek8","controls","BCWeek9","BCWeek10","BCWeek11","BCWeek12","JHWeek1","JHWeek4","January2020","February2020","March2020","BlogPost","state","blogPost","idx","window","location","pathname","lastIndexOf","slice","setState","BCWeek1","BCWeek6","console","log","getPost","React","Component","App","exact","path","pageName","document","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89359cce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robbie-gay-resume.3e6d8200.pdf\";","import { PtsCanvas } from \"react-pts-canvas\";\nimport { Color, Create, Pt, Num, Rectangle, UIButton, UI, Bound } from \"pts\";\n\nclass Homepage extends PtsCanvas {\n    constructor(props) {\n        super(props);\n        this.blogButton = null;\n        this.portfolioButton = null;\n        this.musicButton = null;\n\n        this.centerX = null;\n        this.centerY = null;\n        // 1% of the space width\n        this.yPerc = null;\n\n        // Used to prevent buttons from re-rendering at every animation cycle\n        this.spaceSize = null;\n    }\n\n    animate(time, ftime, space) {\n        // Background\n\n        // Grid of colored squares\n        var grid = [];\n        // Colors\n        let cu = Color.lab(Color.maxValues(\"lab\"))\n        let ratio = space.size.x / space.size.y;\n        let columnNum = 20 * ratio\n        let rowNum = 20\n        // Page font\n        this.form.font(75, \"normal\", \"normal\", 1, \"Roboto\")\n        grid = Create.gridCells(space.innerBound, columnNum, rowNum);\n\n        // get LAB color string, given a point position\n        let color = (p) => {\n            let p1 = p.$divide(space.size);\n            let p2 = space.pointer.$divide(space.size);\n            let colorIntensity = 0.65 - (p2.y * 0.3)\n            let c1 = cu.$multiply(Pt.make(4, 1).to(colorIntensity, p1.x - 0.5, p1.y - 0.5));\n            return Color.LABtoRGB(c1).toString(\"rgb\");\n        }\n\n        for (let i = 0, len = grid.length; i < len; i++) {\n            grid[i][1].ceil();\n            let c = grid[i].interpolate(Num.cycle((time + i * 60) % 1000 / 1000));\n            this.form.fillOnly(color(c)).rect(grid[i]);\n        }\n        \n        // Textbox\n        this.centerX = space.size.x / 2\n        this.centerY = space.size.y / 2\n        this.yPerc = space.size.y / 100\n\n        let nameRect = Rectangle.fromCenter( [this.centerX,this.centerY - (this.yPerc * 15)], 400  ); //size.$max( space.size.$divide(6) )\n        this.form.fill(\"rgba(0,0,0,0)\").font(75).stroke(\"rgba(0,0,0,0)\", 3).rect( nameRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( nameRect, \"robbiegay\", 1, \"middle\", false );\n\n        let blogRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 10)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( blogRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( blogRect, \"dev blog\", 1, \"middle\", false );\n        this.blogButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n\n        let portfolioRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 20)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( portfolioRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( portfolioRect, \"portfolio\", 1, \"middle\", false );\n        this.portfolioButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n\n        let musicRect = Rectangle.fromCenter( [this.centerX,this.centerY + (this.yPerc * 30)], 300  );\n        this.form.fill(\"rgba(0,0,0,0)\").font(40).stroke(\"rgba(0,0,0,0)\", 3).rect( musicRect );\n        this.form.fillOnly(\"#FFF\").alignText(\"center\").paragraphBox( musicRect, \"music\", 1, \"middle\", false );\n        this.musicButton.render( g => this.form.fillOnly(\"rgba(0,0,0,0.05)\").polygon(g) );\n        \n        // checks to see if window has been resized. If so, re-renders buttons\n        if (this.spaceSize.x !== space.size.x) {\n            let hovOn = (ui) => ui.group.scale(1.1, ui.group.centroid());;\n            let hovOff = (ui) => ui.group.scale(100/110, ui.group.centroid());\n            this.blogButton = UIButton.fromPolygon( [\n                [this.centerX - 100, this.centerY + (this.yPerc * 6)], \n                [this.centerX - 100 , this.centerY + (this.yPerc * 14)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 14)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 6)]\n            ] );\n            this.blogButton.onClick( x => { \n                this.props.changePage(\"blog\");\n            } );\n            this.blogButton.onHover( hovOn, hovOff );\n\n            this.portfolioButton = UIButton.fromPolygon( [\n                [this.centerX - 100, this.centerY + (this.yPerc * 16)], \n                [this.centerX - 100 , this.centerY + (this.yPerc * 24)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 24)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 16)]\n            ] );\n            this.portfolioButton.onClick( x => { \n                this.props.changePage(\"portfolio\");\n            } );\n            this.portfolioButton.onHover( hovOn, hovOff );\n    \n            this.musicButton = UIButton.fromPolygon( [\n                [this.centerX - 100, this.centerY + (this.yPerc * 26)], \n                [this.centerX - 100 , this.centerY + (this.yPerc * 34)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 34)], \n                [this.centerX + 100, this.centerY + (this.yPerc * 26)]\n            ] );\n            this.musicButton.onClick( x => { \n                this.props.changePage(\"music\");\n            } );\n            this.musicButton.onHover( hovOn, hovOff );\n\n            // After re-rendering buttons, updates spaceSize variable to new window size\n            this.spaceSize = space.size\n        }\n    }\n\n    action(type, x, y, event) { \n        UI.track( [this.blogButton, this.portfolioButton, this.musicButton], type, new Pt(x, y), event );\n    }\n\n    start(bound, space) {\n        // Creates buttons on page load\n        this.spaceSize = space.size;\n        let hovOn = (ui) => ui.group.scale(1.1, ui.group.centroid());;\n        let hovOff = (ui) => ui.group.scale(100/110, ui.group.centroid());\n        this.centerX = space.size.x / 2\n        this.centerY = space.size.y / 2\n        this.yPerc = space.size.y / 100\n\n        this.blogButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 6)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 14)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 14)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 6)]\n        ] );\n        this.blogButton.onClick( x => { \n            this.props.changePage(\"blog\");\n        } );\n        this.blogButton.onHover( hovOn, hovOff );\n\n        this.portfolioButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 16)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 24)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 24)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 16)]\n        ] );\n        this.portfolioButton.onClick( x => { \n            this.props.changePage(\"portfolio\");\n        } );\n        this.portfolioButton.onHover( hovOn, hovOff );\n\n        this.musicButton = UIButton.fromPolygon( [\n            [this.centerX - 100, this.centerY + (this.yPerc * 26)], \n            [this.centerX - 100 , this.centerY + (this.yPerc * 34)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 34)], \n            [this.centerX + 100, this.centerY + (this.yPerc * 26)]\n        ] );\n        this.musicButton.onClick( x => { \n            this.props.changePage(\"music\");\n        } );\n        this.musicButton.onHover( hovOn, hovOff );\n\n        space.bindMouse().bindTouch().play();\n    }\n}\n\nexport default Homepage\n\n/*\n\n3.2.20: Done with initial build of new website. Started on Thursday Feb 28, 2020. Finished \nthe following Monday. Took about 30 hours.\nGeneral:\n\n*/\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction NavBar() {\n    return (\n        <>\n        <Router>\n            <Navbar expand=\"md\" sticky=\"top\" bg=\"light\"> \n                <Navbar.Brand href=\"/\">robbiegay</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/blog\">blog</Nav.Link>\n                        <Nav.Link href=\"/portfolio\">portfolio</Nav.Link>\n                        <Nav.Link href=\"/music\">music</Nav.Link>\n                        {/* <Nav.Link target=\"_blank\" href=\"https://soundcloud.com/robbiegay\">music</Nav.Link> */}\n                        {/* <Nav.Link target=\"_blank\" href=\"https://github.com/robbiegay\">github</Nav.Link> */}\n                        {/* <Nav.Link target=\"_blank\" href=\"https://www.linkedin.com/in/robbiegay/\">linkedin</Nav.Link> */}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            </Router>\n        </>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nfunction Footer() {\n    return (\n        <>\n            <footer>\n                <Navbar sticky=\"bottom\" bg=\"light\">\n                    <Navbar.Text>\n                        <em>&copy; 2020 Robbie Gay. All rights reserved.</em>\n                    </Navbar.Text>\n                </Navbar>\n            </footer>\n        </>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction PageFormat(props) {\n    return (\n        <>\n            <Container fluid>\n                <Row>\n                    <Col xs={0} sm={1} md={2} lg={3}></Col>\n                    <Col xs={12} sm={10} md={8} lg={6}>\n                        <article className=\"text-justify\">\n                            {props.children}\n                        </article>\n                    </Col>\n                    <Col xs={0} sm={1} md={2} lg={3}></Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default PageFormat;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\"\nimport PageFormat from \"./PageFormat\"\nimport { Card, Accordion } from \"react-bootstrap\";\n\nfunction Blog() {\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Blog Posts</h1>\n            <PageFormat>\n                <p>\n                    Welcome to my blog! This blog started as an assignment for\n                    the <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Webpage\" target=\"_blank\" rel=\"noopener noreferrer\">Awesome Inc Web Developer's Bootcamp</a>.\n                    I have continued to post articles (at a much slower rate) about web and mobile development\n                    topics that are interesting to me. Below you can find a list of blog articles. I hope you enjoy!\n                </p>\n\n                <Accordion>\n                    {/* defaultActiveKey=\"0\" */}\n                    <Card>\n                        <Card.Header style={{ backgroundColor: \"lightGray\" }} className=\"text-center\">\n                            <b>2019 — Awesome Inc Bootcamp</b>\n                        </Card.Header>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\" style={{cursor: \"pointer\"}}>\n                            August\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-08-30\">8.30.2019</time>\n                                        : <a href=\"/blog/pw-week-1\" title=\"Prework Week 1 Blog Post\">\n                                            Prework Week 1: Git and Github\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\" style={{cursor: \"pointer\"}}>\n                            September\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-09-02\">9.2.2019</time>\n                                        : <a href=\"/blog/pw-week-2\" title=\"Prework Week 2 Blog Post\">\n                                            Prework Week 2: HTML, CSS, and Pseudo Code\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-07\">9.7.2019</time>\n                                        : <a href=\"/blog/pw-week-3\" title=\"Prework Week 3 Blog Post\">\n                                            Prework Week 3: JavaScript\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-13\">9.13.2019</time>\n                                        : <a href=\"/blog/pw-week-4\" title=\"Prework Week 4 Blog Post\">\n                                            Prework Week 4: More JavaScript\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-22\">9.22.2019</time>\n                                        : <a href=\"/blog/bc-week-1\" title=\"Bootcamp Week 1 Blog Post\">\n                                            Bootcamp Week 1: Bootstrap\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-09-29\">9.29.2019</time>\n                                        : <a href=\"/blog/bc-week-2\" title=\"Bootcamp Week 2 Blog Post\">\n                                            Bootcamp Week 2: JavaScript Projects\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"2\" style={{cursor: \"pointer\"}}>\n                            October\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"2\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-10-05\">10.5.2019</time>\n                                        : <a href=\"/blog/bc-week-3\" title=\"Bootcamp Week 3 Blog Post\">\n                                            Bootcamp Week 3: More JavaScript Projects\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-13\">10.13.2019</time>\n                                        : <a href=\"/blog/bc-week-4\" title=\"Bootcamp Week 4 Blog Post\">\n                                            Bootcamp Week 4: Saying Goodbye to Vanilla JS\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-20\">10.20.2019</time>\n                                        : <a href=\"/blog/bc-week-5\" title=\"Bootcamp Week 5 Blog Post\">\n                                            Bootcamp Week 5: React.JS\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-10-26\">10.26.2019</time>\n                                        : <a href=\"/blog/bc-week-6\" title=\"Bootcamp Week 6 Blog Post\">\n                                            Bootcamp Week 6: More React, A Halfway Point\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"3\" style={{cursor: \"pointer\"}}>\n                            November\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"3\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-11-3\">11.3.2019</time>\n                                        : <a href=\"/blog/bc-week-7\" title=\"Bootcamp Week 7 Blog Post\">\n                                            Bootcamp Week 7: Back End Development\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-9\">11.9.2019</time>\n                                        : <a href=\"/blog/bc-week-8\" title=\"Bootcamp Week 8 Blog Post\">\n                                            Bootcamp Week 8: Laravel Library\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-17\">11.17.2019</time>\n                                        : <a href=\"/blog/bc-week-9\" title=\"Bootcamp Week 9 Blog Post\">\n                                            Bootcamp Week 9: Catgram\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-11-24\">11.24.2019</time>\n                                        : <a href=\"/blog/bc-week-10\" title=\"Bootcamp Week 10 Blog Post\">\n                                            Bootcamp Week 10: Final Projects\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"4\" style={{cursor: \"pointer\"}}>\n                            December\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"4\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2019-12-01\">12.1.2019</time>\n                                        : <a href=\"/blog/bc-week-11\" title=\"Bootcamp Week 11 Blog Post\">\n                                            Bootcamp Week 11: Final Project Prototype\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-07\">12.7.2019</time>\n                                        : <a href=\"/blog/bc-week-12\" title=\"Bootcamp Week 12 Blog Post\">\n                                            Bootcamp Week 12: Demo Day\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-15\">12.15.2019</time>\n                                        : <a href=\"/blog/jh-week-1\" title=\"Job Hunt Week 1 Blog Post\">\n                                            30-60-90\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <time datetime=\"2019-12-31\">12.31.2019</time>\n                                        : <a href=\"/blog/jh-week-4\" title=\"Job Hunt Week 4 Blog Post\">\n                                            React Hooks\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Card.Header style={{ backgroundColor: \"lightGray\" }} className=\"text-center\">\n                            <b>2020 — Freelance Web and Mobile Developer</b>\n                        </Card.Header>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"5\" style={{cursor: \"pointer\"}}>\n                            January\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"5\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2020-01-31\">1.31.2020</time>\n                                        : <a href=\"/blog/jan-2020\" title=\"January 2020 Blog Post\">\n                                            Swift vs React\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"6\" style={{cursor: \"pointer\"}}>\n                            February\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"6\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2020-02-29\">2.29.2020</time>\n                                        : <a href=\"/blog/feb-2020\" title=\"February 2020 Blog Post\">\n                                            Design\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"7\" style={{cursor: \"pointer\"}}>\n                            March\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"7\">\n                            <Card.Body>\n                                <ul>\n                                    <li>\n                                        <time datetime=\"2020-03-31\">3.31.2020</time>\n                                        : <a href=\"/blog/mar-2020\" title=\"March 2020 Blog Post\">\n                                            Creating an Image Cache\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n            </PageFormat>\n\n            <br /><br /><br />\n            <Footer />\n        </>\n    );\n}\n\nexport default Blog;\n","import React from \"react\";\nimport { CardDeck, Card } from \"react-bootstrap\";\n\nfunction ProjectsViewer() {\n    // let fontSize = \"30px\";\n    // let largerSize = \"75px\";\n\n    return (\n        <>\n            <CardDeck>\n                <Card>\n                    <Card.Header>Instagram Clone</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Swift, Firebase, Xcode</Card.Title>\n                        <Card.Text>\n                        <ul>\n                            <li>\n                                <a href=\"https://www.youtube.com/watch?v=tRLZppAY7Ik\">Video Demo</a>\n                            </li>\n                            <li>\n                                <a href=\"https://github.com/robbiegay/learning-swift/tree/master/instagram-firebase-clone\">GitHub Repo</a>\n                            </li>\n                        </ul>\n                            In order to better understand Swift and mobile app development, I have been \n                            working on a clone of the Instagram app, with backend data being stored on \n                            Firebase. I hope to have this app completed by the end of April 2020. In the meantime, \n                            feel free to check out a video demo of the current state of the app by following the link \n                            above!\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">April 2020</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Moolathon App</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Swift, Firebase, Google Maps SDK</Card.Title>\n                        <Card.Text>\n                        <ul>\n                            <li>\n                                <a href=\"https://apps.apple.com/us/app/moolathon/id1486017163\">Apple App Store Link</a>\n                            </li>\n                            <li>\n                                <a href=\"http://moolathon.com/\">Moolathon Website</a>\n                            </li>\n                        </ul>\n                            In the Spring of 2020, I worked as a part of a team developing an app called Moolathon. \n                            Moolathon is a fitness fundraising app, where users raise money by running more miles. \n                            I helped create a feature where users could turn a workout summary into an easily shareable \n                            post for social media. Moolathon was released on the Apple App store in March of 2020.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">March 2020</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Robbiegay.art</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Bootstrap, React.js, React Router, Pts.js</Card.Title>\n                        <Card.Text>\n                        <ul>\n                            <li>\n                                <a href=\"https://www.robbiegay.art/\">Demo</a>\n                            </li>\n                            <li>\n                                <a href=\"https://github.com/robbiegay/robbiegay.art\">GitHub Repo</a>\n                            </li>\n                        </ul>\n                            In late February I decided it was finally time to upgrade my website. \n                            I built <a href=\"https://robbiegay.github.io/\">my old website</a> early on in \n                            the Bootcamp, and thought that due to how much new technology I was familiar with, \n                            it would be best to rebuild from the ground up. This iteration of my website is built \n                            using Bootstrap and React.js for the front end. The page navigation is run through \n                            React Router. For the homepage, I wanted to do something that both showed some technical \n                            skill in the Web Developer department, as well as something create to showcase my background \n                            in the arts. I created a homepage the animated through a range of \"sunrise-ey\" colors, and that \n                            will increase in luminosity as a user move their mouse vertically from the bottom to the \n                            top of the page.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">February 2020</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Phone Simulator</Card.Header>\n                    <Card.Body>\n                        <Card.Title>React.js and Hooks</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/phone-sim/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/phone-sim\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            For the Phone Simulator, I combined 6 projects that we worked on during\n                            the Awesome Inc Web Developer Bootcamp. The Phone Simulator displays the\n                            current time at the top of the \"screen\". Below that, there is a weather\n                            module that pulls realtime weather data based on your current location.\n                            Below the weather app is a countdown timer (currently set to countdown\n                            to my birthday — March 21st). Below the countdown timer are three\n                            applications: Calculator, Todo List, and Mind Reader.\n                            <br /><br />\n                            For this project, I wanted to \n                            use <a href=\"https://reactjs.org/docs/hooks-intro.html\" title=\"React Hooks Documentation\">React Hooks</a>, as\n                            these are a feature of React that I was previously not too familiar with.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">January 2020</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>MPM²</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Laravel, Tone.js, and Pts.js</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://www.youtube.com/watch?v=lDrPAQl78dc\">Demo Video</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/mpm2\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Prior to the F19 Bootcamp, I spent several years making electronic music and, \n                            for the past year, hosted a talk show on WRFL interviewing music makers. For my \n                            final project, I wanted to do something that combined my love of digital music \n                            with the Full Stack technologies that we learned in the course. MPM² is an \n                            interactive art installation that allows up to 7 users to control various \n                            pitch and tone aspects of an online synthesizer. Users use their mobile phones \n                            to modify their respective parameter. The sounds generated cause the main screen’s \n                            visuals to change.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">December 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Laravel Library</Card.Header>\n                    <Card.Body>\n                        <Card.Title>PHP and Laravel</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://www.youtube.com/watch?v=M9PBVx0f840\">Demo Video</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/laravel-library\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a website and checkout system for a fictional library.\n                            Used foreign keys to link between tables, allowing book and\n                            user data to be connected. Allowed users to sign-up for an account.\n                            Gave librarians the ability to add books to the database. Books can be\n                            added manually or by using searching \n                            the <a href=\"https://developers.google.com/books\">Google Books API</a>.\n                            Librarians can checkout or return books by entering the books ISBN\n                            number, and the user's username. Checked out books appear in red on \n                            the view all books page. Utilized\n                            the seven <a href=\"https://laracasts.com/series/laravel-6-from-scratch/episodes/21\">RESTful controller actions</a> and \n                            the four <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\">CRUD principles</a>.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">November 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>React Restaurant</Card.Header>\n                    <Card.Body>\n                        <Card.Title>React.js</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/react-restaurant/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/react-restaurant\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a website for a fictional restaurant located at Awesome Inc!\n                            Used the <a href=\"https://entree-f18.herokuapp.com/\">Random Menu Generator API</a> to \n                            get a list of random menu items, and then pulled both a title and a description from\n                            that JSON file. Generated random menu prices and included a parameter for low, medium,\n                            and high price range items. Menu items are stored in Local Storage,\n                            allowing for menu consistency across page loads (restaurant name, operating \n                            hours, and item prices are not saved to Local Storage and will reload upon each page load).\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>To-Do List</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Local Storage</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/to-do-list/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/to-do-list\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Worked with \n                            the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" title=\"MDN Documentation\">Local Storage API</a> in \n                            order to build a To-Do List app that can save entires\n                            between page loads. Has several \"view states\", allowing\n                            users to toggle between viewing: all entries, completed\n                            entires, or entries that you have yet to complete.                        \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Sliding Puzzle</Card.Header>\n                    <Card.Body>\n                        <Card.Title>JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/sliding-puzzle/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/sliding-puzzle\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a Sliding Puzzle game that allows users to rearrange a 4x4 grid\n                            of tiles to create a completed image. Built using an object-oriented\n                            approach, using an array of objects to store information such as the \n                            name of the tile, and the tile's current location on the board. Users \n                            can upload their own image or use the provided default image.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n            <CardDeck>\n                <Card>\n                    <Card.Header>Calculator</Card.Header>\n                    <Card.Body>\n                        <Card.Title>HTML and JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/calculator/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/calculator\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Created a calculator app that can perform various mathematical functions.\n                            Dynamically rendered the HTML elements using JS. The most challenging\n                            aspect was dealing with various \"edge-case\" scenarios. The calculator would\n                            work pretty well if users performed a basic math function (ex. 5 + 3), then \n                            cleared the memory (\"C\" button), and then performed another basic math \n                            function. A real world user, however, would likely use the calculator in \n                            many different ways. There were a multitude of orders in which the user \n                            might press various buttons. Additionally, there had to be ways of dealing with\n                            inputs that didn't make much sense at all (ex. What would happen if the\n                            user inputted: + - 53 + / 4 - 4?). And the final (and perhaps most difficult)\n                            part of dealing with edge-cases was getting to a point where you had several \n                            fixes for very specific situations, and then had to try to not break any of \n                            those old fixes whenever you implemented a fix for a new scenario.                       \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">October 2019</small>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Header>Tic-Tac-Toe</Card.Header>\n                    <Card.Body>\n                        <Card.Title>HTML and JavaScript</Card.Title>\n                        <Card.Text>\n                            <ul>\n                                <li>\n                                    <a href=\"https://robbiegay.github.io/tic-tac-toe/\">Demo</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/robbiegay/tic-tac-toe\">GitHub Repo</a>\n                                </li>\n                            </ul>\n                            Built a Tic-Tac-Toe game that allows two users to play against each\n                            other. Used nested arrays to test win conditions against the current board\n                            setup. Includes a reset button that allows the board to be reset. After at \n                            least 1 game has been played, a tally appears that keeps track of X wins, \n                            O wins and ties.\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">September 2019</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n        </>\n    );\n}\n\nexport default ProjectsViewer;","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport PageFormat from \"./PageFormat\";\nimport ProjectsViewer from \"./ProjectsViewer\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport Pdf from \"./documents/robbie-gay-resume.pdf\";\n\nfunction Portfolio() {\n    let fontSize = \"30px\";\n    let largerSize = \"75px\";\n\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Robbie Gay</h1>\n            <PageFormat>\n                <Container>\n                    <Row>\n                        <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Image src={process.env.PUBLIC_URL + \"/images/headshot-march-2020.jpg\"} roundedCircle fluid />\n                        </Col>\n                        <Col xs={2}></Col>\n                    </Row>\n                </Container>\n                <br />\n\n                {/* GitHub and LinkedIn Links */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <p>\n                            <a href=\"https://www.linkedin.com/in/robbiegay/\" title=\"My LinkedIn Profile\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\" style={{ color: \"#0077b5\", fontSize: largerSize }}></i></a>{\" \"}\n                            {/* <a href=\"https://www.upwork.com/fl/robbiegay\" title=\"My UpWork Profile\" target=\"_blank\" rel=\"noopener noreferrer\"><Image src={process.env.PUBLIC_URL + \"/websiteIcons/upwork.svg\"} style={{ height: largerSize }} className=\"mb-5\" /></a>{\" \"} */}\n                            <a href=\"https://github.com/robbiegay\" title=\"My GitHub Profile\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github-square\" style={{ color: \"#24292e\", fontSize: largerSize }}></i></a>\n                        </p>\n                    </Col>\n                    <Col></Col>\n                </Row>\n\n                {/* Bio */}\n                <p>\n                    Hi, my name is Robbie Gay. I graduated\n                    from <a href=\"https://www.centre.edu\" title=\"Centre's Website\">Centre College</a> in\n                    the Spring of 2016 with a degree in English Literature and a minor in Film Studies.\n                    For 3 years I pursued my passion for filmmaking, photography, and music, while working\n                    part time as a property manager for the Downtown Co. in Versailles, KY.\n                    In the fall of 2019, I\n                    completed <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Website\">Awesome Inc's Web Developer Bootcamp</a>, where\n                    I learned Full Stack Web Development (LAMP Tech Stack). I currently work as a Freelance mobile and web\n                    developer, with the help of my boss/mentor <a href=\"https://warnerdesigntechnology.com/\" title=\"Tommy's Website\">Tommy Warner</a>.\n                    Additionally, I still\n                    make <a href=\"https://soundcloud.com/robbiegay\" title=\"My SoundCloud Page\">music</a>! I'm\n                    mostly a laptop musician, but my goal in 2020 is to learn jazz piano — stay tuned! I also\n                    manage the RPM playbox (electronic music) for <a href=\"http://wrfl.fm/\" title=\"WRFL's website\">WRFL</a>.\n                </p>\n\n                {/* Language Icons */}\n                <p className=\"text-justify\">\n                    {/* <i className=\"fas fa-terminal\" style={{ color: \"#37932e\", fontSize: fontSize }}></i>{\" \"} */}\n                    <a href=\"https://git-scm.com/\" title=\"Git\"><i className=\"fab fa-git-alt\" style={{ color: \"#fb4f28\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://github.com/\" title=\"GitHub\"><i className=\"fab fa-github\" style={{ color: \"#24292e\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://www.w3schools.com/html/\" title=\"HTML\"><i className=\"fab fa-html5\" style={{ color: \"#ef652a\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://www.w3schools.com/css/\" title=\"CSS\"><i className=\"fab fa-css3-alt\" style={{ color: \"#2965f2\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://www.w3schools.com/js/\" title=\"JavaScript\"><i className=\"fab fa-js\" style={{ color: \"#f5df18\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://swift.org/\" title=\"Swift\"><i className=\"fab fa-swift\" style={{ color: \"#f15138\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://getbootstrap.com/\" title=\"Bootstrap\"><i className=\"fab fa-bootstrap\" style={{ color: \"#563d7d\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://reactjs.org/\" title=\"React\"><i className=\"fab fa-react\" style={{ color: \"#5fd7f6\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://www.php.net/\" title=\"PHP\"><i className=\"fab fa-php\" style={{ color: \"#8992c0\", fontSize: fontSize }}></i></a>{\" \"}\n                    {/* Added bottom margins to images to push their top alignment even with icons */}\n                    <a href=\"https://www.mysql.com/\" title=\"MySQL\"><Image src={process.env.PUBLIC_URL + \"/languageIcons/mysql.png\"} style={{ height: fontSize }} className=\"mb-3\" /></a>{\" \"}\n                    <a href=\"https://laravel.com/\" title=\"Laravel\"><i className=\"fab fa-laravel\" style={{ color: \"#ff4841\", fontSize: fontSize }}></i></a>{\" \"}\n                    <a href=\"https://firebase.google.com/\" title=\"Firebase\"><Image src={process.env.PUBLIC_URL + \"/languageIcons/firebase.png\"} style={{ height: fontSize }} className=\"mb-3\" /></a>{\" \"}\n                    <a href=\"https://ptsjs.org/\" title=\"Pts.js\"><Image src={process.env.PUBLIC_URL + \"/languageIcons/pts.png\"} style={{ height: fontSize }} className=\"mb-3\" /></a>{\" \"}\n                    <a href=\"https://tonejs.github.io/\" title=\"Tone.js\"><Image src={process.env.PUBLIC_URL + \"/languageIcons/tone.png\"} style={{ height: fontSize }} className=\"mb-3\" /></a>\n                    {/* Hack to spread the icons evenly across the line */}\n                    <span style={{ width: \"100%\", display: \"inline-block\" }}></span>\n                </p>\n\n                {/* Resume and UpWork */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <Button href={Pdf} target=\"_blank\" className=\"mr-1\">\n                            Resume\n                        </Button>\n\n                        <Button href=\"https://www.upwork.com/fl/robbiegay\" target=\"_blank\" className=\"ml-1\">\n                            UpWork\n                        </Button>\n                        <br /><br />\n                    </Col>\n                    <Col></Col>\n                </Row>\n\n                {/* Projects */}\n                <Row>\n                    <Col></Col>\n                    <Col xs=\"auto\">\n                        <h2>Projects</h2>\n                        <br />\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <ProjectsViewer />\n            </PageFormat>\n            <Footer />\n        </>\n    );\n}\n\nexport default Portfolio;\n","import { useState, useEffect } from \"react\";\n\nfunction CountUpTimer() {\n    const [firstSongDate] = useState(new Date(2013, 4, 30, 11, 39));\n    const [countdown, setCountdown] = useState({\n        years: null,\n        days: null,\n        hrs: null,\n        min: null,\n        sec: null,\n        mil: null,\n    });\n\n    const m = 1000 * 60;\n    const h = m * 60;\n    const d = h * 24;\n    const y = d * 365.2425\n\n    // function addZeros(x) {\n    //     x = x < 10 ? `0${x}` : x;\n    //     return x;\n    // }\n\n    useEffect(() => {\n        const timer = setInterval(\n            () => {\n                var totalM = Date.now() - firstSongDate.valueOf();\n                var years = Math.floor(totalM / y);\n                totalM -= years * y;\n                var days = Math.floor(totalM / d);\n                totalM -= days * d;\n                var hours = Math.floor(totalM / h);\n                totalM -= hours * h;\n                var min = Math.floor(totalM / m);\n                totalM -= min * m;\n                var sec = Math.floor(totalM / 1000);\n                totalM -= sec * 1000;\n                var milli = Math.floor(totalM / 100);\n                setCountdown({\n                    years: years,\n                    days: days,\n                    hrs: hours,\n                    min: min,\n                    sec: sec,\n                    mil: milli,\n                });\n            }, 100\n        );\n\n        return function cleanup() {\n            clearInterval(timer);\n        }\n    });\n\n    return (\n            countdown.years + \" years \" +\n            countdown.days + \" days \" +\n            countdown.hrs + \" hours \" +\n            // Seconds.tenths option\n            countdown.min + \" minutes and \" +\n            countdown.sec + \".\" +\n            countdown.mil + \" seconds\"\n\n            // Milliseconds option -> turn on addZeros() and \n            // change milli / num and interval num to 10 or 1\n            // countdown.min + \" minutes \" +\n            // countdown.sec + \" seconds and \" +\n            // countdown.mil + \" milliseconds\"\n            // addZeros(countdown.mil) + \" milliseconds\"\n    );\n}\n\nexport default CountUpTimer;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport PageFormat from \"./PageFormat\";\nimport CountUpTimer from \"./CountUpTimer\";\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\n\nfunction Music() {\n    let largerSize = \"75px\";\n\n    return (\n        <>\n            <NavBar />\n            <br />\n            <h1>Music</h1>\n            <br />\n            <PageFormat>\n                {/* Soundcloud Players */}\n                <iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/766901725&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_comments=true&show_user=true&show_reposts=true&show_teaser=true&visual=true\" />\n                {/* Music Bio */}\n                {/* Song total -> from start till bootcamp = 88 songs and covers, excluding short ideas */}\n                <p>\n                    I have been making mostly mediocre music for the last <span className=\"clockFont\"><CountUpTimer /></span>.\n                    I started making music as a first-year student at Centre College. I took a 1-credit\n                    \"Digital Music Production\" course, and with the help of my professor, Dr. Dan Worley,\n                    made a remix of an XX song. I spent the next 4 years at Centre filling my schedule with\n                    as many music theory, music production, and music performance classes as I fit. When\n                    I graduated in May 2016, I decided that I wanted to spend the next few years pursing music\n                    full-time. I moved in with my parents, worked several part-time jobs, and spent most\n                    of my time making music. During the next 3 years, I made lot of music while also reviving some old passions in\n                    filmmaking (<a href=\"https://www.youtube.com/robbiegay\" title=\"filmmaking portfolio\">filmmaking portfolio</a>) and\n                    photography (<a href=\"https://www.instagram.com/robbiegay/\" title=\"photography portfolio\">photography portfolio</a>).\n                    After 3 years of working in the arts, I decided that I wanted to pursue a day job that was\n                    both interesting and financially in-demand. I was really fortunate to hear\n                    about Awesome Inc's  <a href=\"https://www.awesomeinc.org/bootcamp\" title=\"Bootcamp Website\">Web Developer Bootcamp</a>, and\n                    I spent the Fall of 2019 completing that course. During this time, I took a break from making music.\n                    I had become burnt out on trying to make music a career, on trying to make songs that could be\n                    popular enough for me to make a living making them. During the Spring of 2020, I have been slowly\n                    getting back into making music, but with a focus now on exploring ideas that interest me. I have\n                    also made in my resolution for 2020 to try to learn Jazz Piano. As a laptop musician, I look forward to\n                    being able to play something that doesn't have to be plugged into the wall. At the top of the page\n                    you can hear an example of a recent song, or you can find links to various music platforms down below!\n            </p>\n\n                {/*  Music making photo */}\n                <Image src={process.env.PUBLIC_URL + \"/images/making-music.jpg\"} rounded fluid />\n\n                <br /><br />\n                <Container>\n                    <Row>\n                        <Col xs={3}></Col>\n                        <Col xs={6}>\n                            <p className=\"text-justify\">\n                                <a href=\"https://robbiegay.bandcamp.com/\" title=\"My BandCamp Page\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-bandcamp\" style={{ color: \"#1ea1c3\", fontSize: largerSize }}></i></a>{\" \"}\n                                <a href=\"https://soundcloud.com/robbiegay\" title=\"My SoundCloud Page\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-soundcloud\" style={{ color: \"#ff6c02\", fontSize: largerSize }}></i></a>{\" \"}\n                                {/* <a href=\"https://www.youtube.com/robbiegay\" title=\"My YouTube Channel\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-youtube\" style={{ color: \"#ff0000\", fontSize: largerSize }}></i></a> */}\n                                {/* Hack to spread the icons evenly across the line */}\n                                <span style={{ width: \"100%\", display: \"inline-block\" }}></span>\n                            </p>\n                        </Col>\n                        <Col xs={3}></Col>\n                    </Row>\n                </Container>\n            </PageFormat>\n\n            <Footer />\n        </>\n    );\n}\n\nexport default Music;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nfunction AuthorCard(props) {\n    return (\n        <>\n            <heading>\n                <h1 className=\"pt-4 pb-3 text-center\">{props.title}</h1>\n\n                <Card style={{maxWidth: \"300px\"}}>\n                    <Row className=\"no-gutters\">\n                        <Col xs={4}>\n                            <Card.Img src={process.env.PUBLIC_URL + \"/images/headshot-march-2020.jpg\"} />\n                        </Col>\n                        <Col xs={8}>\n                            <Card.Body>\n                                <Card.Title>Robbie Gay</Card.Title>\n                                <Card.Text>{props.date}</Card.Text>\n                            </Card.Body>\n                        </Col>\n                    </Row>\n                </Card>\n                <br />\n\n            </heading>\n        </>\n    );\n}\n\nexport default AuthorCard;","import React from \"react\";\n\nfunction PWWeek1() {\n    return (\n        <>\n            <article className=\"text-justify\">\n                <h3 className=\"text-center\">Welcome!</h3>\n                <p>\n                    Welcome to my blog! Here I’ll be posting regular updates about\n                    the <a href=\"https://www.awesomeincu.com/bootcamp/\" title=\"Awesome Inc Web Dev Bootcamp\">Awesome Inc Web Dev Bootcamp</a>. This\n                    first post covers Prework Week 1, but is being written towards the end of\n                    Week 2 — as we had to learn some basic <abbr title=\"Hypertext Markup Language\">HTML</abbr>\n                    /<abbr title=\"Cascading Style Sheets\">CSS</abbr> in order to create a blog post to begin with!\n                </p>\n\n                <h3 className=\"text-center\">First Week of Prework</h3>\n                <p>\n                    Our first week started with a meet up at Awesome Inc. We got a chance to\n                    meet our fellow bootcampers (there are 11 of us!), as well as meet our 3\n                    instructors: <a href=\"https://www.justinhall.com/\" title=\"Justin Hall's Website\">Justin</a>,{\" \"}\n                    <a href=\"http://ianrios.me/\" title=\"Ian Rios' Website\">Ian</a>,\n                    and <a href=\"https://jmstewart00.github.io/\" title=\"Josh Stewart's Website\">Josh</a>.\n                    <br /><br />\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/awesome-u-bootcamp-curriculum.png\"\n                            alt=\"The Awesome Inc U Bootcamp Curriculum\" />\n                        <figcaption className=\"figure-caption text-center\">source: <a\n                            href=\"https://www.awesomeincu.com/bootcamp/\">\n                            Awesome Inc Web Dev Bootcamp</a></figcaption>\n                    </figure>\n                    <br />\n                </p>\n\n                <h3 className=\"text-center\">The Learning Curve</h3>\n                <p>\n                    My favorite takeaway from our initial meet up was this cool graphic on the stages of learning:\n                    <br /><br />\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/awesome-learning-curve.png\"\n                            alt=\"Awesome Learning Curve\" />\n                        <figcaption className=\"figure-caption text-center\">source: <a\n                            href=\"https://www.thinkful.com/blog/why-learning-to-code-is-so-damn-hard/\">\"Why\n                                Learning to Code is so Damn Hard\"</a></figcaption>\n                    </figure>\n\n                    <br />\n                    I love reading books about learning. I read (skimmed) Malcolm\n                    Gladwell’s <a href=\"https://en.wikipedia.org/wiki/Outliers_(book)\" title=\"Outliers by Malcolm Gladwell\">“Outliers”</a> a\n                    few months ago, and have been working my way through the public library’s\n                    collection of Cal\n                    Newport (<a href=\"http://www.calnewport.com/books/so-good/\" title=\"So Good They Can’t Ignore You by Cal Newport\">\n                        “So Good They Can’t Ignore You”</a> is an awesome take on learning new skills;{\" \"}\n                    <a href=\"http://www.calnewport.com/books/digital-minimalism/\"\n                        title=\"Digital Minimalism by Cal Newport\">“Digital Minimalism”</a>{\" \"}\n                    caused me to delete all social media from my phone and to disable its internet browser). I’d\n                    seen images of learning\n                    curves, and read various theories about the path someone takes when learning a new skill, but I\n                    had never stumbled\n                    across something that broke it down like this graphic did.\n                </p>\n                <p>\n                    The graphic itself has 3 sections: confidence, resource density, and scope of knowledge. As you\n                    progress\n                    left to right, you go through various stages for each, while steadily increasing your\n                    competency. What I liked\n                    most about this was the confidence meter and the resource density sections.\n                </p>\n                <p>\n                    I think that anyone who has tried to learn a new skill has likely experienced that initial boost\n                    in confidence.\n                    You start learning a new skill and (because you started at zero) you progress very quickly.\n                    You’re flying through\n                    the plethora of beginner's resources and climbing the learning curve so rapidly that you’re\n                    <em>convinced</em> that\n                    this time next week you’ll be working for Google. <br />\n                    <br />\n                    Then you crest that initial hill. <br />\n                    <br />\n                    When you started, you didn’t know enough to know what you didn’t know. As such, you felt like it\n                    would be pretty\n                    simple to acquire all of the information you would need. Now, after a few weeks of rapid\n                    learning, you finally know\n                    enough about whatever skill you are learning to realize just how much you have left to learn.\n                    Your small pond\n                    turned out to be a big ocean. And that’s where the confidence drop comes from — correspondingly,\n                    it’s also likely\n                    that this is where most newcomers flame out.<br />\n                    <br />\n                    To add to this blow, the graphic also shows a rapid increase in resource\n                    scarcity. My own thoughts on this are that there are two markets for those who create such\n                    resources:\n                </p>\n                <ol>\n                    <li>Beginners</li>\n                    <li>Experts (Paid Professionals)</li>\n                </ol>\n                <p>\n                    In most fields, there are likely way more people in the beginning market than at any other\n                    junction.\n                    So, despite the fact that beginners likely aren’t making money yet\n                    (and therefore don’t have much money to invest in learning resources), the sheer size of this\n                    market makes\n                    it appealing for resource creators to create content for. <br />\n                    <br />\n                    At the other end of the spectrum, experts likely represent a small percentage of the total\n                    audience. Since they are paid for\n                    their work, however, they can likely afford to pay a premium for advanced level knowledge\n                    resources. This leaves\n                    a small market for those skill-learners who are beyond the scope of the beginner resource but\n                    below the level\n                    of the expert resource. <br />\n                    <br />\n                    This creates a “desert of despair”, as the graphic calls it, where your confidence level is\n                    knocked down\n                    several pegs AND those learning resources that helped you advance so quickly early on are\n                    becoming more\n                    and more scarce. <br />\n                    <br />\n                    This learning curve graphic goes on to point out that:\n                </p>\n                <ol>\n                    <li>Despite this feeling of hopelessness, <strong>others before you have had the same\n                            experience</strong>.\n                        The graphic encourages us to keep pushing.</li>\n                    <li>Despite the fluctuations in confidence and resources, your competencey is steadily\n                        increasing\n                        throughout this journey.</li>\n                </ol>\n                <p>\n                    Note: I didn’t mention the 3rd category, \"scope of knowledge\" — that’s basically showing how a\n                    beginner\n                    absorbs broad fundamentals early on before specializing (and decreasing total breadth of\n                    knowledge) later on in their journey.<br />\n                    <br />\n                    ~Phew~ Sorry for the big rant on learning curves — on to the meat and potatoes of Prework Week\n                    1.\n                    <br /><br />\n\n                    <h3>DVCS: Git and GitHub</h3>\n\n                </p>\n                <p>\n                    The focus of our first week of prework was getting up to speed on Git and Github.<br />\n                    <br />\n                    What is Git?\n                </p>\n\n                <blockquote className=\"blockquote bg-light px-5 py-2 my-4 rounded-pill\">\n                    \"Git is a free and open source distributed version control system designed to handle everything\n                    from small to very large projects with speed and efficiency.” <cite className=\"blockquote-footer\"><a\n                        href=\"https://git-scm.com/\">Git</a></cite>\n                </blockquote>\n\n                <p>\n                    Great — but what is a DVCS?<br />\n                    <br />\n                    To start, VCS is a Version Control System. My one-week-of-coding-experience definition of a VCS\n                    is that it allows you to track and document changes to code (including reverting to older\n                    versions\n                    of the code). A Distributed Version Control System (DVCS) is a VCS that is mirrored on multiple\n                    devices.\n                    For example, if I have a full copy of the code on my computer and you have an identical copy on\n                    yours,\n                    then we have a <em>distributed</em> copy of the code.<br />\n                    <br />\n                    But what if I change my copy — now our copies aren't aligned, right? That’s where the “version\n                    control system”\n                    comes into play.<br />\n                    <br />\n                    A DVCS like Git tracks any changes I make, and then allows me to merge those changes into a\n                    shared code.\n                    You could then update your copy of the code to match that shared code, and then add your own\n                    changes.<br />\n                    <br />\n                    <a href=\"https://github.com\" title=\"GitHub\">GitHub</a> is a cloud based code repository. So, if\n                    we each\n                    have our copies of the code, we could place a third copy on GitHub. This saves us time, as I no\n                    longer\n                    have to drive to your house for us to compare code versions.\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/git-stages.png\" alt=\"Example of Git Workflow\" />\n                    <figcaption className=\"figure-caption text-center\">Source: <a className=\"minimalLink\"\n                        href=\"https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository\">\"Intro\n                            to Git\"</a></figcaption>\n                </figure>\n\n\n                <p>\n                    This oversimplified explanation of Git doesn’t even begin to get into some of the more complex\n                    (or, to me, confusing) functions of Git.\n                </p>\n\n                <h3 className=\"text-center\">Challenges</h3>\n\n                <p>\n                    I found Git pretty hard to understand. For one, working in Command Line meant that there wasn’t\n                    much\n                    of a user interface. It sometimes felt like you were flying in the dark — entering commands and\n                    receiving\n                    little to no visual or textual confirmation of what you are doing.\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/why-git-is-confusing.png\"\n                        alt=\"Why Git is so confusing\" />\n                    <figcaption className=\"figure-caption text-center\">Source: <a\n                        href=\"https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows\">\"Intro to\n                            Git\"</a> (added text mine)</figcaption>\n                </figure>\n\n\n                <p>\n                    One thing that helped me was reaching out to my brother, William.{\" \"}\n                    <a href=\"https://github.com/1GWilly8\" title=\"William's GitHub\">William</a>{\" \"}\n                    graduated with a <a href=\"https://www.hanover.edu/academics/programs/cs\"\n                        title=\"Hanover College Computer Science\"><abbr title=\"Computer Science\">CS</abbr> degree</a>{\" \"}\n                    in 2018 and has been working for an <a href=\"https://glowlabs.co\" title=\"Glow Labs\">\n                        <abbr title=\"Internet of Things\">IoT</abbr> company</a> in Denver. I told him that I was\n            struggling with Git and\n            Command Line and that I was afraid of messing things up if I typed in the wrong\n                    command. He told me to make mistakes and practice using Git/<abbr title=\"Command Line\">CL</abbr>\n                    — I wasn’t likely to break\n                    anything (too badly) and I would learn more by doing.\n                </p>\n\n                <h3 className=\"text-center\">Reflection: Prework Week 1 (and 2)</h3>\n\n                <p>\n                    Since I’m writing this near the end of Week 2, I am going to reflect\n                    on both weeks, despite the rest of this post being about Week 1 topics.<br />\n                    <br />\n                    I really enjoyed the first week of the developer bootcamp. We are working\n                    remotely and I wasn’t really sure what the workload would be like. I found it\n                    to be challenging but manageable, although (perhaps more importantly) I also found it to be\n                    really\n                    fun! I really enjoyed that there is so much to learn at this phase. I also really\n                    liked that so much of the work involves getting hands-on and creating web pages.\n                    Even though the websites we are building are very basic, it felt very satisfying\n                    to be able to apply what we had just learned and see the changes come to life!<br />\n                    <br />\n                    I am really excited to continue working through these prework topics. I’ve enjoyed\n                    some of the design aspects of CSS, and am really looking forward to working with\n                    JavaScript to build more responsive websites!<br />\n                    <br />\n                    I found Git and CSS relatively harder than HTML. The application process for the bootcamp\n                    involved an HTML assignment, and I worked through a Coding Academy course on HTML to help me\n                    with that. I found Git challenging due to the lack of a\n                    <abbr title=\"User Interface\">UI</abbr> as well as some confusion about the various intricacies\n                    of branching, merging, rebasing, etc. I found CSS challenging mostly in the amount of\n                    information to absorb. I think that with both Git and CSS, more time spent working with\n                    them will help me to better digest the information.<br />\n                    <br />\n                    A final reflection is that I really love working in an academic setting that doesn’t\n                    involve quizzes or grades! I think that this is really refreshing — instead of making\n                    flashcards and doing rote memorization, you can approach the subject\n                    matter in whichever way helps you to best absorb and apply the material!\n                </p>\n\n                <h3 className=\"text-center\">A Bonus Resource</h3>\n\n                <p>\n                    The prompt for our first blog post asked us for a resource that would help others in the\n                    program.\n                    I’m sure that most bootcampers know of or use something similar to this, but I found an\n                    online coding platform like <a href=\"https://codepen.io\" title=\"CodePen\">CodePen</a>{\" \"}\n                    really helpful. I didn’t use it for major projects, but when I learned something new\n                    and wanted to try applying it quickly, I could hop over to CodePen and draft something\n                    up in a matter of minutes.\n                </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default PWWeek1;","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction PWWeek2() {\n    return (\n        <>\n                <article className=\"text-justify\">\n\n                    <p>\n                        I’m writing this late on a Labor Day Monday night. My\n                        girlfriend is currently in flight back from NYC where\n                        she saw a Jonas Brother Concert (not super jealous),\n                        and ate at a Michelin Starred Chinese restaurant\n                        (<strong>super</strong> jealous). My Labor Day Weekend\n                        was <em>pretty</em> good (thanks for asking) — I spent\n                        a decent amount of time reading and reviewing HTML and\n                        CSS but did manage to stop by my neighbor’s new pool\n                        each of the 3 holiday weekend days!\n                    </p>\n\n                    {/* Carousel Images  */}\n                    <Carousel>\n                        <Carousel.Item>\n                            <img \n                                className=\"d-block w-100\" \n                                src=\"/blogAssets/img/cafe-china-nyc.JPG\"\n                                alt=\"An image of Chinese food. Photo Credit: Anna B.\" \n                            />\n                            <Carousel.Caption>\n                                <p>Food from Cafe China, NYC</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img \n                                className=\"d-block w-100\" \n                                src=\"/blogAssets/img/labor-day-pool.JPG\"\n                                alt=\"A nice picture of my legs and water bottle at my neighbor's pool\" \n                            />\n                            <Carousel.Caption>\n                                <p>Relaxing by the pool</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n\n                    <p>\n                        This weekend wraps up the second week of Coding Bootcamp\n                        Prework. The focus of this week was an introduction to HTML\n                        and CSS. HTML stands for hypertext markup language. HTML is\n                        not a coding language (it’s a markup language), although if\n                        you looked at a page of HTML, you might be fooled.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-looks-like-code.png\"\n                            alt=\"HTML looks like code. It's actually a markup language\" />\n                        <figcaption className=\"figure-caption text-center\">Not code, don't get fooled.</figcaption>\n                    </figure>\n\n                    <p>\n                        CSS stands for cascading style sheets. HTML provides the\n                        structure of your webpage and CSS gives it its style. If HTML\n                        is like the frame of your house, CSS is the doors, windows,\n                        paint, etc:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css.png\" alt=\"Visual analogy of HTML vs CSS\" />\n                        <figcaption className=\"figure-caption text-center\">HTML is like the frame of a house; CSS adds\n                            style.</figcaption>\n                    </figure>\n\n                    <p>\n                        We covered a range of basic HTML and CSS topics, and although\n                        I would love to write a post covering <em>everything</em> we\n                        learned, I would also love to go to sleep at some point tonight.\n                        Instead, here is a very basic introduction to HTML/CSS!\n                    </p>\n\n                    {/* <!--|| HTML Intro --> */}\n\n                    <h3 className=\"text-center\">HTML: A very basic introduction</h3>\n\n                    <p>\n                        The basic building block of HTML is the element. An element\n                        is declared using opening (&lt;element&gt;) and closing (&lt;/element&gt;)\n                        tags. Between said tags, lies the content of the element.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-tags.png\" alt=\"An image of HTML tags\" />\n                        <figcaption className=\"figure-caption text-center\">An example of HTML tags</figcaption>\n                    </figure>\n\n                    <p>\n                        The above example uses the <code>&lt;p&gt;</code> tag. “p”\n                        stands for paragraph. A paragraph is the basic holding element\n                        for the body of your text. The text you are reading now is\n                        contained within a <code>&lt;p&gt;</code> tag. You can find\n                        a whole list of other tags on the{\" \"}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\"\n                            title=\"MDN HTML Reference\">documentation\n                            site</a>.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/current-text.png\" alt=\"An image of some HTML\" />\n                        <figcaption className=\"figure-caption text-center\">The HTML of the above paragraph</figcaption>\n                    </figure>\n\n                    <p>\n                        Elements are nested within a hierarchy in HTML. Below is a\n                        very basic layout for a HTML webpage:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-example.png\" alt=\"An image of some basic HTML\" />\n                        <figcaption className=\"figure-caption text-center\">Here is an example of basic HTML</figcaption>\n                    </figure>\n\n                    <p>\n                        A rundown of what is going on here:\n                        <ul>\n                            <li>\n                                <code>&lt;!DOCTYPE html&gt;</code> this declares to\n                                the muses of the internet that the below information\n                                is a HTML document, and to process that information\n                                accordingly.\n                            </li>\n                            <li>\n                                <code>&lt;html&gt;</code> This is the opening tag that\n                                begins the actual HTML document. Notice at the bottom\n                                of our markup is <code>&lt;/html&gt;</code> this\n                                closes the markup. This level is sometimes called the\n                                root.\n                            </li>\n                            <ul>\n                                <li>\n                                    Although not required, I have also declared\n                                    the language (“lang”) of our webpage: it is\n                                    written in English (“en”), the US dialect.\n                                </li>\n                            </ul>\n                            <li>\n                                <code>&lt;head&gt;</code> The head contains the\n                                elements that the end user does not need to see,\n                                but that the machines find useful.\n                            </li>\n                            <ul>\n                                <li>\n                                    Here we have a metadata tag “meta” that\n                                    declares the charset (set of characters\n                                    that the browser can interpret). Here we\n                                    have defined it as utf-8, which allows us\n                                    to use virtually all 1.1 million characters\n                                    and symbols in any world language. You can{\" \"}\n                                    <a href=\"https://en.wikipedia.org/wiki/UTF-8\" title=\"utf-8 Wikipedia Page\">\n                                        read more about utf-8 here</a>.\n                                </li>\n                                <li>\n                                    <code>&lt;title&gt;</code> This is the title\n                                    of the webpage. It is useful for search\n                                    engines (it is the name that appears in big\n                                    title letters in search results). It also\n                                    appears as the title of the window or tab\n                                    when on the site. Additionally, it is the\n                                    default name when you try to bookmark the\n                                    page (for example, bookmarking this\n                                    <em>awesome</em> blog would give you\n                                    the default title \"Prework Week 2\")\n                                </li>\n                                <li>\n                                    <code>&lt;/head&gt;</code> notice that we\n                                    then close the head with a closing tag.\n                                </li>\n                            </ul>\n                            <li>\n                                &lt;body&gt; The body is where the main content of our\n                                webpage lives. The only content that we have here is\n                                “hello world” (<a href='https://en.wikipedia.org/wiki/\"Hello,_World!\"_program'\n                                    title=\"'Hello, world!' Wikipedia Page\">\n                                    click for context about the hello world convention</a>).\n                            </li>\n                            <li>\n                                We then close out our <code>&lt;body&gt;</code> and\n                                close out our <code>&lt;html&gt;</code>\n                            </li>\n                        </ul>\n                        Notice how the <code>&lt;p&gt;</code> opening and closing tags\n                        are on the same line, but the <code>&lt;html&gt;</code> tags\n                        are on different lines (and indentations)? Whitespace, or the\n                        spacing of the HTML document, doesn’t matter to the web\n                        browser. We could put everything on one line! Rather, it\n                        matters to us. Laying things out in a human-readable manner\n                        is handy for anyone working with computers.\n                        <br /><br />\n                        Here is the end result of our sample HTML. Things will look a little sparse,\n                        but we did a good job setting up a basic layout:\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/html-result.png\"\n                            alt=\"An image of our test website\" />\n                        <figcaption className=\"figure-caption text-center\">This is what our test website looks like!\n                        </figcaption>\n                    </figure>\n\n                    {/* <!--|| CSS Intro --> */}\n\n                    <h3 className=\"text-center\">CSS: Another brief introduction</h3>\n\n                    <p>\n                        We can add CSS to our example HTML to give it some style!\n                        <br /><br />\n                        First, we need to link our CSS file in the HTML markup, that\n                        way the web browser knows where to find it. If we don’t tell\n                        the computer where to look, it would be like telling a human,\n                        “fetch me a glass of water”. Your friend might not know where\n                        you keep your cups. Linking to the stylesheet is like saying\n                        “fetch me a glass of water, the glasses are in the cabinet\n                        next to the fridge.”\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/html-add-stylesheet.png\"\n                            alt=\"An image showing how to link to a CSS Stylesheet\" />\n                        <figcaption className=\"figure-caption text-center\">Linking to a CSS Stylesheet</figcaption>\n                    </figure>\n\n                    <p>\n                        CSS is formatted a little different than HTML. A CSS rule or\n                        ruleset tells the browser how to style various HTML elements.\n                        On the left are the selectors, these tell HTML which part of\n                        the page to apply the style rule to.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/css-dec.png\" alt=\"An example of a CSS declaration\" />\n                        <figcaption className=\"figure-caption text-center\">An example of a CSS declaration</figcaption>\n                    </figure>\n\n                    <p>\n                        A CSS example might look like:\n                        <br /><br />\n                        <code>.robbie &#123;color: purple&#125;</code>\n                        <br /><br />\n                        In computer speak, this takes the class “<code>robbie</code>”\n                        (an endstop “<code>.</code>” before a word makes it apply to a\n                        whole class of elements), and turns it/him purple. In human\n                        speak the selector <code>.robbie</code> would sound like “make\n                        robbie…” and the declaration <code>&#123;color: purple&#125;</code>\n                        would sound like “…become purple colored”.\n                        <br /><br />\n                        A final example of CSS will be to apply it to the example HTML we used before.\n                        <br /><br />\n                        <div className=\"bg-light rounded-pill py-2\">\n                            <code className=\"ml-5\">\n                            p &#123;<br />\n                            <span className=\"ml-5\">color: lightsalmon;</span><br />\n                            <span className=\"ml-5\">border: 1px dotted green</span><br />\n                            <span className=\"ml-5\">&#125;</span>\n                        </code>\n                        </div>\n                        <br /><br />\n                        We have told the web browser to make all &lt;p&gt; elements\n                        the color “<code>lightsalmon</code>” and to add a\n                        \"<code>1px</code>\" (pixel) wide, dotted, green-colored border\n                        around them.\n                    </p>\n\n                    <figure className=\"figure\">\n                        <img className=\"img-fluid border\" src=\"/blogAssets/img/example-css-applied.png\"\n                            alt=\"An image of CSS being applied\" />\n                        <figcaption className=\"figure-caption text-center\">What our example site looks like with CSS applied\n                        </figcaption>\n                    </figure>\n\n                    <p>\n                        Thanks for sitting through my brief HTML and CSS tutorial! If\n                        this were the year 1990, you might be able to get a job\n                        working with <a href=\"https://en.wikipedia.org/wiki/HTML#Development\"\n                            title=\"The history of HTML, Wikipedia\">Tim Berners-Lee</a>,\n                        otherwise you’ll likely need to read through more of the{\" \"}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn\" title=\"MDN Learn Web Dev Guide\">MDN\n                            tutorials</a>{\" \"}\n                        before this\n                        becomes remotely practical.\n                    </p>\n\n                    {/* <!--|| Pseudo Code --> */}\n\n                    <h3 className=\"text-center\">Pseudo Code: not code, but not <em>not</em> code</h3>\n\n                    <p>\n                        This week we also learned about Pseudo Code. Pseudo Code is\n                        really useful in the brainstorming phase of your code writing\n                        process, as it allows you to find a happy medium between\n                        super technical real code, and regular, everyday English.\n                        <br /><br />\n                        Why find this middle ground? Jumping right into code can be\n                        like starting a journey without any sort of road map. Pseudo code gives\n                        you a chance to outline your work, and maybe see what problems\n                        and challenges you are likely to face. You may be able to\n                        solve some of those problems in this outline, perhaps saving\n                        you the time of starting in the wrong direction!\n                        <br /><br />\n                        Pseudo Code is not full code. The meaning of this is that you\n                        don’t have to worry about the code being technically correct —\n                        there’s no getting bogged down in the complexities of figuring\n                        out how to solve certain problems. For example, in your Pseudo\n                        Code, you might realize that you need to invent a new\n                        algorithm for streaming video. Instead of putting down the pen\n                        and spending hours/days/years (I have no idea how long it take\n                        to write an algorithm) writing your new algorithm, it is enough\n                        to simply know that it is needed — plot it on your roadmap and\n                        move on.\n                        <br /><br />\n                        At the same time, you would want to avoid full on English.\n                        Saying “go find the peanut butter” might not mean much to a\n                        computer. Humans are great at making inferences and thinking\n                        creatively, computers are very literal. While you don’t need\n                        to actually map out, via full-blown code, how to get your\n                        robot/computer to find the peanut better, you should at least\n                        acknowledge the basic steps: locate kitchen, locate pantry,\n                        find peanut butter.\n                    </p>\n\n                    {/* <!--|| Prework Week 3 Reflection --> */}\n\n                    <h3 className=\"text-center\">Reflection</h3>\n\n                    <p>\n                        I really enjoyed Prework Week Two of the Awesome Inc. Bootcamp. There\n                        is a lot to learn and I have really enjoyed getting to build\n                        some test websites!\n                        <br /><br />\n                        I struggled a bit this week with CSS. We worked through the\n                        MDN Intro readings on the topic, and I found myself rereading\n                        them today for the 3rd time, taking notes, and only now\n                        starting to feel more comfortable understanding topics such as{\" \"}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Inheritance\"\n                            title=\"MDN Guide to Inheritance\">inheritance</a>,{\" \"}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#Conflicting_rules\"\n                            title=\"MDN Guide to Cascade\">cascade</a>, and{\" \"}\n                        <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model\"\n                            title=\"MDN Guide to Box Model\">box model</a>.\n                        <br /><br />\n                        HTML came a bit more easily. An assignment for acceptance into the Bootcamp\n                        involved building a basic HTML site. To help me\n                        build that, I signed up for a free trial of Code Academy Pro\n                        and worked through an Introduction to HTML course. Having even\n                        a brief sampler of HTML helped me get through the HTML\n                        fundaments more easily.\n                        <br /><br />\n                        I found Pseudo Code really interesting to work with. It’s\n                        really helpful to create an outline and to be able to\n                        (mentally) run through your program and know that it might\n                        (<em>hopefully</em>) work. This is nice because you can build a roadmap\n                        without becoming caught up with the various typos and small\n                        errors that your code might have initially. With Pseudo Code,\n                        you are making a good faith effort to ensure that your\n                        top-level logic is sound!\n                    </p>\n\n                    {/* <!--|| Resources --> */}\n\n                    <h3 className=\"text-center\">Resources</h3>\n\n                    <p>\n                        Two resources that I found helpful were{\" \"}\n                        <a href=\"https://fonts.google.com\" title=\"Google Fonts\">Google Fonts</a>{\" \"}\n                        and Google's <a href=\"https://www.google.com/search?q=color+picker\" title=\"Online Color Picker\">\n                            online color selector</a>. Google Fonts gives you a large\n                        selection of fonts to chose from (I’m currently using\n                        \"Roboto\"), as well as a great interface for selecting fonts\n                        and easy to understand instructions on how to implement them.\n                        <br /><br />\n                        A color selector was helpful for picking aesthetically\n                        pleasing colors for a website, as it allowed you to turn\n                        any color you wanted into hex or rgb notation.\n                        <br /><br />\n                        A closing note, if you’re interested in HTML and CSS and want\n                        to see (aka judge) my use of them, you can likely access\n                        developer tools on your web browser. Here are some links\n                        that would allow you to turn those on in a variety of popular\n                        browsers.\n                        <ul className=\"text-left\">\n                            <li>\n                                Chrome: <a href=\"https://developers.google.com/web/tools/chrome-devtools/\"\n                                    title=\"Chrome Web Dev Tools\">\n                                    Accessing Developer Tools</a>\n                            </li>\n                            <li>\n                                Safari: <a href=\"https://developer.apple.com/safari/tools/\"\n                                    title=\"Safari Web Dev Tools\">Accessing\n                                    Developer Tools</a>\n                            </li>\n                            <li>\n                                Internet Explorer:{\" \"}\n                                <a href=\"https://technet.microsoft.com/en-us/gg589513(v=vs.71)\"\n                                    title=\"IE Web Dev Tools\">Accessing\n                                    Developer Tools</a>\n                            </li>\n                            <li>\n                                Firefox: <a href=\"https://developer.mozilla.org/en-US/docs/Tools/Tools_Toolbox\" title=\"Firefox Web \n                            Dev Tools\">Accessing Developer Tools</a>\n                            </li>\n                        </ul>\n                    </p>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n                    \n                </article>\n        </>\n    );\n}\n\nexport default PWWeek2;\n","import React from \"react\";\n\nfunction PWWeek3() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n                <p>\n                    I’m writing this on a Saturday — we’ve just wrapped up our third\n                    week of Bootcamp Prework, and are barreling full steam ahead\n                    towards the final work of remote learning. Starting on Sept.\n                        16<sup>th</sup>, we will be reporting in to Awesome Inc., meeting\n            Monday-Friday, 8am-5pm for 12 weeks. I’m very excited, but maybe\n            also a little nervous.\n                    </p>\n                <p>\n                    This week involved diving a little deeper into HTML and CSS, while\n                    also serving as an introduction to JavaScript. Additionally, we\n                    did our first Demo Day on Friday! As we are working remotely, this\n                    was done via group video chat. We all took turns demonstrating the\n                    functionality of our Silly Story Generators, as well as looking\n                    under the hood and showcasing/explaining the source code behind\n                    our projects.\n                    </p>\n                <h3 className=\"text-center\">JavaScript</h3>\n                <p>\n                    JavaScript is a coding language that is used on both the client\n                    and server sides. On the client side, it is used to add reactive\n                        elements to a website. JavaScript <strong>IS NOT</strong> the same\n            as the similarly popular programing language, Java. In fact, the\n            only reason that they are named in a similar fashion is because\n            Java was becoming very popular at the time, and the creators of\n            JavaScript thought that they could benefit from Java’s popularity\n            by adopting a similar name. This seems a little like the current\n            naming convention involving adding Blockchain or Cryptocurrency to\n            various new products.\n                    </p>\n                <p>\n                    A final interesting fact about JavaScript — its creator,{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Brendan_Eich\">Brendan Eich</a>,\n                wrote the prototype of the language{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/JavaScript#Beginnings_at_Netscape\"\n                        title=\"History of JavaScript (Wikipedia)\">in just 10 days</a>. A pretty\n        fast start for a programming language that has been going strong\n        for 23 years!\n                    </p>\n                <h3 className=\"text-center\">HTML, CSS, and JS</h3>\n                <p>\n                    How do the three languages we’ve talked about so far relate?\n                    </p>\n                <p>\n                    As I’ve mentioned in previous posts, HTML creates the framework, and CSS adds the style.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css.png\"\n                        alt=\"An image comparing HTML and CSS\" />\n                    <figcaption className=\"figure-caption text-center\">HTML creates the framework; CSS adds the style\n                        </figcaption>\n                </figure>\n                <p>\n                    If you leave it at the, you can still have a beautiful, fully\n                    functional website only using HTML and CSS. A website like this,\n                    however, is considered static — you can’t change elements without\n                    reloading the page. JavaScript allows you to create dynamic websites.\n                    </p>\n                <p>\n                    In the above example of a house, JavaScript would allow you to\n                    click on the front door and see the door open, and your neighbors\n                    walk out!\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/html-vs-css-vs-js-house.png\"\n                        alt=\"An image comparing JS to a House\" />\n                    <figcaption className=\"figure-caption text-center\">JavaScript creates reactive websites — Similar to\n                        being able to click on a house and\n                        open the\n                            door</figcaption>\n                </figure>\n                <p>\n                    You’ve likely seen examples of JavaScript all over the web.\n                    Examples might include: pressing the “like” button on Facebook and\n                    seeing the total number of “likes” instantly increase. Or, as you\n                    scroll through Instagram, a post changes from “posted 3 minutes\n                    ago” to “posted 4 minutes ago” in real time. JavaScript allows you\n                    to create dynamic, reactive websites, the type of website\n                    functionality that users have come to expect across the web.\n                    </p>\n                <h3 className=\"text-center\">Challenges: Resizing Websites (CSS) and Logic Errors (JavaScript)</h3>\n                <p>\n                    Two challenges that I faced this week involved attempting to make\n                    this blog viewable on mobile devices, and trying to get my Silly\n                    Story Generator program to work using JavaScript.\n                    </p>\n                <p>\n                    After initializing the blog last week, I managed to get it so that\n                    it looked pretty good on a desktop browser.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/css-looks-good-on-desktop.png\"\n                        alt=\"CSS looking good on Desktop\" />\n                    <figcaption className=\"figure-caption text-center\">A blog post viewed from a computer</figcaption>\n                </figure>\n                <p>\n                    I realized, however, that there was a problem with how this\n                    arrangement scaled down to mobile. What looks nice and spacious on\n                    a widescreen, became very compressed on a mobile device.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/css-not-scaling-well-to-mobile.png\"\n                        alt=\"CSS not scaling well to mobile view\" />\n                    <figcaption className=\"figure-caption text-center\">The same blog post viewed on a mobile device\n                        </figcaption>\n                </figure>\n                <p>\n                    Unfortunately, attempting to remedy this made things much worse\n                    before they got any better. For a while, not only did the site not\n                    look good on mobile, but elements started to appear in strange\n                    places on desktop as well.\n                    </p>\n                <p>\n                    Although we learned about Git in our first week of Prework, it\n                    wasn’t until I attempted to resize my blog that I became a real\n                        believer. I should first say that this came about <em>not</em>\n                    because I used Git properly and that it helped me to fix my\n                    website, but rather, that I didn’t use a good Gitflow Strategy,\n                    and that I ended up wishing fervently that I had!\n                    </p>\n                <p>\n                    I was using a “dev” (development) branch to write my code, but\n                    only doing so so that I could get into the habit. Once I had an\n                    update, I would immediately merge with the local master branch and\n                    then push to GitHub. This was unfortunate, because even though my code\n                    was moving in the right direction, things, at least temporarily,\n                    looked worse than before. If I had been using Git properly, I\n                    could have left my master branch as a functioning version of the\n                    site, while working on my dev branch until things were up to\n                    publication quality. This process definitely made be a believer in\n                    the usefulness of using a Version Control System like Git!\n                    </p>\n                <br />\n                <p>\n                    A second thing that I struggled with this week was encountering\n                        logic errors in my <a href=\"https://robbiegay.github.io/silly-story/\"\n                        title=\"Robbie's Silly Story Generator\">Silly Story Generator</a>.\n            The SSG is supposed to take a string of text and, somewhat{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Mad_Libs\" title=\"Mad Libs Wikipedia\">Mad Libs</a> style,\n                                insert funny\n                                characters and locations to generate a new “silly story” each time\n                                the “generate” button is pressed.\n                    </p>\n                <p>\n                    A piece of additional functionality that I wanted to add involved\n                    creating a Typewriter Effect, where each letter would appear one\n                    at a time, as if being typed. Needless to say, this did not work\n                    as planned either the first (or twenty-first) time that I tried to\n                    run the program. The first thing that I looked for were syntax\n                    errors. You can think of these as grammar or spelling mistakes.\n                    This is like when you text someone: “on my way, soon” when you\n                    really meant to say “one my way, noon” — A simple error that might\n                    have someone waiting around for several hours. Computers being\n                    very literal machines, these simple grammar and spelling errors\n                    can cause a program to cease functioning entirely.\n                    </p>\n                <p>\n                    After first addressing any syntactical errors that I could find in\n                    my Silly Story Generator, I then had to deal with any logic\n                    errors. A logic error is when you tell a program how to perform a\n                    task, they are able to complete said task, but then, because of an\n                    error in the logic of your instructions, the task completed does\n                    not produce the desired results.\n                    </p>\n                <p>\n                    A real-world example of a logic error could be to give someone\n                    directions to your house. Perhaps you managed to spell everything\n                    correctly and produce easy to follow directions (no syntax\n                    errors), but you then told them to turn left on Main St. instead\n                    of right! The instructions worked well, they just sent your friend\n                    in the wrong direction.\n                    </p>\n                <p>\n                    I found dealing with logic errors really frustrating. I would find\n                    myself reading and rereading my code, and eventually coming to the\n                        conclusion that my code definitely <em>should</em> work; It\n                        <em>seemed</em> like everything made sense. There were even\n                                moments when I would just stare at the screen, unable to find\n                                anything to tweak or try.\n                    </p>\n                <p>\n                    It seemed like there were no real “ah-ha” moments of getting this\n                    week's code to work — rather than a large change that fixed the\n                    program, it was several small implementations that eventually\n                    built some functioning code.{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/The_Pragmatic_Programmer\"\n                        title=\"Pragmatic Programmer Wikipedia\">The\n                            Pragmatic Programmer</a>{\" \"}\n                    mentions a Japanese phrase, “kaizen”. This is the process of\n                    making small, incremental improvements that over time produce high\n                    quality results. This is what the process of debugging both this\n                    blog and my Silly Story Generator felt like — the more time I\n                    spent working on the problem, and the more I slowly pieced\n                    together bits of functionality, the closer I got to a program that\n                    ran as I intended!\n                    </p>\n                <h3 className=\"text-center\">Two Cool Things</h3>\n                <p>\n                    I wanted to mention two things that I learned this week that I\n                    found really interesting. When working in HTML, there is a lot of\n                    framework that gets recycled on every page. After my first couple\n                    of webpages, I got tired of repeatedly building the same\n                    structure. I had decided that it would be really useful to build a\n                    template to start with. It was then that fellow Bootcamper{\" \"}\n                    <a href=\"https://anchormansam.github.io/my-blog/blog.html\" title=\"A link to Sam's Blog\">Sam</a>\n                    mentioned a\n                    useful shortcut\n                    in the class Slack (groupchat). He mentioned a shortcut in VS\n                    Code Studio (software that you can use to write code in), where,\n                        if you enter <code>!</code> and press return, then a great HTML\n                                template will appear. This was a significantly quicker and more\n                                convenient way to build a starting framework — thanks Sam!\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/vs-code-!-template.png\" alt=\"VS Code '!' Shortcut\" />\n                    <figcaption className=\"figure-caption text-center\">Using the \"!\" Shortcut in VS Code</figcaption>\n                </figure>\n                <p>\n                    A second really useful thing that we learned this week came from\n                        our instructor, <a href=\"https://www.justinhall.com\" title=\"Justin's Website\">Justin</a>. Justin\n                                    walked us\n                                    through the\n                                    process of using the Chrome Dev Tools to debug a program. When I\n                                    was attempting to fix my logic errors in the Silly Story\n                                    Generator, it would have been really helpful to see how the\n                                    computer was interpreting my code. For example, if my code wasn’t\n                                    displaying a string pulled from an array, is that because it isn’t\n                                    pulling the string from the array at all, or is the computer\n                                    having trouble inputting said string back into our story? With\n                                    Chrome Dev Tools, you are able to insert a breakpoint, and to then\n                        <em>see</em> how the computer is thinking. In the example photo\n                                    below, my code is shown on the left, and what values the computer\n                                    is using is shown on the rights.\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/using-chrome-breakpoints.png\"\n                        alt=\"Chrome Dev Tools: Breakpoint Function\" />\n                    <figcaption className=\"figure-caption text-center\">An example of the Chrome Dev Tools</figcaption>\n                </figure>\n                <h3 className=\"text-center\">Resources</h3>\n                <p>\n                    The resource that I wanted to share this week is less of a useful\n                    tool and more of a really cool inspiration! While working through\n                    this week’s{\" \"}\n                    <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript#So_what_can_it_really_do\"\n                        title=\"MDN: 'What is JavaScript?'\">\n                        MDN reading on JavaScript</a>, they mentioned that some\n        programmers are doing some really cool things with audio and video\n                        <abbr title=\"Application Programming Interfaces\">API’s</abbr>. As\n                                            an example, they gave use a link to the{\" \"}\n                    <a href=\"https://experiments.withgoogle.com/collection/chrome\" title=\"Chrome Experiments\">Chrome\n                                            Experiments\n                            webpage</a>. This\n        site showcased a lot of really fun and interesting webpages built\n        using the JavaScript framework. As cool and inspirational as these\n        projects were, they also left me with a sense of just how vast of a\n        field of knowledge web development really is. It feels as though we\n        are years (more likely even, decades) away from doing anything as\n        remotely cool and complex as this. That said, I do really\n        recommend that you check out a few of these projects — I thought\n        that they really pushed the boundaries of what a reactive and\n        responsive website can do!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default PWWeek3;\n","import React from \"react\";\n\nfunction PWWeek4() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n                <p>\n                    Happy super ~spooky~ Friday the 13th!! This week was our final\n                    week of Bootcamp Prework and it really seemed like these last four\n                    weeks just flew by!\n                    </p>\n                <p>\n                    I was a little nervous going into the Prework phase. I wasn’t\n                    really sure what to expect: Would the workload or complexity of\n                    the material be too much to handle? Would I realize, once I had\n                    become more immersed in coding, that it wasn’t really for me?\n                    Thankfully I found neither of these to be the case — The course\n                    material during Prework was challenging but exciting, and I’ve had a\n                    lot more fun than I excepted to writing code!\n                    </p>\n                <h3 className=\"text-center\">Prework Week 4</h3>\n                <p>\n                    This week was lighter on the readings, and started to skew more\n                        towards project-based work. We started with another{\" \"}\n                    <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks\"\n                        title=\"JavaScript Building Blocks\">MDN module</a>, this one\n                introducing us to some more JavaScript building blocks — things\n                like loops, functions, return values, and events.\n                    </p>\n                <p>\n                    Next, we moved on to four coding projects. Our first project still\n                        involved a little bit of handholding. For the{\" \"}\n                    <a href=\"https://robbiegay.github.io/image-gallery/\" title=\"Image Gallery\">Image Gallery</a>,\n                    we were given some starter code, as well as instructions on what\n                    parts of the code we still needed to fill in. After the Image\n                    Gallery project, however, we were on our own.\n                    </p>\n                <p>\n                    My biggest takeaway from this week's assignments has been that I\n                        have become a pretty big Pseudo Code enthusiast! For the{\" \"}\n                    <a href=\"https://robbiegay.github.io/countdown-timer/\" title=\"Countdown Timer\">Countdown\n                            Timer</a>{\" \"}\n                    assignment, I felt\n                    like I had an idea of how the code could work pretty early on. I\n                        <em>did</em> jot down a rough outline of the code, but didn’t\n                    bother to mentally run through the various steps of my proposed\n                    coding plan.\n                    </p>\n                <p>\n                    I then jumped right into writing the code, and several hours later, I\n                    was approaching something that resembled a Countdown Timer.\n                    It was only when I was trying to work in some final bits of\n                    functionality, that I realized that my initial approach was\n                    fatally flawed. Had I used Pseudo Code to work through the logical\n                        flow of my program <strong>before</strong> I started writing\n                    code, then I likely would have realized some of these late-stage\n                    mistakes early on. Instead, I ended up having to rewrite a lot of\n                    my code, costing me several additional hours. Starting with Pseudo\n                    Code would likely have saved me both time and headaches\n                    </p>\n                <blockquote className=\"blockquote bg-light px-5 py-2 my-4 rounded-pill\">\n                    \"Measure twice, cut once\"\n                        <cite className=\"blockquote-footer\">Justin (and just about anyone else who has ever built\n                            anything)</cite>\n                </blockquote>\n                <h3 className=\"text-center\">Reflection: The Prework Period</h3>\n                <p>\n                    Each week of Prework presented different challenges and opportunities.{\" \"}\n                    <a href=\"https://robbiegay.github.io/posts/pw-week-1.html\" title=\"PW Week 1 Blog Post\">Week\n                            1</a>{\" \"}\n                    introduced\n                    us to Git, Github,\n                    and Command Line. A lot of these new technologies felt very\n                    confusing at first. After 4 weeks of (nearly) daily practice, I\n                    think I am starting to feel more comfortable... at least with the\n                    basics.\n                    </p>\n                <p>\n                    <a href=\"https://robbiegay.github.io/posts/pw-week-2.html\" title=\"PW Week 2 Blog Post\">Week\n                            2</a>{\" \"}\n                    introduced\n                    us to HTML and\n                    CSS, and saw us creating our first blog posts! I found the\n                    structuring of HTML to be fairly straightforward. Conversely, I\n                    really struggled with getting CSS to work. It was challenging to\n                    try to understand the various parent/child relationships between\n                    the different elements, or to figure out how different properties got\n                    inherited or overwritten. Perhaps the most frustrating aspect\n                    though, was finally getting your webpage looking how you want\n                    it to, only to realize that, if viewed on anything other than\n                        a browser window of <strong>exactly the same size</strong>,\n                    that things weren't going to look anything close to how you\n                    laid them out.\n                    </p>\n                <p>\n                    <a href=\"https://robbiegay.github.io/posts/pw-week-3.html\" title=\"PW Week 3 Blog Post\">Week\n                            3</a>{\" \"}\n                    introduced\n                    us to\n                    JavaScript, while Week 4 added some more fundamentals\n                    to our knowledge portfolio. Most of the challenges of working with\n                    JavaScript involved coping with the various highs and lows of\n                    creative problem solving. First came the high of the eureka moment when you\n                        became <strong>convinced</strong> of a solution to your current\n                    problem. Then, the low of this solution only managing to break\n                    what you had working before. One thing that helped was to not\n                    immediately wad your new idea up and throw it in the trash.\n                    I found that many times, pausing to comb through your code for\n                    syntax errors could be really helpful — as maybe your new solution\n                        <em>might</em> actually work if you hadn’t misspelled a variable\n                    or left out a bracket.\n                    </p>\n                <p>\n                    Another thing that I found really helpful was occasionally closing\n                    my computer. For one, just taking breaks and maybe mulling over a\n                    problem while you took a walk could often leave to breakthroughs,\n                    to thinking, \"why hadn't I thought of that yet\". And second, I\n                    found that beginning your code with just pen and paper was a really helpful\n                    way to start. By forcing myself to slow down, to work through ALL\n                    the steps of the problem, and to chart out ALL the functionalities\n                    I would need, would often lead to developing a better roadmap and\n                    better code. I was then able, still with\n                    pen and paper, to start solving these problems and adding\n                    various functionalities. This made the act of writing the code\n                    a little bit like filling in the blanks.\n                    </p>\n                <h3 className=\"text-center\">Bootcamp</h3>\n                <p>\n                    I am <strong>super</strong> excited to start Bootcamp Week 1 on Monday!\n                    </p>\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/time-till-bootcamp-starts.png\"\n                        alt=\"Countdown till Sept. 16th, 2019\" />\n                    <figcaption className=\"figure-caption text-center\">Counting down to Day 1!</figcaption>\n                </figure>\n                <p>\n                    I felt like we learned a lot more than I expected to in this\n                    introductory period, and I am really stoked to see what we\n                    will be learning in our first few weeks of Bootcamp!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default PWWeek4;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\n\nfunction PWWeek2() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    We just wrapped up Bootcamp Week 1 — it was really\n                    exciting to dive into our first week of full-time\n                    coding, but it also came with some personal highs and lows.\n                    A high was that the first week of Bootcamp was a\n                    lot of fun! We learned about design theory, started\n                    working with the Bootstrap framework, and learned some\n                    more about objects in JavaScript!\n                    </p>\n                <p>\n                    Some lows: my girlfriend’s 16-year-old cat went missing\n                    on Monday. Smokey is awesome, and I really hope he comes\n                    home soon! And then on Friday, my cat came down with some sort\n                    of severe bacterial infection, and ended up dying at the\n                    vet’s office several hours later. Overall, it was a pretty rough\n                    week for cats :&lpar;\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/smokey.JPG\" alt=\"Smokey Billhymer\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p>Smokey has been missing since Monday. If you see my dude\n                                        wandering around the Beaumont area, please let me know!!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/mickey.JPG\"\n                            alt=\"Mickey passed away on Friday\" />\n                        <Carousel.Caption>\n                            <p>Mickey passed away on Friday :(</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/lunch-athenian-grill.JPG\"\n                            alt=\"Lunch at Athenian Grill\" />\n                        <Carousel.Caption>\n                            <p>Got lunch with my Grandpa Bob on Friday!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    A final high of the week: A perk of going to school downtown\n                    means that I was able to meet up with my Grandfather for\n                    lunch! His office is across the street from the new\n                    Athenian Grill, so I walked over there on my lunch break\n                    and had a really good time hanging out with him!\n                    </p>\n\n                <h3 className=\"text-center\">Design</h3>\n\n                <p>\n                    Jacqueline, a graphic designer here at Awesome Inc, came by\n                    on Wednesday to talk to us about some basic design principles.\n                        Her talk was about{\" \"}\n                    <span className=\"text-danger\">C.</span><span className=\"text-primary\">R.</span><span className=\"text-warning\">A.</span><span className=\"text-success\">P.</span>:\n                    </p>\n\n                <ol>\n                    <li><span className=\"text-danger\">C</span>ontrast: can be contrast of color, type weight, texture, shape</li>\n                    <li><span className=\"text-primary\">R</span>epetition: repeated colors, patterns, or elements</li>\n                    <li><span className=\"text-warning\">A</span>lignment: how do the elements on the page align with one another?</li>\n                    <li><span className=\"text-success\">P</span>roximity: grouping, whitespace; how close are elements to each other?</li>\n                </ol>\n\n                <p>\n                    We talked about{\" \"}\n                    <span className=\"text-danger\">C.</span><span className=\"text-primary\">R.</span><span className=\"text-warning\">A.</span><span className=\"text-success\">P.</span>{\" \"}\n                    principles, and then looked at\n                    some examples of bad design. After our design workshop wrapped\n                    up, I turned back to my blog and realized just how much additional\n                    design work my blog could use! I really enjoyed learning more\n                    about design, and am looking forward to our future design theory sessions.\n                    </p>\n                <p>\n                    This week we started working with the Bootstrap framework. A framework\n                    is a software abstraction that adds certain functionality to common code.\n                    The main difference between a framework and a library is \"inversion of control\" —\n                    in a framework, the global flow of control is employed by the framework, rather\n                    than the user. What using Bootstrap meant for me, was that I could\n                    take something that previously took me 40-50 lines of CSS, and enter only a\n                    word or two of Bootstrap and achieve the same effect… often with\n                    even better results. Switching from vanilla CSS to Bootstrap was\n                    a bit like being given superpowers — it was amazing what sort of\n                    features I could add to my blog with just a few Bootstrap classes!\n                    </p>\n\n                <h3 className=\"text-center\">JavaScript Objects</h3>\n\n                <p>\n                    I definitely struggled with understanding JavaScript objects at\n                        first. I tried reading the “objects” chapter in{\" \"}\n                    <a title=\"Eloquent JavaScript\" href=\"https://eloquentjavascript.net/06_object.html\">“Eloquent JavaScript”</a>{\" \"}\n                    on Monday. By “tried to read”, I mean that I made it about halfway through\n                    before becoming so lost that I only skimmed the rest, knowing that nothing else was going to\n                        stick. Later in the week, I began working through the <a title=\"MDN JS Objects Module\"\n                        href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects\"> MDN JavaScript\n                        Objects module</a>. Getting to read a second explanation of JS objects really helped me begin\n                    to understand what objects are &lpar;hint: they are everything, and everything is them&rpar;\n                    and why they are useful.\n                    </p>\n                <p>\n                    We rounded out the week by completing an assignment that\n                    involved applying what we had learned about JS objects.\n                    </p>\n\n                <h3 className=\"text-center text-secondary d-none d-sm-block\">Bouncing Balls Game</h3>\n\n                {/* <!-- Bouncing Balls Game (only appears on sm size and larger) --> */}\n                <div className=\"border embed-responsive embed-responsive-4by3 mb-1 d-none d-sm-block\">\n                    <iframe className=\"embed-responsive-item\" title=\"Bouncing Balls Game\" height=\"515\"\n                        src=\"https://robbiegay.github.io/bouncing-balls/\">\n                    </iframe>\n                </div>\n\n                <p className=\"d-none d-sm-block text-secondary pb-3\"><small>\n                    Instructions: Control the red circle with WASD keys. Try to eat all 25 bouncing balls.\n                    You win the game when all the balls are gone. Note: If controls don't seem work,\n                    try click once in the window of the game.\n                    </small></p>\n\n\n                <p>The <a title=\"MDN Bouncing Balls\"\n                    href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">\n                    Bouncing Balls project</a> was a guided exercise as part of MDN’s JS objects\n                    module. It was nice to still have a bit of hand holding throughout this project, as it allowed\n                    us to build a fairly “complex” &lpar;complex to me&rpar; program, and to see how objects made\n                    a program like this possible.\n                    </p>\n\n                <h3 className=\"text-center\">Coming Attractions</h3>\n\n                <p>\n                    Over the next two weeks, we are going to be diving a bit more deeply into\n                    JavaScript, while also doing a lot of project-based work. We are going to\n                    be building  a Tic Tac Toe game, a Calculator, a Sliding Puzzle, and\n                    finally, a Weather App!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default PWWeek2;\n","import React from \"react\";\n\nfunction BCWeek2() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    Bootcamp Week 2 was mostly project based. I worked on\n                    three projects this week: a Weather App, a Tic-Tac-Toe\n                    game, and a Calculator. Each of these projects was built\n                    using JavaScript, and each helped introduce us to some\n                    new aspect of the language.\n                    </p>\n\n                <h3>This Week’s Projects</h3>\n\n                <p>\n                    <a href=\"https://robbiegay.github.io/weather-app/\" title=\"My Weather App\">The Weather App</a>{\" \"}\n                    was designed to take a user-inputted zip-code, and output\n                    real-time weather conditions for that area. This project\n                    introduced us to APIs and JSON. APIs are Application\n                    Programming Interfaces, sets of code governing access\n                    points to servers or databases. JSON stands for JavaScript\n                    Object Notation, and is a standardized data format. We used the{\" \"}\n                    <a href=\"https://openweathermap.org/api\" title=\"openweathermap API\">openweathermap API</a>{\" \"}\n                    for this project, and received data from that API in the JSON format.\n                    </p>\n\n                <p>\n                    The <a href=\"https://robbiegay.github.io/tic-tac-toe/\" title=\"My Tic-Tac-Toe game\">Tic-Tac-Toe game</a>{\" \"}\n                    involved testing a set of 8 possible win conditions against the\n                    current X and O positions on the Tic-Tac-Toe board.\n                    To solve this, I created a nested array with the various\n                    win conditions, and tested them against the current state\n                    of the board (also in an array). This test was run upon\n                    each firing of the click event handler.\n                    </p>\n\n                <p>\n                    The <a href=\"https://robbiegay.github.io/calculator/\" title=\"My Calculator App\">Calculator</a>{\" \"}\n                    project involved building a basic calculator that could use\n                     +, -, /, x on user-inputted numbers. This project seemed pretty\n                     straight forward at first — computers should be pretty good\n                     at adding, subtracting, dividing, and multiplying. The problem,\n                     however, lay in the fact that there are a multitude of\n                     combinations for which the user could input values. What\n                     happens if the user presses: - + 5 6 - / 3 =? Should the computer\n                     ignore the opening two operands? 5 and 6 pressed sequentially\n                     should obviously form “56”. And what about the “- /“? Should\n                     the computer ignore the first operand in this case as well?\n                    </p>\n\n                <p>\n                    There were many edge cases, and, on my first attempt at creating\n                    the calculator, I tried to solve all of these scenarios from\n                    the beginning. This resulted in a somewhat functioning calculator,\n                    but at the expense of running some very convoluted code behind\n                    the scenes. I decided to start fresh and create a second JS sheet,\n                    and to focus on just solving core problems first. After I had\n                    some fairly clean code working, I then began to\n                    incrementally add edge case solutions.\n                    </p>\n\n                <p>\n                    Additionally, the Calculator was my first time dynamically\n                    rendering an application in JavaScript. The body of my HTML\n                    document only contains a single &lt;div&gt; element for the\n                    JavaScript to build the app on.\n                    </p>\n\n                <h3>Process</h3>\n\n                <p>\n                    My biggest take away from Bootcamp Week 2 was that I started\n                    to think about and establish a personal development process.\n                    </p>\n\n                <p>\n                    My first step is to read over the project parameters, and to\n                    Pseudo Code the problem. I will draw out the potential UI,\n                    thinking about how various elements will scale at different\n                    screen sizes, as well as what elements are clickable and how\n                    various elements should interact. I will work on the\n                    code as well — mapping out ideas relating to how I think\n                    the problem could be solved.\n                    </p>\n\n                <p>\n                    I will then usually go ahead and build my UI. This gives me\n                    something to work with and test code upon. If you need to\n                    test what happens when a button gets pressed, it’s pretty\n                    hard to do so if you haven’t built any buttons yet!\n                    </p>\n\n                <p>\n                    My next step is to build the core functionality of the project.\n                    This MVP will fulfill the broad requirements for functionality,\n                    while leaving edge cases to a later step. Throughout this\n                    process, I will likely come up with ideas for new features,\n                    or think of possible edge case problems. In order to not get\n                    sidetracked, I will jot down these ideas on a pad of paper.\n                    </p>\n\n                <p>\n                    Once I get the core functionality working, I will then begin\n                        solving for edge cases. <a href=\"http://ianrios.me/\" title=\"Ian's Website\">Ian</a>{\" \"}\n                    recommended that I prioritize edge cases by using a four-quadrant\n                    grid. The grid compares Important and Not-Important vs.\n                    Urgent and Less-Urgent. This allowed me to tackle edge\n                    cases with a certain hierarchy.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/edge-case-chart-white-bg.png\" alt=\"Chart for Edge Case Prioritization\" />\n                    <figcaption className=\"figure-caption text-center\">A useful way to prioritize edge case solutions and bug fixes</figcaption>\n                </figure>\n\n                <p>\n                    Working within this developmental framework helped me\n                    write more efficient code, and in a more timely manner!\n                    </p>\n\n                <h3>Looking Forward</h3>\n\n                <p>\n                    In Bootcamp Week 3, we will be tackling a{\" \"}\n                    <a href=\"https://github.com/bootcamp-students/Projects-Exercises/blob/master/docs/projects/sliding-puzzle.md\" title=\"Sliding Puzzle Project Prompt\">Sliding Puzzle project</a>{\" \"}\n                    — involving moving pieces around a board on\n                    each user click. This project seems pretty\n                    intimidating right now, but I think that we\n                    will be learning some new concepts this week that will\n                    hopefully help with completing this project!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek2;\n","import React from \"react\";\n\nfunction BCWeek3() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    Bootcamp Week 3 was both fun, and felt a lot more challenging\n                    than the previous weeks. Both Weeks 2 and 3 involved the\n                    completion of 4 projects. One Monday I added some stretch\n                        goals to the first 3 projects — keyboard input for the <a href=\"https://robbiegay.github.io/weather-app/\">Weather\n                        App</a> and <a href=\"https://robbiegay.github.io/calculator/\">Calculator</a>; a “get weather by current location” button\n                        for the Weather App; a running scoreboard for <a href=\"https://robbiegay.github.io/tic-tac-toe/\">Tic-Tac-Toe</a>;\n                and I also wrote my first README file for the Calculator app\n                (more on README’s later).\n                    </p>\n\n                <p>\n                    We also took headshots and a group photo this week — check out our cohort below!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/bootcamp-group-photo.JPG\"\n                        alt=\"Fall 2019 Bootcamp Group Photo\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        L-R: Ian Rios (Assistant Instructor), Todd Trivisonno, David Joyce, Robbie Gay, Sam\n                        Wheeling, Abram Gornik,\n                        Will McGill, Taylor Akin, Michael Loyselle, Rachael Yoder, Eric Hampton, Justin Hall (Lead\n                        Instructor), Ethan Borkosky\n                        </figcaption>\n                </figure>\n\n                <p>\n                    I’ve been trying to wake up early and either go to the gym or\n                    get some work done before class starts. On Tuesdays, I have been\n                    starting my day across the street at{\" \"}\n                    <a href=\"http://acupofcommonwealth.com/\">Cup of Commonwealth</a>.\n                It has been really nice to be able to have about an hour before\n                class to plan out what projects I want to work on, and to even get\n                a bit of a headstart on the day’s coding work! I also just REALLY\n                enjoy being up that early. Note: I hate the act of actually getting out of\n                bed (I love to sleep), but once I'm up, I love those predawn hours.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/cup-of-common.JPG\"\n                        alt=\"Some Tea at Cup of Commonwealth\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        I've been going with the Fogged Chai\n                        </figcaption>\n                </figure>\n\n                <h3>Sliding Puzzle Game</h3>\n\n                <p>\n                    On Tuesday, we started working on our final project of the 2 week sprint.{\" \"}\n                    <a href=\"https://robbiegay.github.io/sliding-puzzle/\">The Sliding Puzzle game</a>{\" \"}\n                    gave be a lot of headaches! I took an object-oriented approach, using an\n                    array to hold 16 objects, each containing properties such as the array’s\n                    name, and its current position on the board. Trying to conceptualize\n                    how the tiles would move around the board, while really the physical div’s\n                    containing each tile remained stationary, and while the objects\n                    themselves weren’t even on the board, was really hard to make sense of.\n                    </p>\n\n                <p>\n                    Throughout this week’s warm-ups and the projects themselves, the instructors really\n                    stressed working together to think through common problems. Several group whiteboarding sessions\n                    were\n                    taking place throughout the week, and I don’t think I could’ve gotten through this week’s work\n                    without being able to talk/think through the problems with some of my fellow bootcampers and the\n                    instructors.\n                    </p>\n\n                <h3>Working with JavaScript</h3>\n\n                <p>\n                    I’m really interested in continuing to learn more about JavaScript! We have already learned how\n                        to do so much using <abbr title=\"Plain JavaScript without any additional Libraries or Frameworks\">vanilla JS</abbr>, and yet I know that we have only barely scratched the surface. We will\n                        soon start working with <a href=\"https://reactjs.org\">React</a>, and begin to move away from using only vanilla JS.\n                    </p>\n\n                <p>\n                    I’m also really excited to do some more research on APIs and what various JS\n                    frameworks and libraries can allow you to do. I feel like there are so many cool things\n                    that you can do with this technology, and I can't wait to learn more!\n                    </p>\n\n                <h3>Breakfast Club</h3>\n\n                <p>\n                    On Thursday, we had our first Coding Breakfast Club! A group of bootcampers, instructors, and\n                    local developers all met up from 6-8am at Awesome Inc for some optional coding and\n                    conversation. Starting at 6am meant that I had to wake up\n                    pretty early in order to shower and drive in from Versailles. I ended up waking up at 4:45am, and\n                    I swear I must’ve set a world record for the earliest someone has EVER gone to sleep — 9:30pm —\n                    it was so early!\n                    </p>\n\n                <p>\n                    About half of the bootcampers made it to this bonus morning session. There were also several real-world\n                    developers in attendance, and it was really cool to get to talk with some people who are\n                    currently working as devs, and to hear about the various fields that they currently work in. We spent most of the morning session setting\n                        up <a href=\"https://flutter.dev\">Flutter</a> on our machines, and we will hopefully get more\n                into working with Flutter in this week’s session!\n                    </p>\n\n                <h3>README’s</h3>\n\n                <p>\n                    This week I added <a href=\"https://github.com/robbiegay/calculator\">my first README</a>{\" \"}\n                    to a project! I added some basic info about my Calculator app,\n                    as well as diving fairly deeply into the various edge-cases that I had to solve for while building\n                        and testing the app. Assistant Instructor <a href=\"http://ianrios.me/\">Ian</a> also gave me a tip about including\n                links in the project's repo descriptions. Although all of the apps that I have built so far are hosted on\n                GitHub Pages, without easy access to links, many who visit my page may never realize this.\n                Ian recommended that I include links to the hosted app in the description of each repo.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/adding-links-to-repos.png\"\n                        alt=\"I added links to my GitHub repos\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        Ian recommended that I add links to my GitHub repos\n                        </figcaption>\n                </figure>\n\n                <p>\n                    I made use of this great template for writing README's, made by\n                        GitHub user <a href=\"https://gist.github.com/PurpleBooth\">PurpleBooth</a>. Check out\n                    the template here:{\" \"}\n                    <a href=\"https://gist.githubusercontent.com/PurpleBooth/109311bb0361f32d87a2/raw/8254b53ab8dcb18afc64287aaddd9e5b6059f880/README-Template.md\">README Template</a>{\" \"}\n                </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek3;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek4() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">Weekly Update</h3>\n\n                <p>\n                    A few personal highlights from last week: I saw some really beautiful sunrises walking to <a href=\"https://www.awesomeinc.org\" title=\"Where our Bootcamp meets\">Awesome Inc</a> each morning. My uncle has been in town from California all week and we went out to eat… a lot. On Saturday, we all went to the UK football game. It was a tough win, but UK seemed to metaphorically drag their season back on track. After breaking our 3 game losing streak, we get rewarded with a trip down south to play number 10 Georgia next weekend. The Bulldogs opened as a 27-point favorite, so it should be a very <i>exciting</i> game. Finally, on Sunday, Bobby came into the <a href=\"http://wrfl.fm\" title=\"88.1 FM — Your Only Alternative Left\">WRFL</a> studio and co-hosted my weekly radio show!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/beautiful-sunrise-oct-11th.JPG\" alt=\"A pretty sunrise\" />\n                        <Carousel.Caption>\n                            <p>I've been catching some really beautiful sunrises walking to class!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/joellas-food-pic.JPG\"\n                            alt=\"Some fried chicken\" />\n                        <Carousel.Caption>\n                            <p>A food pic: Joella's Hot Chicken!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/pic-of-eachother-taking-food-pics-joellas.JPG\"\n                            alt=\"Some guys taking pics of each other\" />\n                        <Carousel.Caption>\n                            <p>A pic of each other taking food pics</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/uk-vs-arkansas-football.JPG\"\n                            alt=\"Before the UK Football game\" />\n                        <Carousel.Caption>\n                            <p>Before the UK Football game!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/dj-bobby-frizzle.JPG\"\n                            alt=\"At the radio station\" />\n                        <Carousel.Caption>\n                            <p>DJ Bobby Frizzle takes over the WRFL airwaves</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n\n                <p>\n                    Some highlights from the Bootcamp: In Bootcamp Week 4, we worked on a <a href=\"https://robbiegay.github.io/to-do-list/\" title=\"Robbie's To-Do List app\">To-do List app</a>. This involved working with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" title=\"MDN Documentation - Local Storage\">Local Storage API</a> to store entries even when you close your web browser or refresh the page. One useful thing that I did for the To-Do app — and which I might do again in the future — was to write some code for custom hotkeys. During the development process, I would often change my code and needed to test it with a totally refreshed page. Since Local Storage retains data between page loads, it became more difficult to quickly load a brand new version of the webpage. Because of this, I decided to map the <code>=</code> key to some lines of code that cleared the Local Storage (as well as emptying the array the held data related to the To-Do List entries). Additionally, I mapped the <code>-</code> key to trigger several useful <code>console.log()</code>’s. This meant that I could quickly get a status update on several of the key functions of the app — without these logs cluttering up the console upon every action.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/to-do-custom-hotkeys.png\" alt=\"My To-Do code\" />\n                    <figcaption className=\"figure-caption text-center\">I mapped some custom hotkeys in my To-Do List app</figcaption>\n                </figure>\n\n                <h3 className=\"text-center\">Frameworks and Libraries</h3>\n\n                <p>\n                    The prompt for this week’s blog post asked: “Why do you see JavaScript frameworks and libraries [as] useful or hard to use?” I thought that this was an interesting question, as I would likely answer that I find frameworks and libraries as both useful AND hard to use (at least at first).\n                    </p>\n\n                <p>\n                    JavaScript frameworks and libraries are really useful — they abstract away a lot of functionality, allowing you to write code that is both clean and highly functional. Cleaner code allows for easier debugging and maintenance. Additionally, many of the functionalities contained within these frameworks or libraries solve complex problems that took entire teams of highly skilled individuals to solve. Many coders (especially novice ones like myself) would be hard pressed to solve these problems, let alone with code that remains remotely legible.\n                    </p>\n\n                <p>\n                    And in answer to the second part of the prompt: I also think that frameworks and libraries can be difficult to learn. Picking up any new aspect of coding can be challenging. You often work really hard to attain some level of competency in a certain area, and then a new framework or library comes knocking at our door. This new tech offers increased functionality and powerful new features, but comes at the cost of jumping (yet again) into the <a href=\"https://s3.amazonaws.com/viking_education/web_development/blog/coding_is_hard_confidence_competence.png\" title=\"Graphic from Erik Trautman's 'Why Learning to Code is So Damn Hard'\">desert of despair</a>. Couple this with the fact that you may then have to refactor many of your old projects in order to incorporate this new tech, and you might be tempted to slam your door on the framework/library salesman and go back to the comfort of your old code. As tempting as this is, I think that the added functionality of new frameworks/libraries, as well as the opportunity to keep your 'learning muscle' strong, more than justifies the mental discomfort and extra work — even if it will always remain tempting to stay within your comfort zone --> &#128563;.\n                    </p>\n\n                <p>\n                    [Bonus content: Since I added an emoji above, here is a <a href=\"https://www.w3schools.com/charsets/ref_emoji.asp\" title=\"w3schools - Emoji Reference Page\">great resource</a> for adding emoji's to your code!]\n                    </p>\n\n                <h3 className=\"text-center\">Coming Attractions: React</h3>\n\n                <p>\n                    Next week we will begin working with the <a href=\"https://reactjs.org\" title=\"The React Website\">React library</a>. React is billed as a “JavaScript library for building user interfaces”. I am really excited to make this jump! We have been working with <abbr title=\"Plain JavaScript without any additional Frameworks or Libraries\">Vanilla JavaScript</abbr> for several weeks now, and although Vanilla JS was very challenging at first, I have started to get fairly comfortable, at least with the more basic applications that we have been building. As such, I’m really excited to dive in and get out of my comfort zone!\n                    </p>\n\n                <h3 className=\"text-center\">VS Code Snippets</h3>\n\n                <p>\n                    One resource that I found this week that was really helpful was this article on <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\" title=\"VS Code Documentation — Snippets\">creating VS Code snippets</a>. Snippets are lines of text that you can program to auto-complete into useful lines of code! I wrote a snippet for quickly adding <code>console-log()</code>’s to my code: you type in <code>lll</code> (three lowercase L’s), and then press <code>Enter</code>. This converts the <code>lll</code> into a new <code>console.log();</code>, with the text input cursor placed in the parentheses for quickly typing what you want to log. I chose the letter L because it is next to the enter key, allowing for very quick implementation!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek4;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek5() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    A lot of things happened this week — buckle up for a relatively long weekly update!\n                    </p>\n\n                <h3 className=\"text-center\">The Big Chop</h3>\n\n                <p>\n                    On Wednesday, I scheduled my first haircut in nearly 5 years!\n                    I started growing my hair out in January of 2016, with the\n                    intention of one day having a “man bun”. By the Fall of 2016,\n                    my hair was finally long enough to go up in a bun… and from\n                    there it just kept growing and growing!\n                    </p>\n\n                <p>\n                    Over the last few months, I had started to get a little tired\n                    of its extreme length. It had gotten to the point where\n                    it was almost too long for a bun and, after showering, my\n                    hair would remain wet for hours! This month I decided that\n                    I was going to go ahead and commit, so I scheduled the big chop!\n                    </p>\n\n                <p>\n                    It has definitely been a significant change — I keep running my\n                    hands through my hair, and I admit to surprising myself a few\n                    times when I walk by a mirror. So far, I haven’t really\n                    missed the length — I think I’ve been so busy enjoying\n                    not having hair in my eyes, that I haven’t really felt any\n                    remorse for the missing locks.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-before-the-haircut-blur-frame.jpg\"\n                            alt=\"Before the big chop\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Standing outside the barbershop!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-getting-a-haircut-blur-frame.jpg\"\n                            alt=\"Starting the haircut\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Greg brushing out my hair</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-mid-chop-blur-frame.jpg\"\n                            alt=\"Midchop\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">The final product...</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-and-anna-after-haircut-crop.jpg\"\n                            alt=\"After the haircut\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">The actual final product... a happy girlfriend!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-hair-measured-length.JPG\"\n                            alt=\"15 inches of hair\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">15-inches — ready for donation to Wigs For Kids!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">Fall Festivities</h3>\n\n                <p>\n                    On Saturday, Anna and I went hiking in Berea. We started off\n                    by getting some bagels at{\" \"}\n                    <a href=\"https://www.instagram.com/nativebagelco/\" title=\"Instagram\">Native Bagel Co</a>.\n            I would really recommend the salt bagel with honey-rosemary cream cheese — so good!\n            We then hiked up to the top of East Pinnacle. Even though\n            we were hoping for more Fall colors, the view was amazing\n            and it was perfect weather for being outside. Afterwards,\n                we drove over to{\" \"}\n                    <a href=\"https://www.instagram.com/eckertsorchard/\" title=\"Instagram\"> Eckert’s Orchard</a>{\" \"}\n                    for some more Fall fun! We ordered their warm doughnut\n                    Sunday: a warm apple cider doughnut, covered with vanilla\n                    ice cream, and drizzled with caramel syrup. Very yummy!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/berea-hike-view.JPG\"\n                            alt=\"View from East Pinnacle\" />\n                        <Carousel.Caption>\n                            <p>The view from East Pinnacle!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/robbie-and-anna-berea-hike.JPG\"\n                            alt=\"Anna and I at East Pinnacle\" />\n                        <Carousel.Caption>\n                            <p>Got a selfie with nature!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/berea-hike-fall-foliage-blur-frame.jpg\"\n                            alt=\"A tree turning orange\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Saw lots of Fall foliage!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/anna-on-berea-hike-blur-frame.jpg\"\n                            alt=\"Anna hiking in Berea\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Anna leading the way</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/doughnuts-and-applecider.JPG\"\n                            alt=\"Applecider doughnuts, a doughnut sunday, and a cider slushie\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Got lots of Fall goodies at the Apple Orchard. That's a warm applecider doughnut\n                                        sunday on the right!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">React!!!</h3>\n\n                <p>\n                    This week we started working with the{\" \"}\n                    <a href=\"https://reactjs.org\" title=\"React Documentation\">React.JS</a>{\" \"}\n                    library. React is an open source project produced by Facebook,\n                    and is billed as “A JavaScript library for building user interfaces”.\n                    </p>\n\n                <p>\n                    A major feature of React is its use of components.\n                    I would define a React component as a self-contained unit that\n                    compartmentalizes a certain piece of functionality. This can be\n                    very useful: you can write a component for a button. This button\n                    component can contain all of the necessary code for a button (its shape,\n                    what happens when it is clicked, etc). You can then call that\n                    button component anywhere you want to insert a button on your site.\n                    </p>\n\n                <p>\n                    Here is an example of a \"Card\" component that I made for our{\" \"}\n                    <a href=\"https://robbiegay.github.io/react-restaurant/\">React Restaurant project</a>:\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/using-react-components.png\"\n                        alt=\"An example of a React component\" />\n                    <figcaption className=\"figure-caption text-center\">A React Component</figcaption>\n                </figure>\n\n                <p>\n                    The card component creates an <code>&lt;h5&gt;</code> (header) element for\n                        the title, an <code>&lt;h6&gt;</code> (header) element for the price, and\n                        a <code>&lt;p&gt;</code> (paragraph) element for the description.\n                        You may have noticed the <code>&#123;this.props.mealTitle&#125;</code> lines of code —\n                                    A useful feature of components is that you can pass properties\n                        into them using <code>props</code>.\n                    </p>\n\n                <p>\n                    Within the Card component, I set the inner HTML of the above\n                        mentioned elements to <code>&#123;this.props.INPUT&#125;</code>. React\n                                        often uses an extension of JavaScript called{\" \"}\n                    <a href=\"https://reactjs.org/docs/introducing-jsx.html\" title=\"React Documentation\">JSX</a>. JSX allows\n                        you to put any valid JS expression within <code>{}</code> (curly braces),\n                                    and that expression will then be evaluated. In my example\n                        code, I placed <code>this.props.INPUT</code> within the curly\n                        braces. <code>this</code> refers to the component itself,{\" \"}\n                    <code>props</code> refers to properties of the object, and\n                        then <code>INPUT</code> is a placeholder for whatever element\n                                    you want to pass through to the component.\n                    </p>\n\n                <p>\n                    When I call the component, I am then able to use this syntax\n                    to pass code into the component.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/card-example.png\" alt=\"An example of component use\" />\n                    <figcaption className=\"figure-caption text-center\">Calling the \"Card\" component</figcaption>\n                </figure>\n\n                <p>\n                    In this example code, I pass in <code>mealTitle</code>,{\" \"}\n                    <code>mealPrice</code>, and <code>mealDescription</code>.\n                        Anything that I set these <code>props</code> equal to is inserted into\n                                        the respective React component. The result of\n                                        this example code is this:\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/card-result.png\"\n                        alt=\"The result of the component call\" />\n                    <figcaption className=\"figure-caption text-center\">The result of the component call</figcaption>\n                </figure>\n\n                <p>\n                    I found React fairly difficult to pick up. For the first few days,\n                    I felt like I was aimlessly adrift. There\n                    was so much to learn, that I wasn’t even sure where to turn my\n                    boat. Slowly I was able to gain a little traction — I would\n                    pick a project, experiment with React, and see what I could learn. A big part was being\n                    willing to break things and make mistakes. After I had spent\n                    some time building and breaking things, I slowly started to feel\n                    more comfortable using React!\n                    </p>\n\n                <h3 className=\"text-center\">The Pomodoro Method</h3>\n\n                <p>\n                    Warm-up Coach{\" \"}\n                    <a href=\"https://jmstewart00.github.io\" title=\"Josh's Website\">Josh</a>{\" \"}\n                    has recommended before that we take breaks. For me, a break typically\n                    involved reading some content online or checking my phone. Unfortunately,\n                    this isn’t really a ‘break’ as far as our brain is concerned — we\n                    are merely switching from one type of stimulus to another. As such,\n                    on Friday I decided to try the Pomodoro Method, and to start taking real breaks.\n                    </p>\n\n                <p>\n                    The <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\" title=\"Wikipedia\">Pomodoro\n                            Method</a>{\" \"}\n                    involves setting a timer, working with laser focus for a defined length of\n                    time, and then taking a short break. Here is an example of how these\n                    breaks would work:\n                    </p>\n\n\n                <ul>\n                    <li>25 minutes of work</li>\n                    <li>5 minute break</li>\n                </ul>\n\n                <p>\n                    After 4 of these Pomodoros, you then take a longer 15-30 minute break. An\n                    important aspect of a Pomodoro is that it is indivisible —\n                    you have to work for the full 25 minutes, and you have to maintain\n                    your state of focus throughout. I found that I was able to keep my\n                    focus much more effectively in these short bursts. Beyond this improved\n                    focus, I found the real value in the type of breaks that I took.\n                    </p>\n\n                <p>\n                    During my Pomodoro breaks, I tried to do something that didn’t involve a screen. Here are some\n                    examples of breaks that I took:\n                        <ul>\n                        <li>Short walk around the block</li>\n                        <li>Light stretching in the hallway (lots of great natural light!)</li>\n                        <li>Same hallway: opened the window, felt the sun and wind on my face, and did some\n                                yoga-like mindful breathing</li>\n                    </ul>\n                </p>\n\n                <p>\n                    These breaks might seem silly, but it was amazing how much a short break like\n                    this improved my cognitive function. Every time I returned from these\n                    breaks, I sat down at my desk totally refreshed! I found that I had the same\n                    level of energy that I was used to experiencing only at the start of the day!\n                    </p>\n\n                <p>\n                    Remembering and following through with taking breaks\n                    can be a challenge — It can be pretty tempting to remain in your chair! That\n                    said, I hope to continue to take breaks like this, as I think that they\n                    really help me do my best work!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek5;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek2() {\n    return (\n        <>\n{/* <!-- Main Text --> */}\n                <article className=\"text-justify\">\n\n                    <h3 className=\"text-center\">Weekly Update</h3>\n\n                    <p>\n                        Week 6 of the Bootcamp was pretty fun!{\" \"}\n                        <a href=\"https://wildercat.github.io/\" title=\"Abram's Blog\">Abram</a>{\" \"}\n                        brought in his GameCube and we played some lunchtime{\" \"}\n                        <a href=\"https://en.wikipedia.org/wiki/Super_Smash_Bros._Melee\" title=\"Wikipedia Page\">Melee</a>. \n                        Todd showed us his favorite game —{\" \"}\n                        <a href=\"https://en.wikipedia.org/wiki/Super_Monkey_Ball_(video_game)\" title=\"Wikipedia Page\">Monkey Ball</a> — \n                        it was pretty fun but I was not very good at it. On Thursday, Anna and I carved a pumpkin! Warning: \n                        very spooky pic of said pumpkin below. On Friday, Awesome Inc held their monthly Family Lunch. \n                        They brought in Pasta and Salad from <a href=\"https://www.puccinissmilingteeth.com/\">Puccini’s</a> and all those who work out of the Awesome Inc \n                        space shared a meal! I was already a huge Puccini's pizza fan — now I’m a lover of their \n                        lasagna as well!\n                    </p>\n\n                    {/* <!-- Carousel Images --> */}\n                    <Carousel>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bootcamp-melee.jpg\"\n                                        alt=\"Playing some Melee\" />\n                            <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Some Bootcampers playing GameCube (L-R: Taylor, Abram, Myself, and Will)</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/carving-pumpkin.JPG\"\n                                        alt=\"A pic of pumpkin carving\" />\n                            <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Anna carving the eyes</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/glowing-pumpkin.JPG\"\n                                        alt=\"A glowing pumpkin\" />\n                            <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Very spooky!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/family-lunch-oct-2019.JPG\"\n                                        alt=\"Puccini’s Pasta\" />\n                            <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Family lunch — Puccini's Pasta and Salad!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n\n                    <br />\n\n                    <h3 className=\"text-center\">A Halfway Point</h3>\n\n                    <p>\n                        This Friday marked the halfway point of the Bootcamp. It is a \n                        little wild that the course has flown by so quickly. \n                        At the same time, as we started to refactor some of our earlier projects \n                        this week, I realized just how much ground we have covered in such a short period of time. \n                        I’m having a lot of fun in the Bootcamp, so it is a little bittersweet to \n                        think that the rest of the Bootcamp might fly by as well. I am very excited, however, to \n                        graduate and pursue a job in Lexington’s Tech scene!\n                    </p>\n\n                    <h3 className=\"text-center\">React Reflection</h3>\n\n                    <p>\n                        As I wrote in <a href=\"https://robbiegay.github.io/posts/bc-week-5.html\">last week’s blog post</a>, \n                        I initially struggled with understanding React. It took me most of week 5 before I even \n                        felt like I was gaining any traction. Last weekend, I got a full night's sleep \n                        and spent part of Sunday re-reading the <a href=\"https://reactjs.org/docs/getting-started.html\">React documentation</a>. \n                        This week, I worked through the <a href=\"https://reactjs.org/tutorial/tutorial.html\">React tutorial</a>{\" \"}\n                        for the second time, and read through the documentation \n                        a third. Each time through, I would make it further and further before my comprehension \n                        level would start to drop. By the end of the week, I was starting to feel well \n                        versed in the basics of React — just in time to switch gears and start learning \n                        MySQL and PHP. &#128579;\n                    </p>\n\n                    <h3 className=\"text-center\">Next Week: Back End Development</h3>\n\n                    <p>\n                        Next week we will start working with Back End languages. Up until this point, we have \n                        been working with Front End languages and frameworks. Front End development \n                        is more client side focused and deals with design and user interfaces. Back End development involves \n                        working with servers and doing more behind-the-scenes work. Additionally, being able to do \n                        both Front End and Back End development is what makes someone a Full Stack Developer!                           \n                    </p>\n\n                    <p>\n                        We will start Back End work by learning <a href=\"https://www.php.net/\">PHP</a>{\" \"}\n                        and <a href=\"https://www.mysql.com/\">MySQL</a>. We got a bit of an introduction to \n                        these languages with our morning Warm-ups this week.{\" \"}\n                        <a href=\"https://jmstewart00.github.io/\" title=\"Josh's Website\">Josh</a> turned us \n                        loose with some <a href=\"https://www.hackerrank.com/\">HackerRanks</a> on PHP and MySQL. \n                        Both were challenging at first, but it seems that we have become pretty good Google’ers \n                        as we were able to pull up documentation and figure out methods to solve the problems fairly quickly!\n                    </p>\n\n                    <h3 className=\"text-center\">Keyboard Shortcuts</h3>\n\n                    <p>\n                        After using <a href=\"https://code.visualstudio.com/\" title=\"VS Code Website\">VS Code</a>{\" \"}\n                        daily for several weeks, I decided that today it was time to learn some useful shortcuts \n                        for the software. I listed below some of the useful shortcuts that I found:\n                        \n                    </p>\n\n                    <ul>\n                        <li>\n                            <kbd>⌥</kbd> + <kbd>click</kbd> --> Add cursor\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>C</kbd> OR <kbd>⌘</kbd> + <kbd>X</kbd> (empty selection) --> Copy or Cut entire line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>L</kbd> --> Select current line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>D</kbd> --> Add to current selection \n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>&larr; OR &rarr;</kbd> --> Move to beginning or end of line\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>⌥</kbd> + <kbd>&larr; OR &rarr;</kbd> --> Move to left or right editor\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>⌥</kbd> + <kbd>S</kbd> --> Save all\n                        </li>\n                        <li>\n                            <kbd>shift</kbd> + <kbd>⌥</kbd> + <kbd>F</kbd> --> Format document\n                        </li>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>B</kbd> --> Toggle sidebar visibility\n                        </li>\n                    </ul>\n\n                    <p>\n                        Finally, a somewhat unusual shortcut that I found was for something called Zen Mode. \n                        Similar to Focus Mode in Microsoft Word, it minimizes distracting elements of the screen, \n                        allowing you to focus on the act of coding:\n                    </p>\n\n                    <ul>\n                        <li>\n                            <kbd>⌘</kbd> + <kbd>K</kbd> then press <kbd>Z</kbd> --> Zen Mode ( <kbd>esc</kbd> <kbd>esc</kbd> (twice) to exit)\n                        </li>\n                    </ul>\n\n                    {/* <!-- White space --> */}\n                    <br /><br /><br /><br /><br /><br /><br /><br />\n\n                </article>\n        </>\n    );\n}\n\nexport default BCWeek2;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek7() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    We are officially into the second half of the Bootcamp.\n                    This week we began working with Back End programming —\n                    but first — a weekly update!\n                    </p>\n\n                <h3 className=\"text-center\">Weekly Update</h3>\n                <p>\n                    Anna and I made plans to grab lunch on Thursday. As soon\n                    as I hopped in her car, we saw a group of Bootcampers coming\n                    out of Awesome Inc, clearly deliberating on where to eat.\n                    Anna had said that she wanted to meet some more of my classmates,\n                    so I hopped out and invited everyone to join us!\n                    </p>\n\n                <p>\n                    We went over to{\" \"}\n                    <a href=\"https://wineandmarket.com/\" title=\"Wine and Market's Website\">Wine and Market</a>,\n            a really cool sandwich spot and boutique grocery store over on\n            Jefferson Street. I always feel like I’m in the hot seat when\n            showing a new food spot to others but everyone seemed to enjoy\n            it! I personally think their #9 — a turkey, strawberry rhubarb\n            preserve, and goat cheese on ciabatta bread — is one of the best\n            sandwiches in Lex.\n                    </p>\n\n                <p>\n                    On Thursday, Awesome Inc held a fun little Halloween celebration!\n                    There was a caramel apple bar as well as some pumpkin decorating.\n                    It was a lot of fun — can you guess which pumpkin was mine?\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/wine-and-market-sandwhiches.JPG\"\n                            alt=\"Wine and Market Sandwiches\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">L-R: Wine and Market's #9 and #7 Sandwiches</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/wine-and-market-group-photo.JPG\"\n                            alt=\"Some Bootcampers and Anna at Wine and Market\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">L-R: Anna, Rachael, Sam, and Ethan</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/awesome-inc-pumpkin-decorating.JPG\"\n                            alt=\"Awesome Inc Pumpkins\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Some 'Awesome' looking pumpkins!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <br />\n\n                <p>\n                    On Friday, the UK Men’s Basketball team played their second exhibition\n                    game against Kentucky State. Anna and I had 2 extra tickets, so\n                    I offered them up to anyone in the Bootcamp and{\" \"}\n                    <a href=\"http://ianrios.me/\" title=\"Ian's Website\">Ian</a> was the\n    first to claim them. Ian and his wife Olivia joined us for dinner\n                            at <a href=\"https://www.facebook.com/Sawyers-Downtown-Bar-Grill-491414770920862/\" title=\"Sawyer's Facebook Page\">Sawyer's</a>{\" \"}\n                    before the game. I’m starting to get a little ‘foodie’-ish with all\n                    of these recommendation, but I do think that the chili and burgers at Sawyer\"s are the\n                    best in town. We sat in our actual seats (upper arena) for the first\n                    half, but took our chances in the second half by\n                    snagging some open seats about 8 rows from the floor. Luckily no one\n                    kicked us out, and we were a lot closer to the action! Additionally, during halftime we\n                    got some very yummy Rupp Arena ice cream. &#128525;\n                        </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/sawyers-chili-uk-kstate.JPG\"\n                            alt=\"Sawyer's Chili\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Sawyer's 'Chili Pie': Fritos, Cheese, and Chili!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/me-anna-olivia-ian-uk-kstate.JPG\"\n                            alt=\"Group selfie at the UK game\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">A group selfie at the UK game! L-R: Me, Anna, Olivia, Ian</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/anna-and-ice-cream-uk-kstate-blur.png\"\n                            alt=\"Rupp Arena Ice Cream\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Anna and Ice Cream!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <br />\n\n                <p>\n                    This week we started learning Back End development! We began by\n                        learning some{\" \"}\n                    <a href=\"https://www.php.net/\" title=\"PHP Documentation Site\">PHP</a>.\n            PHP stands for ‘PHP: Hypertext Processor’, which is a recursive acronym,\n            apparently something that programmers love. We built a practice server,\n            and attempted to build an API that could pull data from that server.\n            I might have gone a little bit overboard when I decided to add 1,000,000\n            items to my nonsense database…\n                        </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/million-item-db.png\" alt=\"My example database\" />\n                    <figcaption className=\"figure-caption text-center\">1 million food items</figcaption>\n                </figure>\n\n                <p>\n                    About midweek, we jumped into{\" \"}\n                    <a href=\"https://laravel.com/\" title=\"The Laravel Website\">Laravel</a>.\n            Laravel is a PHP framework that is billed as an elegant and\n            expressive means to do Back End programming. I have really\n            enjoyed learning Laravel so far. We have been working our\n            way through this\n                            \"<a href=\"https://laracasts.com/series/laravel-6-from-scratch\" title=\"Laracasts\">Laravel 6 From Scratch</a>\"\n    video series. I find it to be a pretty fun way to learn!\n    I follow along with the video, pausing it to apply what\n    I just learned to my own code. Once I feel like I\n    have come to an understanding about some topic, I then try to\n    summarize it in my notes.\n                        </p>\n\n                <p>\n                    Around chapter 3 of the Laracast series, my comprehension\n                    level started to drop. I found the same thing happening\n                    with several of our recent learning endeavors (React, PHP). I\n                    will make a decent amount of progress, but then the wave of\n                    confusion washes over me and I have to swim back to shore.\n                    A solution that I have found is to go ahead and skim over\n                    the remaining material. I don’t stress about the fact that\n                    I am not entirely following along. Rather, I am trying to\n                    get a broad picture, to see how the pieces fit together.\n                    I then go back and read (or watch) the material again.\n                    When I started getting lost in the Laracasts, I turned\n                    the playback speed to 2x and powered through the remaining videos. This\n                    allowed me to get a broad overview of many of the cool Laravel features.\n                        </p>\n\n                <p>\n                    One thing that I have been struggling with is getting enough\n                    sleep. Don’t get me wrong, I’m not falling asleep in class,\n                    but when learning new material, I find that even a little\n                    bit of extra fatigue really hinders my ability to learn\n                    new concepts. My goal for next week, is to go to bed an\n                    hour earlier! That plan sounds great, except that I had\n                    the same goal last week. Oh well.\n                        </p>\n\n                <p>\n                    I slept in both Saturday and Sunday mornings, and then started\n                    rewatching the Laracasts. I found this really helpful — I\n                    was fresh and alert, and was able to absorb the material\n                    really well. I am really starting to see how useful Laravel\n                    is. Right now, its only hindrance is that it is\n                    so full of features that it can be a little difficult to\n                    understand at first. While working with JavaScript, I would\n                    create one or two JS files, an HTML file, and a CSS file.\n                            When I run <code>Laravel new project name</code>, it makes\n    a massive amount of files. I just went through and tried to count\n    how many files this actually does create. I was around 140~\n    when I got into the vendor bin and realized that it\n    would be a waste of time to keep counting. This is obviously\n    a great thing — look how much functionality comes built in\n    to Laravel. It does mean, however, that the learning curve is a little\n    bit steep, and a fair bit intimidating. I look forward to a\n    time when I can make better use of some of these powerful features!\n                        </p>\n\n                <p>\n                    Next week we start the week off with a remote day!{\" \"}\n                    <a href=\"https://twitter.com/realDonaldTrump\" title=\"The Donald's Twitter Page\">President Trump</a>{\" \"}\n                    is holing a political rally in the evening, and most of\n                    downtown will be blocked off starting at 2pm. Traffic\n                    will be a nightmare, and because of this we will be working\n                    from home. We will spend the first day or two working through\n                        the rest of the Laracasts, and will then move into the{\" \"}\n                    <a href=\"https://github.com/bootcamp-students/Projects-Exercises/blob/master/docs/projects/laravel-library.md\" title=\"Project Prompt\">Laravel Library</a>{\" \"}\n                    project. Tuesday is election day. I’m looking forward to voting,\n                    and will be excited to see how the election plays out across\n                    the state. Finally, on Tuesday night (9:30pm — remember\n                    my earlier goal about bedtimes?) #2 UK faces off against\n                    #1 Michigan State. I’m very excited for the game — hopefully\n                    it won't be a repeat of last years UK – Duke matchup!\n                        </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek7;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek8() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">Weekly Update</h3>\n\n                <p>\n                    On Monday we worked remote. President Trump held a last minute\n                    rally for the Kentucky Republicans and there was concern about\n                        traffic being congested. On Tuesday, Kentucky{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Andy_Beshear#Governor_of_Kentucky\" title=\"Andy Beshear Wikipedia\">elected a new governor</a>{\" \"}\n                    and UK opened their basketball season by defeating #1 Michigan State.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/trump-rally.JPG\" alt=\"Trump Rally – Pic Credit: Jon Gay\" />\n                    <figcaption className=\"figure-caption text-center\">Dad sent me a picture of the Trump fans gathering — I was at home avoiding the traffic.</figcaption>\n                </figure>\n\n                <p>\n                    Awesome Inc takes ping pong pretty seriously. There is a tournament every year, and\n                    several Inc-ers are highly skilled. I’m trying to get better but still manage to\n                    lose just about every match I play. We played some round robin ping pong this week.\n                    You have to volley and then run around the table to return the shot.\n                    </p>\n\n                <video width=\"100%\" controls>\n                    <source src=\"/blogAssets/video/round-robin-ping-pong.MOV\" type=\"video/mp4\" />\n                    Your browser does not support HTML5 video.\n                      </video>\n                <p>\n                    On Thursday, our informal Bootcamp Lunch Club™ ate at{\" \"}\n                    <a href=\"https://www.sunrisebakeryky.com/\" title=\"Sunrise Bakery Website\">Sunrise Bakery</a>.\n                    They have a cool “make me a sandwich” option, so we all took our chances\n                        with mystery sandwiches. On Friday we had Bootcamp Happy Hour! About 2/3<sup>rds</sup>\n                    of our class met up at <a href=\"http://marikkaslex.com/\" title=\"Marikka's Website\">Marikka’s</a>{\" \"}\n                    for drinks and games. Below is a picture of\n                    Abram beating Taylor and I two-on-one in foosball. On Saturday, Anna and I\n                    went to Sahara. Ethan has been telling me how good their food is all semester. I was\n                    really impressed — their garlic sauce is awesome!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/sunrise-bakery-sweets.JPG\"\n                            alt=\"Sunrise Bakery Sweets\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Sunrise Bakery: Homemade Oreo, Pear Pastry, and Pecan Bar</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/sunrise-bakery-sandwich.JPG\"\n                            alt=\"Sunrise Bakery Sandwich\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\">Sunrise Bakery: The \"make me a sandwich\" option</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/marikkas-foosball.JPG\"\n                            alt=\"Marikka’s(L-R): Taylor, Myself, and Abram playing foosball\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2\"></p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/sahara.JPG\"\n                            alt=\"Sahara Chicken Shawarma\" />\n                        <Carousel.Caption className=\"pb-5\">\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Sahara: Chicken Shawarma — 8/10 spice level</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <br />\n\n                <h3 className=\"text-center\">Bootcamp Update</h3>\n\n                <p>\n                    Last week we continued working on learning Laravel.\n                        I worked through the remaining{\" \"}\n                    <a href=\"https://laracasts.com/series/laravel-6-from-scratch\" title=\"Laravel 6 from Scratch\">Laracast Videos</a>{\" \"}\n                    and then began working on the{\" \"}\n                    <a href=\"https://robbiegay.github.io/react-restaurant/\" title=\"Laravel Library GitHub Repo\">Laravel Library project</a>.\n                    This is the first time that the instructors have assigned this\n                    project, and apparently they didn’t think we could\n                    get it done in the allotted 3 days. On Thursday,\n                    6 of us stuck around the classroom until 8 or 9 pm to\n                    finish in time for Friday Demo Day. There might have\n                    even been a blood oath to not leave until the project\n                    was completed…\n                    </p>\n\n                <p>\n                    I had a lot of fun working on the Laravel Library. I learn\n                    more by doing and after following along with the Laracast Videos\n                    for several days, I was really ready to jump in and start coding!\n                    This project has made me realize that I like Back End. I really enjoy\n                        the problem solving aspect of Back End programming, and found using{\" \"}\n                    <a href=\"https://laracasts.com/series/laravel-6-from-scratch/episodes/30\" title=\"Laracast Video on foreign keys\">foreign keys</a>{\" \"}\n                    to link items between tables really neat.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/laravel-library.png\" alt=\"A screenshot of my Laravel Library project\" />\n                    <figcaption className=\"figure-caption text-center\">The Central Laravel County Public Library homepage</figcaption>\n                </figure>\n\n                <p>\n                    On Thursday we wrapped up the{\" \"}\n                    <a href=\"https://www.hackerrank.com/\" title=\"HackerRank Website\">HackerRank</a>{\" \"}\n                    morning warm-ups &#128533;. I have really enjoyed starting the day with some fast\n                    paced problem solving. Although we now get an extra hour to work on our various projects,\n                    I will miss starting the day like this.\n                    </p>\n\n                <p>\n                    We are officially 2/3<sup>rds</sup> of the way through the Bootcamp! On one hand, it seems\n                    like the time has absolutely flown by. I was a little worried that 16 weeks of daily\n                    programming was going to be hard to get through, but now I can’t believe that it’s\n                    almost over! It’s also hard to believe that in July I knew nothing about programming,\n                    and now I feel comfortable with a (small) laundry list of languages and frameworks:\n                    HTML, CSS, JavaScript, Bootstrap, React, PHP, MySQL, Laravel…\n                    </p>\n\n                <p>\n                    Upon completion of the Bootcamp, I hope to continue refining my knowledge portfolio.\n                    I obviously think that I will learn a great deal at whatever job I land at, but I\n                    also hope to use a 30-60-90 day plan to augment that learning with some work on my\n                    own. A 30-60-90 day plan involves determining what you should be working on now\n                    (your 30-day goal), what you plan on working on next (60-day goal), as well as\n                    looking to the future, and brainstorming what might be on the horizon (90-day goal).\n                    </p>\n\n                <p>\n                    I’m looking forward to this final stretch of the Bootcamp. Although I don’t actually\n                    want it to be over, I am really excited to find a job and starting work as a web developer!\n                    </p>\n\n                <h3 className=\"text-center\">Bonus</h3>\n\n                <p>\n                    This week I learned that I write my alphabet backwards. This is news to me. I had\n                    never paid any attention to how I write letters, and I had assumed that others\n                    write their letters in a similar manner. Midweek, some fellow Bootcampers saw\n                    me writing on the white board, and commented that something seemed a little off.\n                    I ended up writing out the entire alphabet (thankfully I still remember the song).\n                    Apparently my e’s are the worst offender.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid border\" src=\"/blogAssets/img/how-i-write-letters.JPG\" alt=\"Whiteboarding our different calligraphy\" />\n                    <figcaption className=\"figure-caption text-center\">Comparing calligraphy</figcaption>\n                </figure>\n\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek8;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek9() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">Weekly Update</h3>\n                <p>\n                    Lots of fun things happened this week! On Monday, Bootcamp and Brews —\n                    a meet up of past, current, and (potentially) future Bootcamp students —\n                        was held at <a href=\"https://www.westsixth.com/\" title=\"West 6th's Website\">West 6th Brewery</a>.\n        It was a lot of fun, but perhaps the most exciting thing happened as\n        we were leaving: SNOW!!!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/first-snow-kroger.JPG\" alt=\"First snow in the Kroger parking lot\" />\n                    <figcaption className=\"figure-caption text-center\">Our first snow of the year</figcaption>\n                </figure>\n\n                <p>\n                    On Tuesday, Ian and I met up to make some music — stay tuned for the{\" \"}\n                    <a href=\"https://soundcloud.com/robbiegay\" title=\"My SoundCloud Page\">robbiegay</a>{\" \"}\n                    x <a href=\"https://soundcloud.com/whythough\" title=\"Ian's SoundCloud Page\">whythough?</a>{\" \"}\n                    remix. On Thursday, Bootcamp Lunch Club struck again. We went to{\" \"}\n                    <a href=\"http://www.ilovecajun.com/\">Bourbon and Toulouse</a>. I had recently decided to become\n        a pescatarian, so I couldn’t order my usual chicken etouffee. Finally, on Friday, Awesome Inc\n        had a potluck style family lunch. Overall, a lot of good food was eaten this week!\n                    </p>\n\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/music-with-ian.JPG\"\n                            alt=\"Ian and I making music\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Making beats!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bnt-nov-14.JPG\"\n                            alt=\"Food at BnT\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">BnT: Artichoke and Pram, Corn and Black Beans</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bnt-nov-14-group.JPG\"\n                            alt=\"Group shot at BnT\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">L-R: Anna, Sam, Rachael, Ethan, Ian</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/family-lunch-thanksgiving.JPG\"\n                            alt=\"Family lunch at Awesome Inc\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Potluck style family lunch!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    On Friday night, we had our second Bootcamp Happy Hour! We started at{\" \"}\n                    <a href=\"https://www.goodfellaspizzeria.com/\" title=\"Goodfella's Website\">Goodfella’s</a>{\" \"}\n                    for pizza, and then migrated over to the{\" \"}\n                    <a href=\"https://www.theburlky.com/arcade/\" title=\"Burl Arcade Website\">Burl Arcade</a>!\n            Lots of quarters were spent, Anna smoked me in some skee ball, and some very long Uno and giant\n            Jenga games closed out the night.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/bootcamp-burl-happy-hour.JPG\" alt=\"Skee Ball at the Burl Arcade\" />\n                    <figcaption className=\"figure-caption text-center\">Ian and Anna playing Skee Ball</figcaption>\n                </figure>\n\n                <h3 className=\"text-center\">Bootcamp Update</h3>\n\n                <p>\n                    Our project this week was to deconstruct and recreate a popular website.\n                    I selected Instagram, and decided to turn it into{\" \"}\n                    <a href=\"https://github.com/robbiegay/catgram-front-end\" title=\"Catgram Front End Repo\">Catgram</a>!\n            Step one was to break down various components of the site, and to MoSCoW these\n            features. MoSCoW-ing a project involves sorting the proposed features into\n            the categories of: Must have, Should have, Could have, and Won’t have.\n                    </p>\n\n                <p>\n                    Once I had my pseudo code, MoSCoW, and stories completed, I got to work writing\n                    code! This week was a big lesson in project and time management. After spending\n                    Monday pseudo coding, we only had 4 days to finish the project. The first task\n                    on everyone’s plate was to setup our login and logout functionality. I think\n                    that most of us expected this to be a fairly quick process, and therefore budgeted\n                    a lot of time for other stories. By Friday’s Demo Day, very few people had made\n                    it past the login/logout step. Next week we will begin looking at strategies\n                    for budgeting time for various features.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/agile-whiteboard.JPG\" alt=\"Attack of the Clones Order of Ops\" />\n                    <figcaption className=\"figure-caption text-center\">Order of operations for Attack of the Clones. Most people only made it to Auth...</figcaption>\n                </figure>\n\n                <p>\n                    Next week we will start our final project sprint! I am very excited to\n                    hone in on a topic for my final project. I would like to do something\n                    that combines my background in electronic music production with the LAMP\n                    tech stack that we have been learning in the Bootcamp!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek9;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek10() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                {/* <!-- <h3 className=\"text-center\">Heading</h3> --> */}\n                <p>\n                    This blog post brought to you by: a happy girlfriend.\n                    Anna and I went to a UK Basketball game this week and\n                    split a Vanilla cone. Rupp Arena ice cream is the best.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/rupp-ice-cream-nov-2019-blur.png\" alt=\"Rupp Arena Ice Cream\" />\n                    <figcaption className=\"figure-caption text-center\">Vanilla cone — very yummy!</figcaption>\n                </figure>\n\n                <p>\n                    Last week, we began our final sprint of the Bootcamp. We have\n                    two and a half weeks to work on our final projects before class demo\n                    day on Dec. 4th. On Monday, we each began researching and writing\n                    our MVP proposals. For mine, I wanted to combine my background in\n                    music production, with the LAMP tech stack that we have covered\n                    in the Bootcamp.\n                    </p>\n\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/final-project-mvp-cover.png\"\n                            alt=\"MVP Cover Page\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 mb-4 bg-dark rounded\">MVP Cover Page</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/final-project-mvp-intro.png\"\n                            alt=\"MVP Intro\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 mb-4 bg-dark rounded\">MVP Intro</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/final-project-mvp-wireframe.png\"\n                            alt=\"MVP Wireframe\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 mb-4 bg-dark rounded\">MVP Wireframe</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    Our MVP proposal serves to both explain what out project\n                    does, and to map out a road map for the development process (including MoSCoW,\n                    stories, and wireframes). Taking the time to really plan out our\n                    project should hopefully save us a lot of time later on — if\n                    there’s one thing I have learned in the Bootcamp, it is the\n                        dangers of <a href=\"https://en.wikipedia.org/wiki/Cowboy_coding\" title=\"Wikipedia: Cowboy Coding\">cowboy coding</a>.\n                    </p>\n\n                <p>\n                    Despite the detailed planning, I still had to remain pretty flexible\n                    during this first week of development. I planned on onboarding two\n                        frameworks/libraries,{\" \"}\n                    <a href=\"https://tonejs.github.io/\" title=\"Tone.js Homepage\">Tone.js</a>{\" \"}\n                    (for sound) and{\" \"}\n                    <a href=\"https://ptsjs.org/\" title=\"Pts.js Homepage\">Pts.js</a>{\" \"}\n                    (for visuals). The documentation pages for both of these frameworks/libraries\n                    talked about how simple they are to learn, and the example code was\n                    often only 10-15 lines long. Because of this, I had a certain time\n                    expectation for incorporating in these new techs. Nothing ever\n                    goes quite as planned, and it turned out that Pts doesn’t work all\n                        that well with React (I had to download an auxiliary package{\" \"}\n                    <a href=\"https://www.npmjs.com/package/react-pts-canvas\" title=\"NPM: react-pts-canvas\">react-pts-canvas</a>).\n                    I ended up getting the synth to work more quickly than the visuals,\n                    and headed into the weekend with a working synth with basic control parameters.\n                    </p>\n\n                <p>\n                    The first week of our final project sprint had its highs and lows.\n                    I really enjoyed the planning process, and was definitely excited\n                    to get started! It was rewarding to see aspects of the process come\n                    to life, although there were times when things weren't working, and I\n                    ended up with less functioning code than I started the day with. Next\n                    week we will only have 3 class days to work on the project before\n                    breaking for Thanksgiving. I hope to get a lot done by Wednesday,\n                    and to then squeeze some work in over the holiday break!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek10;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek11() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    This past week was week two of our final project sprint.\n                    We had three days to work in class (Mon-Wed), before breaking\n                    for Thanksgiving. Next week we will have two more class days\n                    to work on the final project (Mon and Tue), before presenting\n                    to our classmates on Wednesday, and presenting to the general\n                    public on Thursday! This week I tried to keep a daily log of\n                    what I worked on.\n                    </p>\n\n                <h3>Monday</h3>\n\n                <p>\n                    On Monday, I created a new{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Kanban\" title=\"Wikipedia: Kanban\">kanban</a>{\" \"}\n                    board for the project. Last week made me realize that time will\n                    play an important role in how much I will be able to get done,\n                    and I wanted to map out a project “prototype” — something with\n                    all of the core functionality, that I could then build on as time allowed.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/mpm2-prototype-kanban.png\" alt=\"Prototype Kanban Board\" />\n                    <figcaption className=\"figure-caption text-center\">Prototype Kanban Board</figcaption>\n                </figure>\n\n                <p>\n                    At this point I had a synth with parameter controls, and visuals that DID NOT\n                    yet react to the synth sounds. My synth parameters would store their values in state,\n                    and my first task this week was to try to store these values in my database.\n                    It was pretty straightforward to move the variables themselves, but I quickly\n                    ran into as issue with creating too many API calls. When I would move the\n                    slider once, it would send hundreds of calls to the database. This would\n                    cause a “429 — too many requests\" error. To remedy this, I decided to use\n                    a technique called{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Polling_(computer_science)\" title=\"Wikipedia: Polling\">polling</a>{\" \"}\n                    — basically, checking for updates at regular time\n                    intervals. I found that if I limited myself to one API call per second, I\n                    could mostly avoid 429 errors.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/mpm2-synth-controls.png\"\n                            alt=\"Synth Controls\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Basic synth controls</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/mpm2-synth-and-visualizer.png\"\n                            alt=\"Synth Visualizer\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Synth visualizer and 429 errors</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    My next step was to clean up my code. During the process of adding new\n                    features and trying to fix bugs, I would often “comment out” various\n                    fixes. This allowed me to see what I had tried, what had worked, and\n                    what did not. Now that I had some functioning code, I went through and\n                    deleted unused code, cleaned up existing code, and added explanatory comments.\n                    </p>\n\n                <p>\n                    After lunch (a quick stop at Sahara with Sam and Anna, and a tour of{\" \"}\n                    <a href=\"http://nymbl.healthcare/\" title=\"Nymbl's Website\">Nymbl’s</a>{\" \"}\n                    offices), I still had one more problem I wanted to tackle: I was separating\n                    my synth and synth control components, and knew that they wouldn’t have\n                    any common parents to pass state up to. This meant that I needed some way\n                    to store my Boolean value for triggering synth sounds. One strategy that\n                    I attempted was using{\" \"}\n                    <a href=\"https://reactjs.org/docs/context.html\" title=\"React Documentation: Context\">React context</a>.\n                Context allows you to store values outside of the parent-child tree. This\n                was a new aspect of React to me, so first I had to research this technique,\n                before then attempting to implement it.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/attempting-to-use-context-1-blur.png\"\n                            alt=\"React Context Component\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">React context component</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/attempting-to-use-context-2-blur.png\"\n                            alt=\"Context Provider\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Context Provider: provides the values to all \"consumer\" components</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/attempting-to-use-context-3-blur.png\"\n                            alt=\"Context Consumer\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Context Consumer: subscribes to value changes from the provider</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    After that failed to work, I tried using conditional rendering and then\n                    async functions before finally realizing that I might be able to solve\n                    my problem with a simple line of PHP in the API call. At this point it\n                    was 6pm, and I decided to go home and sleep on the problem.\n                    </p>\n\n                <h3>Tuesday</h3>\n\n                <p>\n                    Overslept my alarm — ended up being late to my workout class :(\n                    </p>\n\n                <p>\n                    Sleeping on my API call problem worked! I got into class this morning and\n                    ended up solving my problem in the first 30 minutes!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/my-php-solution-blur.png\" alt=\"A PHP solution to my passing up state problem\" />\n                    <figcaption className=\"figure-caption text-center\">My PHP solution</figcaption>\n                </figure>\n\n                <p>\n                    I spent most of the day working on getting my visualizer to react to my\n                    synth audio. It would work, but only in very brief flashes. Today\n                    was another fairly frustrating day — as I worked on one problem all\n                    day and found no solutions. I had both Ian and Justin help me, but\n                    since I was using a library (Pts.js) that they weren’t familiar with,\n                    neither of them had much luck. I stayed until 7pm, felt like I made\n                    no progress, and went home feeling a little defeated.\n                    </p>\n\n                <h3>Wednesday</h3>\n\n                <p>\n                    Wednesday was our final day before Thanksgiving break, and our last day\n                    to get hands on feedback from the instructors or our classmates. With\n                    only two days of coding remaining when we get back, it was pretty vital\n                    that we be in a good position when we left on Wednesday. Since I was still\n                    solidly blocked with my visualizer issue, Justin told me that he wanted\n                    me to check in at 3pm — and that if I couldn’t solve it by then, then I\n                    may have to consider pivoting on that aspect of my project.\n                    </p>\n\n                <p>\n                    In the morning, Ian helped me refactor my Synth and Visuals into one\n                    component. We thought that this would be helpful when attempting to\n                    analyze the sound and have the visuals react.\n                    </p>\n\n                <p>\n                    Since time was short, several of us decided to call in a pizza order.\n                    I asked for extra ranch. A good slice of pizza is wasted without some\n                    ranch to dip it in.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/final-project-pizza.JPG\" alt=\"Final project pizza order\" />\n                    <figcaption className=\"figure-caption text-center\">Pizza (and ranch!!!)</figcaption>\n                </figure>\n\n                <p>\n                    After lunch, I again worked with Ian in an attempt to fix my visualizer\n                    problem. Ian was leaving for Denver at 2pm, so time was pretty short.\n                    Ian had worked with me throughout the morning, and was now fairly familiar\n                    with Pts.js — this meant that his feedback was likely my last shot at\n                    completing this aspect of my project. As 2pm rolled around, we were\n                    both feeling pretty dejected — we had tried a whole host of fixes for\n                    the problem, but so far, nothing was working.\n                    </p>\n\n                <p>\n                    After Ian left, I went out and laid on the couch in the hallway.\n                    I wanted a break from my code, and, as often happens, this gave\n                    my mind a chance to approach the problem from a different angle.\n                    I realized that we had several parts working independently,\n                    and that there seemed to be no reason why we shouldn’t be able\n                    to combine these to get a functioning visualizer. I went back to\n                    our workroom, grabbed my laptop, and  sequestered myself in a side\n                    office to make one last attempt at fixing my code.\n                    </p>\n\n                <p>\n                    I pulled up two different, partially working versions of the code. I began\n                    by commenting things out, section by section, trying to figure out what\n                    was breaking my visualizer. Finally, around 2:45, I commented out a small\n                    “if statement”, and suddenly the visualizer worked! It seems that we had\n                    left some code from a previous fix in our new version, and that it had\n                    been breaking everything else. Needless to say, I was pretty excited about\n                    getting my visualizer to work. I had been pretty bummed about the idea of\n                    giving up on this aspect of my project.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/the-code-that-broke-my-visualizer-blur.png\" alt=\"The code that was breaking my visualizer\" />\n                    <figcaption className=\"figure-caption text-center\">The offending code</figcaption>\n                </figure>\n\n                <p>\n                    Fixing that issue completed my prototype build. I spent the next few hours\n                    adding additional styling, creating a kanban board for build 2, and cleaning\n                    up my code before finally heading out for the holiday weekend!\n                    </p>\n\n                <h3>Thursday</h3>\n\n                <p>\n                    I have a pretty large extended family in the Central Kentucky area, so\n                    everyone converged on my parents house for a Thanksgiving feast! I’ll\n                    let the pictures do the talking — I did not do much coding today.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-4-group-blur.png\"\n                            alt=\"Family Thanksgiving\" />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-3-all-the-food.JPG\"\n                            alt=\"All the food\" />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-2-food-plate.JPG\"\n                            alt=\"My plate\" />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-1-group.jpg\"\n                            alt=\"Everyone eating\" />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-5-group.jpg\"\n                            alt=\"More family\" />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/thanksgiving-6-giving-good-boys-treats-blur.png\"\n                            alt=\"Giving Hudson and Zima some treats\" />\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3>The Weekend</h3>\n\n                <p>\n                    I managed to work some more on my code over the weekend (as well as catching up\n                    on week 10 and week 11’s blog posts). I mostly worked on some small features,\n                    and planned out what major features I would start tackling on Monday. Some of\n                    the features that I added: fixing the polling bounce issue, adding controls\n                    for manipulating the visualizer, and figuring out how to set an EQ range.\n                    </p>\n\n                <h3>Final Project: Week 2 Reflection</h3>\n\n                <p>\n                    I wanted to end this blog post with a few things that I have leaned so\n                    far while working on this project.\n                    </p>\n\n                <p>\n                    The low hanging fruit would be the new technologies that I have on boarded:{\" \"}\n                    <a href=\"https://tonejs.github.io/\" title=\"Tone.js Homepage\">Tone.js</a> and{\" \"}\n                    <a href=\"https://ptsjs.org/\" title=\"Pts.js Homepage\">Pts.js</a>. While learning specific frameworks and libraries is\n                important, as a beginner developer, the important lessons that I think I\n                have learned are project management and pragmatic problem solving skills.\n                    </p>\n\n                <p>\n                    This was the first project where we have designed everything from the\n                    ground up. My initial MVP designated story (task) difficulty using a\n                    point system. A one point story was easy, while an eight point story\n                    could be really really hard. Once I started coding, I found that many\n                    tasks had unexpected components that made them harder than expected.\n                    Within a few days of working on my project, I had to start “pruning”\n                    my stories — prioritizing the most essential stories, and reassigning\n                    point values once I realized the full magnitude of each task.\n                    </p>\n\n                <p>\n                    I have also learned some new strategies for dealing with problems as they\n                        arise. When importing an element (for example, <code>PtsCanvas</code>), you\n                    can right click in{\" \"}\n                    <a href=\"https://code.visualstudio.com/\" title=\"VSCode Website\">VSCode</a> and\n                select “go to definition” to find out how that component is defined. Reading\n                the meaning behind these higher level abstractions can really help you figure\n                out what is going wrong and why.\n                    </p>\n\n                <p>\n                    A second strategy that I learned was to build test code, something much\n                    simpler than the project you are working on. This test code’s only job\n                    is to test out a key piece of functionality which you do not yet understand.\n                    </p>\n\n                <p>\n                    A third technique that I learned is to compare my code to examples used\n                    in the package documentation. When I was struggling to get Pts.js to work,\n                    I looked up some of their example projects that were doing something\n                    similar (sound frequency analyzation). I went through their code line\n                    by line, commenting things out and changing variable values to get a\n                    better understanding of what code controls what aspect of the project.\n                    </p>\n\n                <p>\n                    And finally, a fourth problem solving technique that I used was to go to\n                    others for help. When asking an instructor or classmate, I would write\n                    down what my specific problem was, make a list of what I have done to\n                    try to solve it, and list out what my theories are regarding why the code\n                    does not work. I found that this helped them better understand my problem,\n                    and quickly orient themselves in my code.\n                    </p>\n\n                <p>\n                    I’m hoping to use these new project management and problem solving skills\n                    in my future software endeavors!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek11;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction BCWeek12() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    Demo day! After 4 weeks of prework and 12 weeks of full-time Bootcamp,\n                    everything culminated in the presentation of our final projects on Demo Day!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/demo-day-audience-my-speech.jpg\"\n                        alt=\"Robbie presenting MPM2\" />\n                    <figcaption className=\"figure-caption text-center\">\n                        Yours truly giving his presentation at Demo Day\n                        </figcaption>\n                </figure>\n\n                <p>\n                    Our final week was structured like this:\n                        <ol>\n                        <li>\n                            <span className=\"text-danger\">Monday & Tuesday</span>: Final days of coding.\n                            </li>\n                        <li>\n                            <span className=\"text-warning\">Wednesday</span>: 10:30am code freeze. Work on README's and\n                            prepare Demo Day presentations.\n                            </li>\n                        <li>\n                            <span className=\"text-success\">Thursday</span>: Final dress rehearsal in the morning. Demo\n                            Day reception at 11:30am.\n                            Introductory speeches at Noon. Open house until 1pm.\n                            </li>\n                        <li>\n                            <span className=\"text-primary\">Friday</span>: Retro and feedback.{\" \"}\n                            <a href=\"https://breakoutgames.com/lexington\" title=\"Breakout Games Website\">Breakout Games</a>{\" \"}\n                            after lunch. Evening:\n                                Bootcamp Graduation party at{\" \"}\n                            <a href=\"https://newtonsattic.com/index.php\" title=\"Newton's Attic Website\">Newton's Attic</a>.\n                            </li>\n                    </ol>\n                </p>\n\n                <h3>Final Days of Coding</h3>\n\n                <p>\n                    Monday and Tuesday were our final days of coding. The stress levels in the room seemed\n                    noticeably lower than at the end of week 11. At the end of week 11, many of us were still trying\n                    to implement new stories, and the time crunch was bearing down on us. By Monday of week 12, if\n                    we had not yet started a new story, it was likely that that story would now be pushed to a future\n                    sprint. We were now in the process of polishing up our code and making small improvements.\n                    </p>\n\n                <p>\n                    Most of my major stories got wrapped up the previous Friday. The final major story that I was\n                    attempting to implement was a timer function to kick inactive users out of the queue. I got\n                    about halfway done Monday evening before determining that this was unlikely to get done this\n                    sprint, and added it to my features list for next sprint!\n                    </p>\n\n                <p>\n                    On Tuesday, I set about tackling my Google Cloud hosting problem. For some reason, Google Cloud\n                    did not like the fact that I used both React and Laravel in one project file. After attempting to\n                    debug this with both Justin and Ian, and with time now running dangerously low, I decided that this\n                    build would have to be run locally, and went about the process of hosting my app from my IP address.\n                    Once I got my site hosted locally\n                    (I implemented it fully sometime Tuesday afternoon), I spent my remaining time testing for bugs\n                    and bringing my code up to production standards.\n                    </p>\n\n                <h3>Demo Day Prep</h3>\n\n                <p>\n                    Our code freeze was at 10:30am Wednesday morning. Now that I had a demo-able project, I set about\n                        writing a blog post for the week and a <a>README</a> for MPM<sup>2</sup>. I then began\n                    drafting my speech for our two-minute introduction presentations. We did several rehearsals — and\n                    critiques — on Wednesday, and a final dress rehearsal on Thursday morning.\n                    </p>\n\n                <h3>Demo Day</h3>\n\n                <p>\n                    Around 10am, we went down and began setting up our booths. I borrowed some external speakers to\n                    play my\n                    synth sounds, and set up an external monitor for the visuals. I found that, although the app\n                    worked locally\n                    and could be run on a user's phone, it was much more stable on desktop versions. As such, Ian\n                    offered to let\n                    me use his laptop to demo the user experience. On Ian's laptop, users could control the various\n                    synth and visual parameters. On my laptop, I had the source code and MySQL database, as\n                    well as my blog\n                    and LinkedIn pages available for users to peruse. I also set up a contact sheet, laid out some resumes, and\n                    posted my name on the table!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/demo-day-booth.JPG\" alt=\"MPM2 Demo Day Booth\" />\n                    <figcaption className=\"figure-caption text-center\">Ready for Demo Day!</figcaption>\n                </figure>\n\n                <p>\n                    Around 11:30am, the guests started to arrive! We then mingled and talked with friends and family\n                    for\n                    about 30 minutes. Waiting was making me a little anxious, so I was glad when the instructors\n                    began\n                    their presentations around noon. Nick, Justin, and Ian all talked about the Bootcamp and\n                    our final project development process. After they were done speaking, we each had two minutes to\n                    introduce ourselves and to talk about our projects.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/demo-day-instructors.JPG\"\n                            alt=\"Justin, Ian, and Josh\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Lead instructor Justin talking about\n                                        the Bootcamp</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/demo-day-audience-2.jpg\"\n                            alt=\"Demo Day Audience\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">The audience — ready for some Demo Day\n                                        fun!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/demo-day-robbie-presenting.jpg\"\n                            alt=\"My presentation speech\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Explaining MPM2</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    For my presentation, I talked about my background in{\" \"}\n                    <a href=\"spotify:album:3izLLRwlc66KiLs3M6P4wk\" title=\"My single 'Wake'\">music making</a>, my intention of\n                    combining this passion with our tech stack for the final project, and finally how\n                        MPM<sup>2</sup> worked.\n                    I even had two jokes planned for my speech — one about how I cut off all my long hair, and\n                    another about\n                    the value of my project (none — it's art). They were both received well — but don't worry, no\n                    plans to\n                    go into stand up comedy anytime soon.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/demo-day-booth-talking.jpg\"\n                            alt=\"Talking at my Demo Day booth\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Talking with Wendy Trivisonno about MPM2</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/demo-day-fans.JPG\" alt=\"Demo day booth\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">My Demo Day fans — Back L-R: Martha, Judi, Bob, Jon\n                                        Front: Anna</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    After presenting, we had about an hour of open booths. I got to showcase MPM<sup>2</sup> to\n                    several groups of people, and many of them managed to make some rather interesting sounds and visuals!\n                    It was really fun getting to talk about a project that had consumed so much of my time for the last 3 weeks.\n                    I also got some really interesting feedback and advice on where to take the project next!\n                    </p>\n\n                <h3>Post Demo Day</h3>\n\n                <p>\n                    After Demo Day wrapped up, we all went across the street to{\" \"}\n                    <a href=\"https://www.eastendtapandtable.com/\" title=\"EE T&T Website\">East End Tap and Table</a>{\" \"}\n                    for a celebratory meal. Still staying true to my new Pescetarian lifestyle, I ordered the\n                    tofu siam-wich. It was really good!\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/demo-day-food.JPG\" alt=\"My food\" />\n                    <figcaption className=\"figure-caption text-center\">Tofu siam-wich at East End Tap and Table</figcaption>\n                </figure>\n\n                <p>\n                    It feels a little strange that the Bootcamp is over. At the start, 16 weeks seemed\n                    like a really long time — yet it mostly flew by. I really enjoyed the projects we\n                    worked on, and the occasional ping pong or melee match definitely added to the overall fun. I'm\n                    really excited to continue updating this blog, and to keep you in the loop as I kick my job hunt\n                    into high gear!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default BCWeek12;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction JHWeek1() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">The End of Bootcamp</h3>\n                <p>\n                    Friday was our final day of in-person Bootcamp. Since we were wrapping\n                    things up, we had a soft start of 10am. We had one-on-ones: Ian and Justin\n                    meet with us individually to give us feedback on how we did in the course. This was also an opportunity for us to give them feedback\n                    on how we think the course could be improved.\n                    </p>\n\n                <p>\n                    After one-on-ones, we did a group retro, talked about next steps (here’s a link to our official{\" \"}\n                    <a href=\"https://docs.google.com/document/d/1bkCGpWru2tmJxA-8CEYX0Y479EYc9njGC163c-LWgGE/\"\n                        title=\"F19 Next Steps\">next step document</a>), and then went to{\" \"}\n                    <a href=\"https://breakoutgames.com/lexington\" title=\"Breakout Games — Lexington\">Breakout\n                            Games</a>!\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bog-team-1.JPG\"\n                            alt=\"Breakout Games Team 1\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">L-R: Nick, Michael, Taylor, Todd,\n                                        Ethan, Robbie, Justin</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/bog-team-2.JPG\"\n                            alt=\"Breakout Games Team 2\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">L-R: David, Ian, Abram, Will, Sam,\n                                        Eric, Rachael</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <p>\n                    Our team consisted of: Nick, Michael, Taylor, Todd, Ethan, myself, and Justin. Our scenario to solve:\n                    we were detectives trying to stop the evil syndicate from blowing up the city’s water supply. It was\n                    really fun! We managed to escape with 12 minutes to spare, while team 2 took things down to the\n                    wire!\n                    </p>\n\n                <p>\n                    That evening we had a graduation party at Newton’s Attic on Versailles Rd.{\" \"}\n                    <a href=\"https://newtonsattic.com/index.php\" title=\"Newton's Attic Website\">Newton's Attic</a>{\" \"}\n                    is an engineering camp for kids, and there was a lot to do: cool robots, VR headsets,\n                    a woodworking shop, as well as ping pong, foosball and other games. It was a\n                    really fun place to hangout, and a great way to end part 1 of the Bootcamp.\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/newtons-vr.JPG\" alt=\"Newton's Attic VR\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Playing Beat Saber (VR) at Newton's\n                                        Attic</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/newtons-spinner-blur.png\"\n                            alt=\"Spinner at Newton's Attic\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Sam having \"fun\" in the spinning\n                                        machine</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">The Job Hunt</h3>\n\n                <p>\n                    Now that we have completed the in-person segment of the Bootcamp, we will be starting\n                    part 2: the job hunt. Awesome Inc’s Bootcamp comes with a job guarantee: find a web\n                    developer job in 6 months or they will refund your tuition.\n                    </p>\n\n                <p>\n                    In order to maintain good standing for this job guarantee, we have to complete several requirements:\n                        <ul>\n                        <li>Apply for at least 1 job per week</li>\n                        <li>Make 5 relevant GitHub commits each week</li>\n                        <li>Post at least 1 new blog entry, focused on a technical topic, each month</li>\n                        <li>Share with Awesome Inc any job offer received</li>\n                        <li>Be available, if invited, for at least 1 job interview per week</li>\n                        <li>Be available for at least 1 meeting per week with Awesome Inc career services</li>\n                    </ul>\n                    I view these less as requirements to fulfill the job guarantee, and more\n                    as something we should already be doing in our attempt to find a job.\n                    </p>\n\n                <h3 className=\"text-center\">Job Hunt Update</h3>\n\n                <p>\n                    I actually began my job hunt back in mid-October, and had applied to 6 jobs by the time the Bootcamp\n                    ended. In the past week, I added 6 more to my list of applications, and followed\n                    up with 2 other jobs. I interviewed for one position last week, and have another interviewed\n                    scheduled for next week. That’s not to imply that things are all sunshine and rainbows — I’ve\n                    heard “no” from 5 places, including the one I interviewed for last week.\n                    </p>\n\n                <p>\n                    In addition to applying for jobs last week:\n                        <ul>\n                        <li>\n                            I started up my old side hustles: digitizing a large collection of 35mm slides (from the\n                            1960’s — very cool to see them come to life) and working as a property manager for some\n                            commercial and residential properties in Versailles.\n                            </li>\n                        <li>\n                            Created <a href=\"https://www.indeed.com/\">Indeed.com</a> and <a href=\"https://angel.co/\">AngelList</a>{\" \"}\n                            accounts, updated my LinkedIn and Resume, and combed\n                            the internet for local software developer jobs.\n                            </li>\n                        <li>\n                            Create an <a href=\"https://www.upwork.com/\">UpWork</a> account — just in case the job search drags on and I need to try to\n                            pick up extra income doing freelance development work.\n                            </li>\n                        <li>\n                            Started reading \"<a\n                                href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"\n                                title=\"Pragmatic Programmer Website\">The Pragmatic Programmer</a>\" — a book we talked about\n                            in class, and that I am excited to work through.\n                            </li>\n                    </ul>\n                </p>\n\n                <h3 className=\"text-center\">What's Next?</h3>\n\n                <p>\n                    More job hunting — as well as working to continue to grow as a developer. I’ve been\n                    working to put together a 30-60-90 day plan, selecting various technologies that\n                    I hope to onboard over the next 3 months.\n                    </p>\n\n                <p>\n                    This plan is mostly hypothetical, as once I find a job, I will place the 30-60-90 day plan\n                    on hold to learn their tech stack as thoroughly as possible.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/30-60-90-plan.png\"\n                        alt=\"An image of my 30-60-90 day plan\" />\n                    <figcaption className=\"figure-caption text-center\">My 30-60-90 day plan</figcaption>\n                </figure>\n\n                <p>\n                    First on my list of things to learns is{\" \"}\n                    <a href=\"https://sass-lang.com/\" title=\"SASS Website\">SASS</a> and{\" \"}\n                    <a href=\"https://jquery.com/\" title=\"jQuery Website\">jQuery</a>. Of the technologies that the\n                    job I am interviewing for next week uses, these are the only two that I am unfamiliar with.\n                    I read through some documentation for SASS on Friday, and am working through the jQuery\n                    documentation\n                    today (Sunday). Though it is doubtful that I will be able to claim proficiency in either technology by\n                    Tuesday, it\n                    is my hope to develop a basic understanding of both, and to be all the better prepared for the interview.\n                    </p>\n\n                <p>\n                    Although I do hope to land a job as soon as possible, I love teaching myself new things, and\n                    creating my 30-60-90 day plan has made me excited for this stage of the process!\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default JHWeek1;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction JHWeek4() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    I apologize for the short blog post — it’s 7:15pm on New Years Eve, and\n                    I’m hoping to post a final blog post of the decade.\n                    </p>\n\n                <h3 className=\"text-center\">Reviewing React</h3>\n\n                <p>\n                    I’ve spent the last few days working through some React documentation. First,\n                        I went through the <a href=\"https://reactjs.org/docs/hello-world.html\" title=\"React Docs: Main Concepts\">Main Concepts</a>{\" \"}\n                    section in order to reinforce the basic concepts that I learned in the Bootcamp.\n                    </p>\n\n                <p>\n                    I then skimmed through the advanced topics: I learned how you can use{\" \"}\n                    <a href=\"https://reactjs.org/docs/context.html\" title=\"React Docs: Context\">context</a>{\" \"}\n                    to pass data through the component tree without passing props down through component after component.\n                        I learned about using <a href=\"https://reactjs.org/docs/fragments.html\" title=\"React Docs: Fragments\">fragments</a>{\" \"}\n                    to embed multiplied elements without adding nodes to the DOM (as well as a useful <code><> </></code>\n                    shortcuts for fragments). I read about{\" \"}\n                    <a href=\"https://reactjs.org/docs/static-type-checking.html\" title=\"React Docs: Static Type Checking\">Flow</a>,\n                    a static type checker for React, and\n                    I am considering using in in future React projects. Many of the remaining advanced articles seemed to\n                    answer questions/problems that I hadn’t yet encountered, and as such seemed like they would be better\n                    left for a future learning session.\n                    </p>\n\n                <p>\n                    What I was most excited to learn about was React{\" \"}\n                    <a href=\"https://reactjs.org/docs/hooks-intro.html\" title=\"React Docs: Hooks\">Hooks</a>.\n                        Hooks allow you to “hook into” React{\" \"}\n                    <a href=\"https://reactjs.org/docs/state-and-lifecycle.html\" title=\"React Docs: State and Lifecycle\">state and lifecycle</a>{\" \"}\n                    features from function components. Hooks allow you to use React without creating classes.\n                        React comes with two useful, built-in hooks: <code>useState</code> and <code>useEffect</code>.\n                    </p>\n\n                <h3 className=\"text-center\">Hooks and State</h3>\n\n                <p>\n                    The <code>useState</code> hook allows you to use state in a React function component.\n                    </p>\n\n                <p>\n                    First you need to import <code>useState</code>:\n                    </p>\n\n                <p>\n                    <code>import React, &#123; useState &#125; from 'react';</code>\n                </p>\n\n                <p>\n                    You create an instance of the <code>useState</code> hook like this:\n                    </p>\n\n                <p>\n                    <code>const [count, setCount] = useState(0);</code>\n                </p>\n\n                <p>\n                    The first item in your array, <code>count</code>, is the name of your state variable.\n                        The second item, <code>setCount</code> is the method for updating that state. You then set this\n                        array equal to the <code>useState</code> hook. <code>useState</code> accepts one parameter,\n                    the initial value of the state. This could be a number, string, array, etc.\n                    </p>\n\n                <p>\n                    Here is an example using the code snippets above to create a button that updates the user on how\n                    many times it is clicked.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/hooks-example.png\" alt=\"React hooks example code\" />\n                    <figcaption className=\"figure-caption text-center\">An example of the useState hook</figcaption>\n                </figure>\n\n                <h3 className=\"text-center\">Hooks and Lifecycle</h3>\n\n                <p>\n                    React has several different lifecycle components.\n                        Things like <code>componentDidMount</code>, <code>componentDidUpdate</code>, and{\" \"}\n                    <code>componentWillUnmount</code>. You can access these lifecycle components with\n                    hooks by using the useEffect hook.\n                    </p>\n\n                <p>\n                    Below is some example code that uses <code>useEffect</code> to update the browser\n                        window. This is similar to the way that you would use <code>componentDidUpdate</code>{\" \"}\n                    if using a React class.\n                    </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/useeffect-example.png\" alt=\"React useEffect example code\" />\n                    <figcaption className=\"figure-caption text-center\">An example of the useEffect hook</figcaption>\n                </figure>\n\n                <h3 className=\"text-center\">Closing Thoughts</h3>\n\n                <p>\n                    It’s now almost 8:30pm. I’ve got to go get ready to ring in the new year, and new decade.\n                    I’m celebrating in Versailles tonight, with my girlfriend (Anna) and my parents. Anna\n                    and I recently moved into a house in Versailles and are excited to start 2020 in the\n                    new space. It is a little bit wild that the 2010’s are over. This past decade:\n                        <ul>\n                        <li>Graduated High School (2011)</li>\n                        <li>Watched UK Basketball win a National Championship (2012)</li>\n                        <li>Spent my freshman year at Furman University — studied abroad in Japan (2011-12)</li>\n                        <li>Spent 4 years at Centre College — Studied abroad in Uganda and Rwanda (2012-16)</li>\n                        <li>Spent 3 years as an artist, musician, photographer, and filmmaker (2016-19)</li>\n                        <li>Completed the Awesome Inc Web Developer's Bootcamp (2019)</li>\n                    </ul>\n                </p>\n\n                <p>I'm excited to see what the 2020's will hold!</p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default JHWeek4;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction January2020() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <h3 className=\"text-center\">Monthly Update</h3>\n\n                <p>\n                    This past month, Anna and I adopted two cats, I played my first game\n                    of disc golf (and fell in the mud), we visited friends and family in\n                    Louisville, we made homemade pizza, and I hit some January resolutions\n                    (but not others).\n                    </p>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/poppy-and-waffles-blur.png\"\n                            alt=\"Picture of the cats\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Waffles (front) and Poppy</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/first-game-of-disc-golf-blur.png\"\n                            alt=\"A muddy picture of me\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">After I fell in the mud. Note my superb taste in functional eyewear</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/lou-aja-jenga-blur.png\"\n                            alt=\"A picture of Aja\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Aja playing giant Jenga at Mile Wide Brewery</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/lou-robbie-anna-ricky-larry.JPG\"\n                            alt=\"A picture of Aja\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">L-R: Robbie, Anna, Ricky, Larry. Visiting my great Uncle in Louisville.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/baking-pizza-at-ians-blur.png\"\n                            alt=\"A picture of our pizzas\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Baking pizzas at Ian and Olivia's house</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/music-studio.JPG\"\n                            alt=\"A picture of my home music studio\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">I finally got my home music studio decorated. I made it half the month on my piano practice resolution.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <h3 className=\"text-center\">The Job Hunt</h3>\n\n                <p>\n                    Around Jan 15th, I started doing freelance iOS development for{\" \"}\n                    <a href=\"https://warnerdesigntechnology.com/\" title=\"Tommy's website\">Tommy Warner</a>.\nTommy previously worked as a physics teacher at Lafayette High School for 6 years, during which\n    time he taught himself to write software and started taking on clients through{\" \"}\n                    <a href=\"https://www.upwork.com/\" title=\"UpWork's website\">UpWork</a>.\nAfter the 2018-19 school year, Tommy was able to step away from teaching and pursue\nfreelancing full-time. Tommy told me that he had gotten to the point where he\nwas having to turn away clients because he was too busy,\n    and was therefore hoping to hire someone part-time to help write some{\" \"}\n                    <a href=\"https://swift.org/\" title=\"Swift documentation\">Swift</a> code.\n                    </p>\n\n                <p>\n                    Switching gears from web to mobile development presented some challenges.\n                    During the Bootcamp, we slowly ramped up from the most basic to more advanced\n                    apps. This meant that I usually got a fairly solid grip on a concept before\n                    adding something new. Working with Tommy, I had to jump into the middle of a\n                    project and I felt as though I was confused as to what was going on\n                    outside of the small scope of my current work.\n                    </p>\n\n                <p>\n                    To help remedy this, I spent some time last weekend and this week reading\n                    through the Swift documentation and taking notes. In addition to note taking,{\" \"}\n                    <a href=\"https://developer.apple.com/xcode/\" title=\"Xcode website\">Xcode</a>{\" \"}\n                    also has a cool playground feature that allows you to write code and see\n                    instant results — this allowed me to apply new concepts as I was learning them.\n                    </p>\n\n                <p>\n                    This past week I built my first personal app, a calculator! I was really excited\n                    to build something that I could run on my phone. While web development seemed\n                    challenging, there are online website builders and it didn’t seem impossible\n                    to build my own website, even prior to the Bootcamp. App development,\n                    however, had a certain magical quality and I was really excited to build\n                    something that I could run on my phone.\n                    </p>\n                <div className=\"text-center\">\n                    <figure className=\"figure\" style={{ maxWidth: \"50%\" }}>\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/calculator-demo.gif\" alt=\"A demo gif of my calculator app\" />\n                        <figcaption className=\"figure-caption text-center\">My calculator app!</figcaption>\n                    </figure>\n                </div>\n\n                <p>\n                    We built a calculator app in the Bootcamp, so this project mostly involved\n                    refactoring my old code over from JavaScript to Swift. Even so, there were\n                    some problems\n                        (mostly <a href=\"https://en.wikipedia.org/wiki/Don't_repeat_yourself\" title=\"DRY Code — Wikipedia page\">WET code</a>)\nthat I was able to address in this build.\nI was also pretty happy with the retro color scheme. Since almost everyone\nhas a calculator on their phone, I also added an Easter Egg — Party Mode — that can\n                        be accessed by inputting my birthday: “32193” (March 21<sup>st</sup>, 1993).\n                    </p>\n\n                <h3 className=\"text-center\">Swift vs JavaScript</h3>\n\n                <p>\n                    I wanted to end this post with my thoughts on some key differences\n                    between Swift and JavaScript. Swift is for native iOS projects,\n                    and is based on{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Objective-C\" title=\"Objective-C Wikipedia page\">Objective-C</a>.\nBelow are some key differences that I found:\n                    </p>\n\n                <ul>\n                    <li>\n                        Swift doesn't require <code>;</code> to end each line — they are optional, and\n                        can be used to separate two short clauses on the same line,\n                        </li>\n                    <li>\n                        <code>()</code> are also optional around things like <code>if</code> statements\n                        </li>\n                    <li>\n                        In JavaScript, you use <code>const</code> to declare a{\" \"}\n                        <a href=\"https://en.wikipedia.org/wiki/Constant_(computer_programming)\" title=\"Constant — Wikipedia Page\">constant</a> and{\" \"}\n                        <code>let</code> or <code>var</code> to declare a{\" \"}\n                        <a href=\"https://en.wikipedia.org/wiki/Variable_(computer_science)\" title=\"Variable — Wikipedia page\">variable</a>.\n                            In Swift, you use <code>let</code> to declare a constant and <code>var</code> to declare a variable.\n                        </li>\n                    <li>\n                        Functions are written a little differently in Swift: <code>func funcName(argumentName parameterName: String) -> String &#123; func code &#125;</code>.\n                            <ul>\n                            <li>\n                                To declare a function, you use <code>func</code> instead of <code>function</code>.\n                                </li>\n                            <li>\n                                The function's name is similar to JavaScript -> <code>funcName</code>.\n                                </li>\n                            <li>\n                                You can define the function's parameters one of two ways: named or unnamed. Named parameters have\n                                    an argument name that comes first. In the above example, this means that when we call <code>funcName</code> we would need to\n                                    specify the name of each parameter we give it: <code>funcName(argumentName: \"Some value\")</code>. The{\" \"}\n                                <code>parameterName</code> is the value used within the body of the function.\n                                </li>\n                            <li>\n                                After the argument and parameter names you see <code>: String</code>. This is another interesting difference\n                                between Swift and JavaScript. You declare variable types using a semicolon followed by the variable type (things like:{\" \"}\n                                <code>String</code>, <code>Int</code>, <code>Double</code>, <code>Bool</code>, <code>Array</code>, or <code>Any</code>).\n            Here we are declaring that the parameter type supplied will be a String.\n                                </li>\n                            <li>\n                                Finally, after the parameters, we see <code>-> String</code>. This specifies a return type. Functions in Swift\n                                can either be Void or return a single value (of which you could combine several values in a single, compound{\" \"}\n                                <a href=\"https://en.wikipedia.org/wiki/Tuple\" title=\"Tuple — Wikipedia page\">tuple</a>). Here we are specifying that\n            our function will return a String value.\n                                </li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <h3 className=\"text-center\">Reflection</h3>\n\n                <p>\n                    I've really enjoyed learning Swift and like both building apps and freelancing in general.\n                    That said, I am still continuing my job hunt and have been sending out applications every week.\n                    For now, I plan on continuing to make more apps, both for clients and myself.\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />\n\n            </article >\n        </>\n    );\n}\n\nexport default January2020;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction February2020() {\n    return (\n        <>\n            {/* <!-- Main Text --> */}\n            <article className=\"text-justify\">\n\n                <p>\n                    Happy Leap day! If today is your birthday, congrats on having an\n                    age on paper that is 1/4th of the age you actually feel. :)\n                    </p>\n\n                <h3 className=\"text-center\">Design</h3>\n\n                <p>\n                    For the past few weeks, I have been reading{\" \"}\n                    <a href=\"https://www.penguin.co.uk/books/110/1107939/user-friendly/9780753556641.html\" title=\"User Friendly Book Publisher's Page\">”User Friendly: How the Hidden Rules of Design Are Changing the Way We Live, Work, and Play”</a>{\" \"}\n                    by Cliff Kuang and Robert Fabricant. Sometimes I think that design\n                    is looked at as the least important of a developer’s skill set.\n                    Backend is typically seen as more complex, and is usually more highly\n                    compensated. Kuang and Fabricant’s book has had me thinking a lot\n                    this month about the importance of design.\n                    </p>\n\n                <p>\n                    The first thing that I found interesting is the story of{\" \"}\n                    <a href=\"https://en.wikipedia.org/wiki/Apple_Inc.\" title=\"Apple, Inc Wikipedia\">Apple</a>.\n                    When Apple began its rise to world dominance, I was still too young to be\n                    a heavy computer user. It’s interesting because when I say “too young”\n                    I was actually much older than the age that many children today surf\n                    the web and watch Jake Paul vlogs. The difference is that before Apple\n                    ushered in the age of user friendly devices, children did not use computers\n                    at nearly the rate they do today. Since I was too young to really use a\n                    computer before Apple became prominent, I did not really understand the\n                    context in which Apple began making hardware.\n                    </p>\n\n                <p>\n                    Before Apple, computers were powerful machines that required specialized\n                    knowledge to use. They came with large, densely worded manuals, and despite\n                    the fact that they could do many tasks better than old methods, their\n                    difficulty of use prevented them from being nearly as prevalent as they\n                    are today. Apple’s designers strove to create user interfaces that lessened\n                    the difficulty of taking a task from an idea in your head --> to the\n                    interaction with the computer --> to the desired result. The iPhone and\n                    the ability to physically touch and drag objects around the screen really\n                    embodies this ease of use. To move down a page you simply drag down, just\n                    as you would drag a piece of physical paper across a table if you wanted to\n                    move it downward. Apple helped revolutionize the world of intuitive computing.\n                    </p>\n\n                <p>\n                    One aspect that “User Friendly” has had me thinking about is the difference between\n                    UI and UX. UI and UX are often grouped together as UI/UX, and it wasn’t until recently\n                    that I started thinking about their differences. UI stands for User Interface, and I\n                    think this is what most people think about when they imagine a designer. UI includes\n                    aspects such as color, layout, and aesthetics. UX stands for User Experience, and may\n                    have very little to do with visual design, but rather with how a human interacts with\n                    an object. UX involves thinking about how a designer can help make using a device as\n                    intuitive as possible. UI and UX can be completely independent of each other. Imagine\n                    you download an app with great UI: the colors are beautiful, there are tons of animations\n                    when you interact with the screen, etc. Now imagine that you start interacting with the\n                    app. You want to move an object from the bottom to the top of the screen. Instinctively,\n                    you click and drag. Nothing happens. Finally, you realize if you tap on the object, a\n                    menu appears. In that menu,  hidden at the bottom of a scrollable list of 20 options,\n                    you finally see “Move”. You tap “Move”, and are taken to a new screen where you are\n                    asked to enter X and Y coordinates for the desired location of the object. Talk about\n                    bad UX. I’m sure you can also imagine a case when an app with minimal User Interface,\n                    could have a great, intuitive User Experience.\n                    </p>\n\n                <p>\n                    For more information on UI and UX, I recommend reading{\" \"}\n                    <a href=\"https://www.penguin.co.uk/books/110/1107939/user-friendly/9780753556641.html\" title=\"User Friendly Book Publisher's Page\">“User Friendly”</a>,\n                        or to check out some of Apple’s documentation on{\" \"}\n                    <a href=\"https://developer.apple.com/design/human-interface-guidelines/\" title=\"Apple's Human Interface Guidelines\">Human Design Interface Guidelines</a>.\n                    </p>\n\n                {/* <!-- White space --> */}\n                <br /><br /><br /><br /><br /><br /><br /><br />\n\n            </article>\n        </>\n    );\n}\n\nexport default February2020;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction March2020() {\n    return (\n        <>\n            <article className=\"text-justify\">\n\n                <br /> <br />\n\n                <h3 className=\"text-center\">Monthly Update</h3>\n                <p>\n                    I realized that my blog post from February didn’t include a Monthly Update.\n                    Before diving into creating an image cache, I wanted to provide an update\n                    on some things I have done in February and March:\n                </p>\n\n                <ul>\n                    <li>\n                        Play Catan (and lose)\n                    </li>\n                    <li>\n                        Spend a lot of money on yummy French food for Valentine’s day\n                    </li>\n                    <li>\n                        Participate in\n                        a <a href=\"https://anv4.artbyform.com/\" title=\"FORM's Website\">24-hour song making competition</a>.\n                        My song was 1 of 37 tracks included on the album. You can listen to my track, \"liten snö\", on\n                        the <a href=\"/music\">music section of my website</a>.\n                    </li>\n                    <li>\n                        Attend a Tyler Childers concert.\n                    </li>\n                    <li>\n                        Since March 2019, I have been working to digitize several collections of 35mm slides belonging\n                        to grandparents and great-grandparents on both sides of my family. The slides go as far back as the 1940's,\n                        with the bulk of them being from the 60's-80's. The total amount of slides topped 5000, and in early March I finally\n                        finished the last batch belonging to paternal grandparents.\n                    </li>\n                    <li>\n                        Go skiing in Colorado (more on that below)\n                    </li>\n                    <li>\n                        Turn 27 (what)\n                    </li>\n                    <li>\n                        Start growing seeds for my garden\n                    </li>\n                </ul>\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/playing-catan-ian-james-anna.JPG\"\n                            alt=\"Playing Catan\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Playing Catan with Ian (L), James, and Anna (R)</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/valentines-dinner-anna.JPG\"\n                            alt=\"Dinner with Anna\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Dinner with Anna for Valentine’s Day at Le Deauville</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/form-anv4-listening-party.JPG\"\n                            alt=\"Listening to FORM All Nighter Vol. 4\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Listening party for the FORM All Nighter Vol. 4 album. My song was last, so we had to wait awhile. (Back row, L-R: Mom, Dad, Anna)</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/tyler-childers-concert.JPG\"\n                            alt=\"Tyler Childers Concert\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">At the Tyler Childers concert. Play \"Feathered Indians\" again!!!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/gay-family-slide-blur.png\"\n                            alt=\"An old slide from 1976\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">A digitized 35mm slide: My Dad (left) and his brothers at a hotel pool, August 1976.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/turning-27-1.JPG\"\n                            alt=\"Anna and some birthday gifts\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2\">Due to COVID-19, we celebrated my birthday at the house. Anna made cinnamon rolls for breakfast!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/turning-27-2.JPG\"\n                            alt=\"Food from Stave\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">For birthday dinner, we supported a local restaurant during the COVID-19 shutdown by getting food from The Stave</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/planting-seeds.JPG\"\n                            alt=\"Planting Seeds\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Seed germination: Super excited to plant these in the backyard when the weather warms up!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <br /> <br />\n\n                <h3 className=\"text-center\">Ski Trip</h3>\n\n                <p>\n                    A major perk of doing freelance work is that I was able to take some time off to\n                    go visit my brother in Denver. We left for Colorado on March 11th. When we left, there\n                    were 1,215 cases in the US, which was worrisome, but we didn't think it was enough at that point\n                    to cancel our travel plans. Instead, we took lots of hand sanitizer and wipes, and we were careful on\n                    the plane not to touch our faces and to wash our hands regularly.\n                </p>\n\n                <p>\n                    During our week in Colorado, things continued to look worse and worse. We woke up in the\n                    hotel room to the news of canceled sporting events, and watched throughout the week as the DOW\n                    dropped nearly 3,000 points. We planned on skiing\n                    for 2-3 days (packing our lunch, washing our hands often). The first day, there were no reports of COVID-19\n                    in Breckenridge. On the second day, we noticed that employees were sanitizing tables and that ski lifts were now\n                    loading only members of the same party. On our third day out there, after the first confirmed cases on COVID-19 were\n                    reported on the mountain, the Governor stepped in and shut down all the ski slopes.\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/ski-trip-lift-policy.JPG\" alt=\"COVID-19 Precautions\" />\n                    <figcaption className=\"figure-caption text-center\">Day 2: Breckenridge institutes a \"Load Related Parties Only\" policy for the ski lifts.</figcaption>\n                </figure>\n\n                On a positive note, we really enjoyed seeing <a href=\"\">William</a>! The 2 days that we got on the slopes\n                were awesome. Anna continues to improve as a skier! On only her fourth cumulative ski day,\n                she managed to go down a blue run! After spending the weekend in Breckenridge, we spent a few\n                more days in Denver, mostly in William's apartment due to concerns with COVID-19.\n\n                <br /> <br />\n\n                {/* <!-- Carousel Images --> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/ski-trip-1.JPG\"\n                            alt=\"Anna Skiing\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Anna is a quick learner! (Dad (L), Anna (R))</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/ski-trip-2.JPG\"\n                            alt=\"Falcon Chairlift\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">Dad and I caught the last chair up Peak 10! It was really cool to ski as the mountain was shutting down for the day.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img className=\"d-block w-100\" src=\"/blogAssets/img/ski-trip-3.png\"\n                            alt=\"Hiking in Colorado\" />\n                        <Carousel.Caption>\n                            <p className=\"d-inline-flex px-2 bg-dark rounded\">We went hiking to distance ourselves from other people. To be extra safe, we even social distanced from each other!</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n\n                <br />\n\n                <p>\n                    Near the end of our week in Colorado, we decided that it would be safest to rent a \n                    car and drive home. Once arriving back in Kentucky, we also decided to quarantine \n                    (with the exception of groceries) for 14 days to ensure that we didn't bring any \n                    sickness back with us.\n                </p>\n\n                <br />\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/ski-trip-driving-home.JPG\" alt=\"Driving home\" />\n                    <figcaption className=\"figure-caption text-center\">Driving home from Colorado.</figcaption>\n                </figure>\n\n                <br /> <br />\n\n                <h3 className=\"text-center\">Creating an Image Cache</h3>\n\n                <p>\n                    In addition to doing Freelance work, I have also been \n                    spending my time working through \n                    a <a href=\"https://www.letsbuildthatapp.com/\" title=\"The Let's Build That App website\">LBTA course on building iOS apps</a>. \n                    The course I am working on walks you through development \n                    of an Instagram clone. My app is only about halfway done, \n                    but I wanted to talk about an image cache feature that I \n                    built this week that I thought seemed really important.\n                </p>\n\n                <p>\n                    In computing, a cache is a collection of data, stored by the \n                    computer so that future requests for that data can be served \n                    quickly. Here is a possible real world analogy: imagine you \n                    are a police sketch artist. You spend several hours drawing \n                    suspects 1, 2, and 3. The next day, your star witness \n                    eliminates drawings of suspects 1 and 2. Do you throw away \n                    drawings 1 and 2 immediately? Perhaps not. If your star \n                    witness changes their mind, you would have to redraw suspects \n                    1 and 2. This would result in a lot of duplicated work. \n                    Rather, it might be better to store these drawings, at least \n                    for a little while, as the case progresses.\n                </p>\n\n                <p>\n                    Computer programs do something similar. In my Instagram app, \n                    I have a “home feed” of images from users that I follow. When \n                    I scroll from top to bottom, any image that I scroll past, the app has to load \n                    from <a href=\"https://firebase.google.com/\" title=\"Firebase Website\">Firebase</a>. \n                    When I scroll past an image, should my app forget the data from that image? If \n                    so, when I scroll back to the top of my feed, my app will have to load all of \n                    those images again. That’s a lot of extra work. Instead, my app can cache those \n                    previously loaded images, storing them out of sight in case they are needed \n                    again in the future.\n                </p>\n\n                <div className=\"text-center\">\n                    <figure className=\"figure\" style={{ maxWidth: \"50%\" }}>\n                        <img className=\"img-fluid\" src=\"/blogAssets/img/robbie-instagram-clone-home-feed.png\" alt=\"Instagram Clone Home Feed\" />\n                        <figcaption className=\"figure-caption text-center\">The \"Home Feed\" of my Instagram app clone.</figcaption>\n                    </figure>\n                </div>\n\n                <p>\n                    There are two main reasons why caching is helpful. First, it \n                    decreases data usage. If someone has a limited data plan, they \n                    don’t want to burn through data just to see photos their device \n                    should already have loaded. Second, it increases speed. If a user's \n                    device is on a relatively slow internet connection, they may have \n                    to wait for each file to load. Once the file is loaded, it would be \n                    wasteful for the device to delete the file if there is a reasonable \n                    expectation that the user will access it again soon.\n                </p>\n\n                <h3 className=\"text-center\">My Image Cache Code</h3>\n\n                <p>\n                    Below is an image of my image cache code:\n                </p>\n\n                <figure className=\"figure\">\n                    <img className=\"img-fluid\" src=\"/blogAssets/img/image-cache-code.png\" alt=\"Image Cache Code\" />\n                    <figcaption className=\"figure-caption text-center\">The code for fetching images from Firebase — includes a cache function (lines 21-24).</figcaption>\n                </figure>\n\n                <p>\n                    This code is for a <code>CustomImageView</code> class, an \n                    extension of <code>UIImageView</code>. This custom class allows \n                    me to call a <code>.loadImage(urlString: String)</code> method on an image view, that loads \n                    an image from Firebase and sets the image view image equal to that loaded image. \n                    This abstracts away a lot of repetitive code as I have to load images \n                    from Firebase in several places throughout my Instagram app.\n                </p>\n\n                <p>\n                    On line 11 I declare an <code>imageCache</code> variable. \n                    Since <code>imageCache</code> is declared outside \n                    of our custom class, it is available throughout our entire code \n                    base. <code>imageCache</code> is a dictionary of key-value pairs, \n                    with the keys being Strings and the values being \n                    of the type <code>UIImage</code>. The way key-value pairs work in a dictionary is similar \n                    to how a real world, paper dictionary works: a word (the key) is paired with a \n                    definition (the value). For example, lets say you created a dictionary called colors: \n                </p>\n\n                <p className=\"text-center\">\n                    <code>colors[\"blue\": \"the color of water\", \"red\": \"the color of fire\"]</code>.\n                </p>\n\n                <p>\n                    If you called <code>colors[\"blue\"]</code> the output would be: <code>\"the color of water\"</code>\n                </p>\n\n                <p>\n                    Our code works just like this! The block of code from lines 30 \n                    to 46 fetches our images from Firebase. After fetching the images, \n                    it adds the fetched image to the <code>imageCache</code> dictionary \n                    using the key value of the image's download url String. Let's say for example that \n                    the first image we download has a download url of <code>\"xyz\"</code>.\n                </p>\n\n                <p>\n                    The next time <code>.loadImage(urlString: String)</code> is called, it \n                    will run a test on line 21 to see if the image we are about to download is \n                    already in our cache. If this is a new image (for example, if we have scrolled \n                    down on our feed) with a download url of <code>abc</code>, then the check of \n                    <code>imageCache[\"abc\"]</code> will return <code>nil</code> and the code continues \n                    on to lines 26 and below — fetching this new image from Firebase and adding it \n                    to our cache.\n                </p>\n\n                <p>\n                    Lets say that we now scroll back up on our feed. <code>.loadImage(urlString: String)</code> is \n                    called again, and on line 21, we check to see if the first image with a download \n                    url of <code>\"xyz\"</code> is in our cache. Since it is indeed in our image, we \n                    now enter our conditional block on line 22, setting the <code>CustomImageView</code>'s image \n                    to the cached image (ie. using the cached image as the image to display in the app). \n                    On line 23, we then <code>return</code> out of the <code>.loadImage(urlString: String)</code> method, \n                    never allowing our code to reach lines 30-46 where we would have made an unnecessary \n                    Firebase call.\n                </p>\n\n                <p>\n                    Hopefully I have managed to explain why using caches are useful, and \n                    shown a simple example of how to implement one in your code!\n                </p>\n\n\n\n\n                {/* <!-- White space --> */}\n                <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />\n\n            </article >\n\n\n\n\n\n        </>\n    );\n}\n\nexport default March2020;","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport PageFormat from \"./PageFormat\";\nimport AuthorCard from \"./AuthorCard\";\nimport PWWeek1 from \"./blogPosts/PWWeek1\";\nimport PWWeek2 from \"./blogPosts/PWWeek2\";\nimport PWWeek3 from \"./blogPosts/PWWeek3\";\nimport PWWeek4 from \"./blogPosts/PWWeek4\";\nimport BCWeek1 from \"./blogPosts/BCWeek1\";\nimport BCWeek2 from \"./blogPosts/BCWeek2\";\nimport BCWeek3 from \"./blogPosts/BCWeek3\";\nimport BCWeek4 from \"./blogPosts/BCWeek4\";\nimport BCWeek5 from \"./blogPosts/BCWeek5\";\nimport BCWeek6 from \"./blogPosts/BCWeek6\";\nimport BCWeek7 from \"./blogPosts/BCWeek7\";\nimport BCWeek8 from \"./blogPosts/BCWeek8\";\nimport BCWeek9 from \"./blogPosts/BCWeek9\";\nimport BCWeek10 from \"./blogPosts/BCWeek10\";\nimport BCWeek11 from \"./blogPosts/BCWeek11\";\nimport BCWeek12 from \"./blogPosts/BCWeek12\";\nimport JHWeek1 from \"./blogPosts/JHWeek1\";\nimport JHWeek4 from \"./blogPosts/JHWeek4\";\nimport January2020 from \"./blogPosts/January2020\";\nimport February2020 from \"./blogPosts/February2020\";\nimport March2020 from \"./blogPosts/March2020\";\n\n\nclass BlogPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blogPost: \"\",\n            title: \"\",\n            date: \"\"\n        }\n    }\n\n    getPost() {\n        let idx = window.location.pathname.lastIndexOf(\"/\")\n        let postName = window.location.pathname.slice(idx + 1);\n        switch (postName) {\n            case \"pw-week-1\":\n                this.setState({\n                    blogPost: <PWWeek1 />,\n                    title: \"Prework Week 1: Bootcamp Path and Intro to Git\",\n                    date: <time datetime=\"2019-09-07\">August 30<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"pw-week-2\":\n                this.setState({\n                    blogPost: <PWWeek2 />,\n                    title: \"Prework Week 2: HTML and CSS\",\n                    date: <time datetime=\"2019-09-07\">September 2<sup>nd</sup>,\n                    2019</time>\n                });\n                break;\n            case \"pw-week-3\":\n                this.setState({\n                    blogPost: <PWWeek3 />,\n                    title: \"Prework Week 3: An Introduction to JavaScript\",\n                    date: <time datetime=\"2019-09-07\">September 7<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"pw-week-4\":\n                this.setState({\n                    blogPost: <PWWeek4 />,\n                    title: \"Prework Week 4: More JavaScript, the end of Prework\",\n                    date: <time datetime=\"2019-09-13\">September 13<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-1\":\n                this.setState({\n                    blogPost: <BCWeek1 />,\n                    title: \"Bootcamp Week 1: Bootstrap and Design Theory\",\n                    date: <time datetime=\"2019-09-22\">Sept. 22<sup>nd</sup>, 2019</time>\n                });\n                break;\n            case \"bc-week-2\":\n                this.setState({\n                    blogPost: <BCWeek2 />,\n                    title: \"Bootcamp Week 2: JavaScript Projects\",\n                    date: <time datetime=\"2019-09-29\">Sept. 29<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-3\":\n                this.setState({\n                    blogPost: <BCWeek3 />,\n                    title: \"Bootcamp Week 3: More JavaScript Projects\",\n                    date: <time datetime=\"2019-10-05\">October 5<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-4\":\n                this.setState({\n                    blogPost: <BCWeek4 />,\n                    title: \"Bootcamp Week 4: Saying Goodbye to Vanilla JS\",\n                    date: <time datetime=\"2019-09-07\">October 13<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-5\":\n                this.setState({\n                    blogPost: <BCWeek5 />,\n                    title: \"Bootcamp Week 5: React.JS\",\n                    date: <time datetime=\"2019-09-07\">October 20<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-6\":\n                this.setState({\n                    blogPost: <BCWeek6 />,\n                    title: \"Bootcamp Week 6: More React, A Halfway Point\",\n                    date: <time datetime=\"2019-10-26\">October 26<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-7\":\n                this.setState({\n                    blogPost: <BCWeek7 />,\n                    title: \"Bootcamp Week 7: Back End Development\",\n                    date: <time datetime=\"2019-11-03\">November 3<sup>rd</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-8\":\n                this.setState({\n                    blogPost: <BCWeek8 />,\n                    title: \"Bootcamp Week 8: Laravel Library\",\n                    date: <time datetime=\"2019-11-09\">November 9<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-9\":\n                this.setState({\n                    blogPost: <BCWeek9 />,\n                    title: \"Bootcamp Week 9: Catgram\",\n                    date: <time datetime=\"2019-09-17\">November 17<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-10\":\n                this.setState({\n                    blogPost: <BCWeek10 />,\n                    title: \"Bootcamp Bootcamp Week 9: Final Projects\",\n                    date: <time datetime=\"2019-11-24\">November 24<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-11\":\n                this.setState({\n                    blogPost: <BCWeek11 />,\n                    title: \"Bootcamp Week 11: Final Project Prototype\",\n                    date: <time datetime=\"2019-12-01\">December 1<sup>st</sup>,\n                    2019</time>\n                });\n                break;\n            case \"bc-week-12\":\n                this.setState({\n                    blogPost: <BCWeek12 />,\n                    title: \"Bootcamp Week 12: Demo Day\",\n                    date: <time datetime=\"2019-12-07\">December 7<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"jh-week-1\":\n                this.setState({\n                    blogPost: <JHWeek1 />,\n                    title: \"Job Hunt Week 1: 30-60-90\",\n                    date: <time datetime=\"2019-09-07\">December 15<sup>th</sup>,\n                    2019</time>\n                });\n                break;\n            case \"jh-week-4\":\n                this.setState({\n                    blogPost: <JHWeek4 />,\n                    title: \"Learning React Hooks\",\n                    date: <time datetime=\"2019-09-07\">December 31<sup>st</sup>,\n                    2019</time>\n                });\n                break;\n            case \"jan-2020\":\n                this.setState({\n                    blogPost: <January2020 />,\n                    title: \"Swift vs JavaScript\",\n                    date: <time datetime=\"2020-01-31\">January 31<sup>st</sup>, 2020</time>\n                });\n                break;\n            case \"feb-2020\":\n                this.setState({\n                    blogPost: <February2020 />,\n                    title: \"Design: UI and UX\",\n                    date: <time datetime=\"2020-02-29\">February 29<sup>th</sup>,\n                    2020</time>\n                });\n                break;\n            case \"mar-2020\":\n                this.setState({\n                    blogPost: <March2020 />,\n                    title: \"iOS Development: Creating an Image Cache\",\n                    date: <time datetime=\"2020-03-31\">March 31<sup>st</sup>,\n                    2020</time>\n                });\n                break;\n            default:\n                console.log(\"Error: default case triggered.\");\n        }\n    }\n    componentDidMount() {\n        this.getPost();\n    }\n\n    render() {\n        return (\n            <>\n                <NavBar />\n                <PageFormat>\n                    <AuthorCard title={this.state.title} date={this.state.date} />\n                    {this.state.blogPost}\n                </PageFormat>\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default BlogPost;","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./Homepage\";\nimport Blog from \"./Blog\";\nimport Portfolio from \"./Portfolio\";\nimport Music from \"./Music\";\nimport BlogPost from \".//BlogPost\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  function changePage(pageName) {\n    document.location.href = pageName;\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage style={{ height: \"100vh\", width: \"100vw\" }} changePage={changePage} />\n            </Route>\n            <Route exact path=\"/blog\">\n              <Blog />\n            </Route>\n            <Route path=\"/blog\">\n              <BlogPost />\n            </Route>\n            <Route path=\"/portfolio\">\n              <Portfolio />\n            </Route>\n            <Route path=\"/music\">\n              <Music />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}